"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/web3-eth-abi";
exports.ids = ["vendor-chunks/web3-eth-abi"];
exports.modules = {

/***/ "(ssr)/./node_modules/web3-eth-abi/lib/esm/api/errors_api.js":
/*!*************************************************************!*\
  !*** ./node_modules/web3-eth-abi/lib/esm/api/errors_api.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   encodeErrorSignature: () => (/* binding */ encodeErrorSignature)\n/* harmony export */ });\n/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-utils */ \"(ssr)/./node_modules/web3-utils/lib/esm/index.js\");\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-errors */ \"(ssr)/./node_modules/web3-errors/lib/esm/index.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils.js */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/utils.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ \n\n\n/**\n * Encodes the error name to its ABI signature, which are the sha3 hash of the error name including input types.\n */ const encodeErrorSignature = (functionName)=>{\n    if (typeof functionName !== \"string\" && !(0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.isAbiErrorFragment)(functionName)) {\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_1__.AbiError(\"Invalid parameter value in encodeErrorSignature\");\n    }\n    let name;\n    if (functionName && (typeof functionName === \"function\" || typeof functionName === \"object\")) {\n        name = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.jsonInterfaceMethodToString)(functionName);\n    } else {\n        name = functionName;\n    }\n    return (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.sha3Raw)(name);\n}; //# sourceMappingURL=errors_api.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWJpL2xpYi9lc20vYXBpL2Vycm9yc19hcGkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7Ozs7Ozs7Ozs7Ozs7QUFlQSxHQUNxQztBQUNFO0FBQ3VDO0FBQzlFOztDQUVDLEdBQ00sTUFBTUksdUJBQXVCLENBQUNDO0lBQ2pDLElBQUksT0FBT0EsaUJBQWlCLFlBQVksQ0FBQ0YsNkRBQWtCQSxDQUFDRSxlQUFlO1FBQ3ZFLE1BQU0sSUFBSUosaURBQVFBLENBQUM7SUFDdkI7SUFDQSxJQUFJSztJQUNKLElBQUlELGdCQUFpQixRQUFPQSxpQkFBaUIsY0FBYyxPQUFPQSxpQkFBaUIsUUFBTyxHQUFJO1FBQzFGQyxPQUFPSixzRUFBMkJBLENBQUNHO0lBQ3ZDLE9BQ0s7UUFDREMsT0FBT0Q7SUFDWDtJQUNBLE9BQU9MLG1EQUFPQSxDQUFDTTtBQUNuQixFQUFFLENBQ0Ysc0NBQXNDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWJpL2xpYi9lc20vYXBpL2Vycm9yc19hcGkuanM/YjIwMCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuVGhpcyBmaWxlIGlzIHBhcnQgb2Ygd2ViMy5qcy5cblxud2ViMy5qcyBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5XG5pdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnlcbnRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yXG4oYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLlxuXG53ZWIzLmpzIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsXG5idXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZlxuTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZVxuR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG5cbllvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZVxuYWxvbmcgd2l0aCB3ZWIzLmpzLiAgSWYgbm90LCBzZWUgPGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LlxuKi9cbmltcG9ydCB7IHNoYTNSYXcgfSBmcm9tICd3ZWIzLXV0aWxzJztcbmltcG9ydCB7IEFiaUVycm9yIH0gZnJvbSAnd2ViMy1lcnJvcnMnO1xuaW1wb3J0IHsganNvbkludGVyZmFjZU1ldGhvZFRvU3RyaW5nLCBpc0FiaUVycm9yRnJhZ21lbnQgfSBmcm9tICcuLi91dGlscy5qcyc7XG4vKipcbiAqIEVuY29kZXMgdGhlIGVycm9yIG5hbWUgdG8gaXRzIEFCSSBzaWduYXR1cmUsIHdoaWNoIGFyZSB0aGUgc2hhMyBoYXNoIG9mIHRoZSBlcnJvciBuYW1lIGluY2x1ZGluZyBpbnB1dCB0eXBlcy5cbiAqL1xuZXhwb3J0IGNvbnN0IGVuY29kZUVycm9yU2lnbmF0dXJlID0gKGZ1bmN0aW9uTmFtZSkgPT4ge1xuICAgIGlmICh0eXBlb2YgZnVuY3Rpb25OYW1lICE9PSAnc3RyaW5nJyAmJiAhaXNBYmlFcnJvckZyYWdtZW50KGZ1bmN0aW9uTmFtZSkpIHtcbiAgICAgICAgdGhyb3cgbmV3IEFiaUVycm9yKCdJbnZhbGlkIHBhcmFtZXRlciB2YWx1ZSBpbiBlbmNvZGVFcnJvclNpZ25hdHVyZScpO1xuICAgIH1cbiAgICBsZXQgbmFtZTtcbiAgICBpZiAoZnVuY3Rpb25OYW1lICYmICh0eXBlb2YgZnVuY3Rpb25OYW1lID09PSAnZnVuY3Rpb24nIHx8IHR5cGVvZiBmdW5jdGlvbk5hbWUgPT09ICdvYmplY3QnKSkge1xuICAgICAgICBuYW1lID0ganNvbkludGVyZmFjZU1ldGhvZFRvU3RyaW5nKGZ1bmN0aW9uTmFtZSk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBuYW1lID0gZnVuY3Rpb25OYW1lO1xuICAgIH1cbiAgICByZXR1cm4gc2hhM1JhdyhuYW1lKTtcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1lcnJvcnNfYXBpLmpzLm1hcCJdLCJuYW1lcyI6WyJzaGEzUmF3IiwiQWJpRXJyb3IiLCJqc29uSW50ZXJmYWNlTWV0aG9kVG9TdHJpbmciLCJpc0FiaUVycm9yRnJhZ21lbnQiLCJlbmNvZGVFcnJvclNpZ25hdHVyZSIsImZ1bmN0aW9uTmFtZSIsIm5hbWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-abi/lib/esm/api/errors_api.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-abi/lib/esm/api/events_api.js":
/*!*************************************************************!*\
  !*** ./node_modules/web3-eth-abi/lib/esm/api/events_api.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   encodeEventSignature: () => (/* binding */ encodeEventSignature)\n/* harmony export */ });\n/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-utils */ \"(ssr)/./node_modules/web3-utils/lib/esm/index.js\");\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-errors */ \"(ssr)/./node_modules/web3-errors/lib/esm/index.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils.js */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/utils.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ \n\n\n/**\n * Encodes the event name to its ABI signature, which are the sha3 hash of the event name including input types.\n * @param functionName - The event name to encode, or the {@link AbiEventFragment} object of the event. If string, it has to be in the form of `eventName(param1Type,param2Type,...)`. eg: myEvent(uint256,bytes32).\n * @returns - The ABI signature of the event.\n *\n * @example\n * ```ts\n * const event = web3.eth.abi.encodeEventSignature({\n *   name: \"myEvent\",\n *   type: \"event\",\n *   inputs: [\n *     {\n *       type: \"uint256\",\n *       name: \"myNumber\",\n *     },\n *     {\n *       type: \"bytes32\",\n *       name: \"myBytes\",\n *     },\n *   ],\n * });\n * console.log(event);\n * > 0xf2eeb729e636a8cb783be044acf6b7b1e2c5863735b60d6daae84c366ee87d97\n *\n *  const event = web3.eth.abi.encodeEventSignature({\n *   inputs: [\n *     {\n *       indexed: true,\n *       name: \"from\",\n *       type: \"address\",\n *     },\n *     {\n *       indexed: true,\n *       name: \"to\",\n *       type: \"address\",\n *     },\n *     {\n *       indexed: false,\n *       name: \"value\",\n *       type: \"uint256\",\n *     },\n *   ],\n *   name: \"Transfer\",\n *   type: \"event\",\n * });\n * console.log(event);\n * > 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n * ```\n */ const encodeEventSignature = (functionName)=>{\n    if (typeof functionName !== \"string\" && !(0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.isAbiEventFragment)(functionName)) {\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_1__.AbiError(\"Invalid parameter value in encodeEventSignature\");\n    }\n    let name;\n    if (functionName && (typeof functionName === \"function\" || typeof functionName === \"object\")) {\n        name = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.jsonInterfaceMethodToString)(functionName);\n    } else {\n        name = functionName;\n    }\n    return (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.sha3Raw)(name);\n}; //# sourceMappingURL=events_api.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWJpL2xpYi9lc20vYXBpL2V2ZW50c19hcGkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7Ozs7Ozs7Ozs7Ozs7QUFlQSxHQUNxQztBQUNFO0FBQ3VDO0FBQzlFOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Q0FnREMsR0FDTSxNQUFNSSx1QkFBdUIsQ0FBQ0M7SUFDakMsSUFBSSxPQUFPQSxpQkFBaUIsWUFBWSxDQUFDRiw2REFBa0JBLENBQUNFLGVBQWU7UUFDdkUsTUFBTSxJQUFJSixpREFBUUEsQ0FBQztJQUN2QjtJQUNBLElBQUlLO0lBQ0osSUFBSUQsZ0JBQWlCLFFBQU9BLGlCQUFpQixjQUFjLE9BQU9BLGlCQUFpQixRQUFPLEdBQUk7UUFDMUZDLE9BQU9KLHNFQUEyQkEsQ0FBQ0c7SUFDdkMsT0FDSztRQUNEQyxPQUFPRDtJQUNYO0lBQ0EsT0FBT0wsbURBQU9BLENBQUNNO0FBQ25CLEVBQUUsQ0FDRixzQ0FBc0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mcm9udGVuZC8uL25vZGVfbW9kdWxlcy93ZWIzLWV0aC1hYmkvbGliL2VzbS9hcGkvZXZlbnRzX2FwaS5qcz84ZDdlIl0sInNvdXJjZXNDb250ZW50IjpbIi8qXG5UaGlzIGZpbGUgaXMgcGFydCBvZiB3ZWIzLmpzLlxuXG53ZWIzLmpzIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnlcbml0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieVxudGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSwgb3JcbihhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uXG5cbndlYjMuanMgaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCxcbmJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mXG5NRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlXG5HTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy5cblxuWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG5hbG9uZyB3aXRoIHdlYjMuanMuICBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uXG4qL1xuaW1wb3J0IHsgc2hhM1JhdyB9IGZyb20gJ3dlYjMtdXRpbHMnO1xuaW1wb3J0IHsgQWJpRXJyb3IgfSBmcm9tICd3ZWIzLWVycm9ycyc7XG5pbXBvcnQgeyBqc29uSW50ZXJmYWNlTWV0aG9kVG9TdHJpbmcsIGlzQWJpRXZlbnRGcmFnbWVudCB9IGZyb20gJy4uL3V0aWxzLmpzJztcbi8qKlxuICogRW5jb2RlcyB0aGUgZXZlbnQgbmFtZSB0byBpdHMgQUJJIHNpZ25hdHVyZSwgd2hpY2ggYXJlIHRoZSBzaGEzIGhhc2ggb2YgdGhlIGV2ZW50IG5hbWUgaW5jbHVkaW5nIGlucHV0IHR5cGVzLlxuICogQHBhcmFtIGZ1bmN0aW9uTmFtZSAtIFRoZSBldmVudCBuYW1lIHRvIGVuY29kZSwgb3IgdGhlIHtAbGluayBBYmlFdmVudEZyYWdtZW50fSBvYmplY3Qgb2YgdGhlIGV2ZW50LiBJZiBzdHJpbmcsIGl0IGhhcyB0byBiZSBpbiB0aGUgZm9ybSBvZiBgZXZlbnROYW1lKHBhcmFtMVR5cGUscGFyYW0yVHlwZSwuLi4pYC4gZWc6IG15RXZlbnQodWludDI1NixieXRlczMyKS5cbiAqIEByZXR1cm5zIC0gVGhlIEFCSSBzaWduYXR1cmUgb2YgdGhlIGV2ZW50LlxuICpcbiAqIEBleGFtcGxlXG4gKiBgYGB0c1xuICogY29uc3QgZXZlbnQgPSB3ZWIzLmV0aC5hYmkuZW5jb2RlRXZlbnRTaWduYXR1cmUoe1xuICogICBuYW1lOiBcIm15RXZlbnRcIixcbiAqICAgdHlwZTogXCJldmVudFwiLFxuICogICBpbnB1dHM6IFtcbiAqICAgICB7XG4gKiAgICAgICB0eXBlOiBcInVpbnQyNTZcIixcbiAqICAgICAgIG5hbWU6IFwibXlOdW1iZXJcIixcbiAqICAgICB9LFxuICogICAgIHtcbiAqICAgICAgIHR5cGU6IFwiYnl0ZXMzMlwiLFxuICogICAgICAgbmFtZTogXCJteUJ5dGVzXCIsXG4gKiAgICAgfSxcbiAqICAgXSxcbiAqIH0pO1xuICogY29uc29sZS5sb2coZXZlbnQpO1xuICogPiAweGYyZWViNzI5ZTYzNmE4Y2I3ODNiZTA0NGFjZjZiN2IxZTJjNTg2MzczNWI2MGQ2ZGFhZTg0YzM2NmVlODdkOTdcbiAqXG4gKiAgY29uc3QgZXZlbnQgPSB3ZWIzLmV0aC5hYmkuZW5jb2RlRXZlbnRTaWduYXR1cmUoe1xuICogICBpbnB1dHM6IFtcbiAqICAgICB7XG4gKiAgICAgICBpbmRleGVkOiB0cnVlLFxuICogICAgICAgbmFtZTogXCJmcm9tXCIsXG4gKiAgICAgICB0eXBlOiBcImFkZHJlc3NcIixcbiAqICAgICB9LFxuICogICAgIHtcbiAqICAgICAgIGluZGV4ZWQ6IHRydWUsXG4gKiAgICAgICBuYW1lOiBcInRvXCIsXG4gKiAgICAgICB0eXBlOiBcImFkZHJlc3NcIixcbiAqICAgICB9LFxuICogICAgIHtcbiAqICAgICAgIGluZGV4ZWQ6IGZhbHNlLFxuICogICAgICAgbmFtZTogXCJ2YWx1ZVwiLFxuICogICAgICAgdHlwZTogXCJ1aW50MjU2XCIsXG4gKiAgICAgfSxcbiAqICAgXSxcbiAqICAgbmFtZTogXCJUcmFuc2ZlclwiLFxuICogICB0eXBlOiBcImV2ZW50XCIsXG4gKiB9KTtcbiAqIGNvbnNvbGUubG9nKGV2ZW50KTtcbiAqID4gMHhkZGYyNTJhZDFiZTJjODliNjljMmIwNjhmYzM3OGRhYTk1MmJhN2YxNjNjNGExMTYyOGY1NWE0ZGY1MjNiM2VmXG4gKiBgYGBcbiAqL1xuZXhwb3J0IGNvbnN0IGVuY29kZUV2ZW50U2lnbmF0dXJlID0gKGZ1bmN0aW9uTmFtZSkgPT4ge1xuICAgIGlmICh0eXBlb2YgZnVuY3Rpb25OYW1lICE9PSAnc3RyaW5nJyAmJiAhaXNBYmlFdmVudEZyYWdtZW50KGZ1bmN0aW9uTmFtZSkpIHtcbiAgICAgICAgdGhyb3cgbmV3IEFiaUVycm9yKCdJbnZhbGlkIHBhcmFtZXRlciB2YWx1ZSBpbiBlbmNvZGVFdmVudFNpZ25hdHVyZScpO1xuICAgIH1cbiAgICBsZXQgbmFtZTtcbiAgICBpZiAoZnVuY3Rpb25OYW1lICYmICh0eXBlb2YgZnVuY3Rpb25OYW1lID09PSAnZnVuY3Rpb24nIHx8IHR5cGVvZiBmdW5jdGlvbk5hbWUgPT09ICdvYmplY3QnKSkge1xuICAgICAgICBuYW1lID0ganNvbkludGVyZmFjZU1ldGhvZFRvU3RyaW5nKGZ1bmN0aW9uTmFtZSk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBuYW1lID0gZnVuY3Rpb25OYW1lO1xuICAgIH1cbiAgICByZXR1cm4gc2hhM1JhdyhuYW1lKTtcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1ldmVudHNfYXBpLmpzLm1hcCJdLCJuYW1lcyI6WyJzaGEzUmF3IiwiQWJpRXJyb3IiLCJqc29uSW50ZXJmYWNlTWV0aG9kVG9TdHJpbmciLCJpc0FiaUV2ZW50RnJhZ21lbnQiLCJlbmNvZGVFdmVudFNpZ25hdHVyZSIsImZ1bmN0aW9uTmFtZSIsIm5hbWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-abi/lib/esm/api/events_api.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-abi/lib/esm/api/functions_api.js":
/*!****************************************************************!*\
  !*** ./node_modules/web3-eth-abi/lib/esm/api/functions_api.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   encodeFunctionCall: () => (/* binding */ encodeFunctionCall),\n/* harmony export */   encodeFunctionSignature: () => (/* binding */ encodeFunctionSignature)\n/* harmony export */ });\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-errors */ \"(ssr)/./node_modules/web3-errors/lib/esm/index.js\");\n/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-utils */ \"(ssr)/./node_modules/web3-utils/lib/esm/index.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils.js */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/utils.js\");\n/* harmony import */ var _parameters_api_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./parameters_api.js */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/api/parameters_api.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ \n\n\n\n// todo Add link to JSON interface documentation\n/**\n * Encodes the function name to its ABI representation, which are the first 4 bytes of the sha3 of the function name including  types.\n * @param functionName - The function name to encode or the `JSON interface` object of the function.\n * If the passed parameter is a string, it has to be in the form of `functionName(param1Type,param2Type,...)`. eg: myFunction(uint256,uint32[],bytes10,bytes)\n * @returns - The ABI signature of the function.\n * @example\n * ```ts\n * const signature = web3.eth.abi.encodeFunctionSignature({\n *   name: \"myMethod\",\n *   type: \"function\",\n *   inputs: [\n *     {\n *       type: \"uint256\",\n *       name: \"myNumber\",\n *     },\n *     {\n *       type: \"string\",\n *       name: \"myString\",\n *     },\n *   ],\n * });\n * console.log(signature);\n * > 0x24ee0097\n *\n * const signature = web3.eth.abi.encodeFunctionSignature('myMethod(uint256,string)')\n * console.log(signature);\n * > 0x24ee0097\n *\n * const signature = web3.eth.abi.encodeFunctionSignature('safeTransferFrom(address,address,uint256,bytes)');\n * console.log(signature);\n * > 0xb88d4fde\n * ```\n */ const encodeFunctionSignature = (functionName)=>{\n    if (typeof functionName !== \"string\" && !(0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.isAbiFunctionFragment)(functionName)) {\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.AbiError(\"Invalid parameter value in encodeFunctionSignature\");\n    }\n    let name;\n    if (functionName && (typeof functionName === \"function\" || typeof functionName === \"object\")) {\n        name = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.jsonInterfaceMethodToString)(functionName);\n    } else {\n        name = functionName;\n    }\n    return (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.sha3Raw)(name).slice(0, 10);\n};\n// todo Add link to JSON interface documentation\n/**\n * Encodes a function call using its `JSON interface` object and given parameters.\n * @param jsonInterface - The `JSON interface` object of the function.\n * @param params - The parameters to encode\n * @returns - The ABI encoded function call, which, means the function signature and the parameters passed.\n * @example\n * ```ts\n * const sig = web3.eth.abi.encodeFunctionCall(\n *   {\n *     name: \"myMethod\",\n *     type: \"function\",\n *     inputs: [\n *       {\n *         type: \"uint256\",\n *         name: \"myNumber\",\n *       },\n *       {\n *         type: \"string\",\n *         name: \"myString\",\n *       },\n *     ],\n *   },\n *   [\"2345675643\", \"Hello!%\"]\n * );\n * console.log(sig);\n * > 0x24ee0097000000000000000000000000000000000000000000000000000000008bd02b7b0000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000748656c6c6f212500000000000000000000000000000000000000000000000000\n *\n *\n *\n * const sig = web3.eth.abi.encodeFunctionCall(\n *   {\n *     inputs: [\n *       {\n *         name: \"account\",\n *         type: \"address\",\n *       },\n *     ],\n *     name: \"balanceOf\",\n *     outputs: [\n *       {\n *         name: \"\",\n *         type: \"uint256\",\n *       },\n *     ],\n *     stateMutability: \"view\",\n *     type: \"function\",\n *   },\n *   [\"0x1234567890123456789012345678901234567890\"]\n * );\n *\n * console.log(sig);\n * > 0x70a082310000000000000000000000001234567890123456789012345678901234567890\n * ```\n */ const encodeFunctionCall = (jsonInterface, params)=>{\n    var _a;\n    if (!(0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.isAbiFunctionFragment)(jsonInterface)) {\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.AbiError(\"Invalid parameter value in encodeFunctionCall\");\n    }\n    return `${encodeFunctionSignature(jsonInterface)}${(0,_parameters_api_js__WEBPACK_IMPORTED_MODULE_3__.encodeParameters)((_a = jsonInterface.inputs) !== null && _a !== void 0 ? _a : [], params !== null && params !== void 0 ? params : []).replace(\"0x\", \"\")}`;\n}; //# sourceMappingURL=functions_api.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWJpL2xpYi9lc20vYXBpL2Z1bmN0aW9uc19hcGkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7Ozs7Ozs7Ozs7Ozs7OztBQWVBLEdBQ3VDO0FBQ0Y7QUFDNEM7QUFDMUI7QUFDdkQsZ0RBQWdEO0FBQ2hEOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztDQWdDQyxHQUNNLE1BQU1LLDBCQUEwQixDQUFDQztJQUNwQyxJQUFJLE9BQU9BLGlCQUFpQixZQUFZLENBQUNKLGdFQUFxQkEsQ0FBQ0ksZUFBZTtRQUMxRSxNQUFNLElBQUlOLGlEQUFRQSxDQUFDO0lBQ3ZCO0lBQ0EsSUFBSU87SUFDSixJQUFJRCxnQkFBaUIsUUFBT0EsaUJBQWlCLGNBQWMsT0FBT0EsaUJBQWlCLFFBQU8sR0FBSTtRQUMxRkMsT0FBT0osc0VBQTJCQSxDQUFDRztJQUN2QyxPQUNLO1FBQ0RDLE9BQU9EO0lBQ1g7SUFDQSxPQUFPTCxtREFBT0EsQ0FBQ00sTUFBTUMsS0FBSyxDQUFDLEdBQUc7QUFDbEMsRUFBRTtBQUNGLGdEQUFnRDtBQUNoRDs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Q0FxREMsR0FDTSxNQUFNQyxxQkFBcUIsQ0FBQ0MsZUFBZUM7SUFDOUMsSUFBSUM7SUFDSixJQUFJLENBQUNWLGdFQUFxQkEsQ0FBQ1EsZ0JBQWdCO1FBQ3ZDLE1BQU0sSUFBSVYsaURBQVFBLENBQUM7SUFDdkI7SUFDQSxPQUFPLENBQUMsRUFBRUssd0JBQXdCSyxlQUFlLEVBQUVOLG9FQUFnQkEsQ0FBQyxDQUFDUSxLQUFLRixjQUFjRyxNQUFNLE1BQU0sUUFBUUQsT0FBTyxLQUFLLElBQUlBLEtBQUssRUFBRSxFQUFFRCxXQUFXLFFBQVFBLFdBQVcsS0FBSyxJQUFJQSxTQUFTLEVBQUUsRUFBRUcsT0FBTyxDQUFDLE1BQU0sSUFBSSxDQUFDO0FBQ2hOLEVBQUUsQ0FDRix5Q0FBeUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mcm9udGVuZC8uL25vZGVfbW9kdWxlcy93ZWIzLWV0aC1hYmkvbGliL2VzbS9hcGkvZnVuY3Rpb25zX2FwaS5qcz80NmIzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qXG5UaGlzIGZpbGUgaXMgcGFydCBvZiB3ZWIzLmpzLlxuXG53ZWIzLmpzIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnlcbml0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieVxudGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSwgb3JcbihhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uXG5cbndlYjMuanMgaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCxcbmJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mXG5NRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlXG5HTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy5cblxuWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG5hbG9uZyB3aXRoIHdlYjMuanMuICBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uXG4qL1xuaW1wb3J0IHsgQWJpRXJyb3IgfSBmcm9tICd3ZWIzLWVycm9ycyc7XG5pbXBvcnQgeyBzaGEzUmF3IH0gZnJvbSAnd2ViMy11dGlscyc7XG5pbXBvcnQgeyBpc0FiaUZ1bmN0aW9uRnJhZ21lbnQsIGpzb25JbnRlcmZhY2VNZXRob2RUb1N0cmluZyB9IGZyb20gJy4uL3V0aWxzLmpzJztcbmltcG9ydCB7IGVuY29kZVBhcmFtZXRlcnMgfSBmcm9tICcuL3BhcmFtZXRlcnNfYXBpLmpzJztcbi8vIHRvZG8gQWRkIGxpbmsgdG8gSlNPTiBpbnRlcmZhY2UgZG9jdW1lbnRhdGlvblxuLyoqXG4gKiBFbmNvZGVzIHRoZSBmdW5jdGlvbiBuYW1lIHRvIGl0cyBBQkkgcmVwcmVzZW50YXRpb24sIHdoaWNoIGFyZSB0aGUgZmlyc3QgNCBieXRlcyBvZiB0aGUgc2hhMyBvZiB0aGUgZnVuY3Rpb24gbmFtZSBpbmNsdWRpbmcgIHR5cGVzLlxuICogQHBhcmFtIGZ1bmN0aW9uTmFtZSAtIFRoZSBmdW5jdGlvbiBuYW1lIHRvIGVuY29kZSBvciB0aGUgYEpTT04gaW50ZXJmYWNlYCBvYmplY3Qgb2YgdGhlIGZ1bmN0aW9uLlxuICogSWYgdGhlIHBhc3NlZCBwYXJhbWV0ZXIgaXMgYSBzdHJpbmcsIGl0IGhhcyB0byBiZSBpbiB0aGUgZm9ybSBvZiBgZnVuY3Rpb25OYW1lKHBhcmFtMVR5cGUscGFyYW0yVHlwZSwuLi4pYC4gZWc6IG15RnVuY3Rpb24odWludDI1Nix1aW50MzJbXSxieXRlczEwLGJ5dGVzKVxuICogQHJldHVybnMgLSBUaGUgQUJJIHNpZ25hdHVyZSBvZiB0aGUgZnVuY3Rpb24uXG4gKiBAZXhhbXBsZVxuICogYGBgdHNcbiAqIGNvbnN0IHNpZ25hdHVyZSA9IHdlYjMuZXRoLmFiaS5lbmNvZGVGdW5jdGlvblNpZ25hdHVyZSh7XG4gKiAgIG5hbWU6IFwibXlNZXRob2RcIixcbiAqICAgdHlwZTogXCJmdW5jdGlvblwiLFxuICogICBpbnB1dHM6IFtcbiAqICAgICB7XG4gKiAgICAgICB0eXBlOiBcInVpbnQyNTZcIixcbiAqICAgICAgIG5hbWU6IFwibXlOdW1iZXJcIixcbiAqICAgICB9LFxuICogICAgIHtcbiAqICAgICAgIHR5cGU6IFwic3RyaW5nXCIsXG4gKiAgICAgICBuYW1lOiBcIm15U3RyaW5nXCIsXG4gKiAgICAgfSxcbiAqICAgXSxcbiAqIH0pO1xuICogY29uc29sZS5sb2coc2lnbmF0dXJlKTtcbiAqID4gMHgyNGVlMDA5N1xuICpcbiAqIGNvbnN0IHNpZ25hdHVyZSA9IHdlYjMuZXRoLmFiaS5lbmNvZGVGdW5jdGlvblNpZ25hdHVyZSgnbXlNZXRob2QodWludDI1NixzdHJpbmcpJylcbiAqIGNvbnNvbGUubG9nKHNpZ25hdHVyZSk7XG4gKiA+IDB4MjRlZTAwOTdcbiAqXG4gKiBjb25zdCBzaWduYXR1cmUgPSB3ZWIzLmV0aC5hYmkuZW5jb2RlRnVuY3Rpb25TaWduYXR1cmUoJ3NhZmVUcmFuc2ZlckZyb20oYWRkcmVzcyxhZGRyZXNzLHVpbnQyNTYsYnl0ZXMpJyk7XG4gKiBjb25zb2xlLmxvZyhzaWduYXR1cmUpO1xuICogPiAweGI4OGQ0ZmRlXG4gKiBgYGBcbiAqL1xuZXhwb3J0IGNvbnN0IGVuY29kZUZ1bmN0aW9uU2lnbmF0dXJlID0gKGZ1bmN0aW9uTmFtZSkgPT4ge1xuICAgIGlmICh0eXBlb2YgZnVuY3Rpb25OYW1lICE9PSAnc3RyaW5nJyAmJiAhaXNBYmlGdW5jdGlvbkZyYWdtZW50KGZ1bmN0aW9uTmFtZSkpIHtcbiAgICAgICAgdGhyb3cgbmV3IEFiaUVycm9yKCdJbnZhbGlkIHBhcmFtZXRlciB2YWx1ZSBpbiBlbmNvZGVGdW5jdGlvblNpZ25hdHVyZScpO1xuICAgIH1cbiAgICBsZXQgbmFtZTtcbiAgICBpZiAoZnVuY3Rpb25OYW1lICYmICh0eXBlb2YgZnVuY3Rpb25OYW1lID09PSAnZnVuY3Rpb24nIHx8IHR5cGVvZiBmdW5jdGlvbk5hbWUgPT09ICdvYmplY3QnKSkge1xuICAgICAgICBuYW1lID0ganNvbkludGVyZmFjZU1ldGhvZFRvU3RyaW5nKGZ1bmN0aW9uTmFtZSk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBuYW1lID0gZnVuY3Rpb25OYW1lO1xuICAgIH1cbiAgICByZXR1cm4gc2hhM1JhdyhuYW1lKS5zbGljZSgwLCAxMCk7XG59O1xuLy8gdG9kbyBBZGQgbGluayB0byBKU09OIGludGVyZmFjZSBkb2N1bWVudGF0aW9uXG4vKipcbiAqIEVuY29kZXMgYSBmdW5jdGlvbiBjYWxsIHVzaW5nIGl0cyBgSlNPTiBpbnRlcmZhY2VgIG9iamVjdCBhbmQgZ2l2ZW4gcGFyYW1ldGVycy5cbiAqIEBwYXJhbSBqc29uSW50ZXJmYWNlIC0gVGhlIGBKU09OIGludGVyZmFjZWAgb2JqZWN0IG9mIHRoZSBmdW5jdGlvbi5cbiAqIEBwYXJhbSBwYXJhbXMgLSBUaGUgcGFyYW1ldGVycyB0byBlbmNvZGVcbiAqIEByZXR1cm5zIC0gVGhlIEFCSSBlbmNvZGVkIGZ1bmN0aW9uIGNhbGwsIHdoaWNoLCBtZWFucyB0aGUgZnVuY3Rpb24gc2lnbmF0dXJlIGFuZCB0aGUgcGFyYW1ldGVycyBwYXNzZWQuXG4gKiBAZXhhbXBsZVxuICogYGBgdHNcbiAqIGNvbnN0IHNpZyA9IHdlYjMuZXRoLmFiaS5lbmNvZGVGdW5jdGlvbkNhbGwoXG4gKiAgIHtcbiAqICAgICBuYW1lOiBcIm15TWV0aG9kXCIsXG4gKiAgICAgdHlwZTogXCJmdW5jdGlvblwiLFxuICogICAgIGlucHV0czogW1xuICogICAgICAge1xuICogICAgICAgICB0eXBlOiBcInVpbnQyNTZcIixcbiAqICAgICAgICAgbmFtZTogXCJteU51bWJlclwiLFxuICogICAgICAgfSxcbiAqICAgICAgIHtcbiAqICAgICAgICAgdHlwZTogXCJzdHJpbmdcIixcbiAqICAgICAgICAgbmFtZTogXCJteVN0cmluZ1wiLFxuICogICAgICAgfSxcbiAqICAgICBdLFxuICogICB9LFxuICogICBbXCIyMzQ1Njc1NjQzXCIsIFwiSGVsbG8hJVwiXVxuICogKTtcbiAqIGNvbnNvbGUubG9nKHNpZyk7XG4gKiA+IDB4MjRlZTAwOTcwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDhiZDAyYjdiMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDA0MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDc0ODY1NmM2YzZmMjEyNTAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXG4gKlxuICpcbiAqXG4gKiBjb25zdCBzaWcgPSB3ZWIzLmV0aC5hYmkuZW5jb2RlRnVuY3Rpb25DYWxsKFxuICogICB7XG4gKiAgICAgaW5wdXRzOiBbXG4gKiAgICAgICB7XG4gKiAgICAgICAgIG5hbWU6IFwiYWNjb3VudFwiLFxuICogICAgICAgICB0eXBlOiBcImFkZHJlc3NcIixcbiAqICAgICAgIH0sXG4gKiAgICAgXSxcbiAqICAgICBuYW1lOiBcImJhbGFuY2VPZlwiLFxuICogICAgIG91dHB1dHM6IFtcbiAqICAgICAgIHtcbiAqICAgICAgICAgbmFtZTogXCJcIixcbiAqICAgICAgICAgdHlwZTogXCJ1aW50MjU2XCIsXG4gKiAgICAgICB9LFxuICogICAgIF0sXG4gKiAgICAgc3RhdGVNdXRhYmlsaXR5OiBcInZpZXdcIixcbiAqICAgICB0eXBlOiBcImZ1bmN0aW9uXCIsXG4gKiAgIH0sXG4gKiAgIFtcIjB4MTIzNDU2Nzg5MDEyMzQ1Njc4OTAxMjM0NTY3ODkwMTIzNDU2Nzg5MFwiXVxuICogKTtcbiAqXG4gKiBjb25zb2xlLmxvZyhzaWcpO1xuICogPiAweDcwYTA4MjMxMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMTIzNDU2Nzg5MDEyMzQ1Njc4OTAxMjM0NTY3ODkwMTIzNDU2Nzg5MFxuICogYGBgXG4gKi9cbmV4cG9ydCBjb25zdCBlbmNvZGVGdW5jdGlvbkNhbGwgPSAoanNvbkludGVyZmFjZSwgcGFyYW1zKSA9PiB7XG4gICAgdmFyIF9hO1xuICAgIGlmICghaXNBYmlGdW5jdGlvbkZyYWdtZW50KGpzb25JbnRlcmZhY2UpKSB7XG4gICAgICAgIHRocm93IG5ldyBBYmlFcnJvcignSW52YWxpZCBwYXJhbWV0ZXIgdmFsdWUgaW4gZW5jb2RlRnVuY3Rpb25DYWxsJyk7XG4gICAgfVxuICAgIHJldHVybiBgJHtlbmNvZGVGdW5jdGlvblNpZ25hdHVyZShqc29uSW50ZXJmYWNlKX0ke2VuY29kZVBhcmFtZXRlcnMoKF9hID0ganNvbkludGVyZmFjZS5pbnB1dHMpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IFtdLCBwYXJhbXMgIT09IG51bGwgJiYgcGFyYW1zICE9PSB2b2lkIDAgPyBwYXJhbXMgOiBbXSkucmVwbGFjZSgnMHgnLCAnJyl9YDtcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1mdW5jdGlvbnNfYXBpLmpzLm1hcCJdLCJuYW1lcyI6WyJBYmlFcnJvciIsInNoYTNSYXciLCJpc0FiaUZ1bmN0aW9uRnJhZ21lbnQiLCJqc29uSW50ZXJmYWNlTWV0aG9kVG9TdHJpbmciLCJlbmNvZGVQYXJhbWV0ZXJzIiwiZW5jb2RlRnVuY3Rpb25TaWduYXR1cmUiLCJmdW5jdGlvbk5hbWUiLCJuYW1lIiwic2xpY2UiLCJlbmNvZGVGdW5jdGlvbkNhbGwiLCJqc29uSW50ZXJmYWNlIiwicGFyYW1zIiwiX2EiLCJpbnB1dHMiLCJyZXBsYWNlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-abi/lib/esm/api/functions_api.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-abi/lib/esm/api/logs_api.js":
/*!***********************************************************!*\
  !*** ./node_modules/web3-eth-abi/lib/esm/api/logs_api.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeLog: () => (/* binding */ decodeLog)\n/* harmony export */ });\n/* harmony import */ var _parameters_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./parameters_api.js */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/api/parameters_api.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ \nconst STATIC_TYPES = [\n    \"bool\",\n    \"string\",\n    \"int\",\n    \"uint\",\n    \"address\",\n    \"fixed\",\n    \"ufixed\"\n];\nconst _decodeParameter = (inputType, clonedTopic)=>inputType === \"string\" ? clonedTopic : (0,_parameters_api_js__WEBPACK_IMPORTED_MODULE_0__.decodeParameter)(inputType, clonedTopic);\n/**\n * Decodes ABI-encoded log data and indexed topic data.\n * @param inputs - A {@link AbiParameter} input array. See the [Solidity documentation](https://docs.soliditylang.org/en/develop/types.html) for a list of types.\n * @param data - The ABI byte code in the `data` field of a log.\n * @param topics - An array with the index parameter topics of the log, without the topic[0] if its a non-anonymous event, otherwise with topic[0]\n * @returns - The result object containing the decoded parameters.\n *\n * @example\n * ```ts\n * let res = web3.eth.abi.decodeLog(\n *    [\n *      {\n *        type: \"string\",\n *        name: \"myString\",\n *      },\n *      {\n *        type: \"uint256\",\n *        name: \"myNumber\",\n *        indexed: true,\n *      },\n *      {\n *        type: \"uint8\",\n *        name: \"mySmallNumber\",\n *        indexed: true,\n *      },\n *    ],\n *    \"0x0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000748656c6c6f252100000000000000000000000000000000000000000000000000\",\n *    [\n *      \"0x000000000000000000000000000000000000000000000000000000000000f310\",\n *      \"0x0000000000000000000000000000000000000000000000000000000000000010\",\n *    ]\n *  );\n * > {\n *  '0': 'Hello%!',\n *  '1': 62224n,\n *  '2': 16n,\n *  __length__: 3,\n *  myString: 'Hello%!',\n *  myNumber: 62224n,\n *  mySmallNumber: 16n\n * }\n * ```\n */ const decodeLog = (inputs, data, topics)=>{\n    const clonedTopics = Array.isArray(topics) ? topics : [\n        topics\n    ];\n    const indexedInputs = {};\n    const nonIndexedInputs = {};\n    for (const [i, input] of inputs.entries()){\n        if (input.indexed) {\n            indexedInputs[i] = input;\n        } else {\n            nonIndexedInputs[i] = input;\n        }\n    }\n    const decodedNonIndexedInputs = data ? (0,_parameters_api_js__WEBPACK_IMPORTED_MODULE_0__.decodeParametersWith)(Object.values(nonIndexedInputs), data, true) : {\n        __length__: 0\n    };\n    // If topics are more than indexed inputs, that means first topic is the event signature\n    const offset = clonedTopics.length - Object.keys(indexedInputs).length;\n    const decodedIndexedInputs = Object.values(indexedInputs).map((input, index)=>STATIC_TYPES.some((s)=>input.type.startsWith(s)) ? _decodeParameter(input.type, clonedTopics[index + offset]) : clonedTopics[index + offset]);\n    const returnValues = {\n        __length__: 0\n    };\n    let indexedCounter = 0;\n    let nonIndexedCounter = 0;\n    for (const [i, res] of inputs.entries()){\n        returnValues[i] = res.type === \"string\" ? \"\" : undefined;\n        if (indexedInputs[i]) {\n            returnValues[i] = decodedIndexedInputs[indexedCounter];\n            indexedCounter += 1;\n        }\n        if (nonIndexedInputs[i]) {\n            returnValues[i] = decodedNonIndexedInputs[String(nonIndexedCounter)];\n            nonIndexedCounter += 1;\n        }\n        if (res.name) {\n            returnValues[res.name] = returnValues[i];\n        }\n        returnValues.__length__ += 1;\n    }\n    return returnValues;\n}; //# sourceMappingURL=logs_api.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-abi/lib/esm/api/logs_api.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-abi/lib/esm/api/parameters_api.js":
/*!*****************************************************************!*\
  !*** ./node_modules/web3-eth-abi/lib/esm/api/parameters_api.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeParameter: () => (/* binding */ decodeParameter),\n/* harmony export */   decodeParameters: () => (/* binding */ decodeParameters),\n/* harmony export */   decodeParametersWith: () => (/* binding */ decodeParametersWith),\n/* harmony export */   encodeParameter: () => (/* binding */ encodeParameter),\n/* harmony export */   encodeParameters: () => (/* binding */ encodeParameters)\n/* harmony export */ });\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-errors */ \"(ssr)/./node_modules/web3-errors/lib/esm/index.js\");\n/* harmony import */ var _coders_decode_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../coders/decode.js */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/decode.js\");\n/* harmony import */ var _coders_encode_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../coders/encode.js */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/encode.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ \n\n\n/**\n * Encodes a parameter based on its type to its ABI representation.\n * @param abi - An array of {@link AbiInput}. See [Solidity's documentation](https://solidity.readthedocs.io/en/v0.5.3/abi-spec.html#json) for more details.\n * @param params - The actual parameters to encode.\n * @returns - The ABI encoded parameters\n * @example\n * ```ts\n * const res = web3.eth.abi.encodeParameters(\n *    [\"uint256\", \"string\"],\n *    [\"2345675643\", \"Hello!%\"]\n *  );\n *\n *  console.log(res);\n *  > 0x000000000000000000000000000000000000000000000000000000008bd02b7b0000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000748656c6c6f212500000000000000000000000000000000000000000000000000\n * ```\n */ const encodeParameters = (abi, params)=>(0,_coders_encode_js__WEBPACK_IMPORTED_MODULE_2__.encodeParameters)(abi, params);\n/**\n * Encodes a parameter based on its type to its ABI representation.\n * @param abi -  The type of the parameter. See the [Solidity documentation](https://docs.soliditylang.org/en/develop/types.html) for a list of types.\n * @param param - The actual parameter to encode.\n * @returns -  The ABI encoded parameter\n * @example\n * ```ts\n *  const res = web3.eth.abi.encodeParameter(\"uint256\", \"2345675643\");\n *  console.log(res);\n *  0x000000000000000000000000000000000000000000000000000000008bd02b7b\n *\n *  const res = web3.eth.abi.encodeParameter(\"uint\", \"2345675643\");\n *\n *  console.log(res);\n *  >0x000000000000000000000000000000000000000000000000000000008bd02b7b\n *\n *    const res = web3.eth.abi.encodeParameter(\"bytes32\", \"0xdf3234\");\n *\n *  console.log(res);\n *  >0xdf32340000000000000000000000000000000000000000000000000000000000\n *\n *   const res = web3.eth.abi.encodeParameter(\"bytes\", \"0xdf3234\");\n *\n *  console.log(res);\n *  > 0x00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000003df32340000000000000000000000000000000000000000000000000000000000\n *\n *   const res = web3.eth.abi.encodeParameter(\"bytes32[]\", [\"0xdf3234\", \"0xfdfd\"]);\n *\n *  console.log(res);\n *  > 0x00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000002df32340000000000000000000000000000000000000000000000000000000000fdfd000000000000000000000000000000000000000000000000000000000000\n *\n *  const res = web3.eth.abi.encodeParameter(\n *    {\n *      ParentStruct: {\n *        propertyOne: \"uint256\",\n *        propertyTwo: \"uint256\",\n *        childStruct: {\n *          propertyOne: \"uint256\",\n *          propertyTwo: \"uint256\",\n *        },\n *      },\n *    },\n *    {\n *      propertyOne: 42,\n *      propertyTwo: 56,\n *      childStruct: {\n *        propertyOne: 45,\n *        propertyTwo: 78,\n *      },\n *    }\n *  );\n *\n *  console.log(res);\n *  > 0x000000000000000000000000000000000000000000000000000000000000002a0000000000000000000000000000000000000000000000000000000000000038000000000000000000000000000000000000000000000000000000000000002d000000000000000000000000000000000000000000000000000000000000004e\n * ```\n */ const encodeParameter = (abi, param)=>encodeParameters([\n        abi\n    ], [\n        param\n    ]);\n/**\n * Should be used to decode list of params\n */ const decodeParametersWith = (abis, bytes, loose)=>{\n    try {\n        if (abis.length > 0 && (!bytes || bytes === \"0x\" || bytes === \"0X\")) {\n            throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.AbiError(\"Returned values aren't valid, did it run Out of Gas? \" + \"You might also see this error if you are not using the \" + \"correct ABI for the contract you are retrieving data from, \" + \"requesting data from a block number that does not exist, \" + \"or querying a node which is not fully synced.\");\n        }\n        return (0,_coders_decode_js__WEBPACK_IMPORTED_MODULE_1__.decodeParameters)(abis, `0x${bytes.replace(/0x/i, \"\")}`, loose);\n    } catch (err) {\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.AbiError(`Parameter decoding error: ${err.message}`, {\n            internalErr: err\n        });\n    }\n};\n/**\n * Should be used to decode list of params\n */ /**\n * Decodes ABI encoded parameters to its JavaScript types.\n * @param abi -  An array of {@link AbiInput}. See the [Solidity documentation](https://docs.soliditylang.org/en/develop/types.html) for a list of types.\n * @param bytes - The ABI byte code to decode\n * @returns - The result object containing the decoded parameters.\n * @example\n * ```ts\n * let res = web3.eth.abi.decodeParameters(\n *    [\"string\", \"uint256\"],\n *    \"0x000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000ea000000000000000000000000000000000000000000000000000000000000000848656c6c6f212521000000000000000000000000000000000000000000000000\"\n *  );\n *  console.log(res);\n *  > { '0': 'Hello!%!', '1': 234n, __length__: 2 }\n *\n * let res = web3.eth.abi.decodeParameters(\n *    [\n *      {\n *        type: \"string\",\n *        name: \"myString\",\n *      },\n *      {\n *        type: \"uint256\",\n *        name: \"myNumber\",\n *      },\n *    ],\n *    \"0x000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000ea000000000000000000000000000000000000000000000000000000000000000848656c6c6f212521000000000000000000000000000000000000000000000000\"\n *  );\n * console.log(res);\n *  > {\n *  '0': 'Hello!%!',\n *  '1': 234n,\n *  __length__: 2,\n *  myString: 'Hello!%!',\n *  myNumber: 234n\n * }\n *\n * const res = web3.eth.abi.decodeParameters(\n *    [\n *      \"uint8[]\",\n *      {\n *        ParentStruct: {\n *          propertyOne: \"uint256\",\n *          propertyTwo: \"uint256\",\n *          childStruct: {\n *            propertyOne: \"uint256\",\n *            propertyTwo: \"uint256\",\n *          },\n *        },\n *      },\n *    ],\n *    \"0x00000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000002a0000000000000000000000000000000000000000000000000000000000000038000000000000000000000000000000000000000000000000000000000000002d000000000000000000000000000000000000000000000000000000000000004e0000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000002a0000000000000000000000000000000000000000000000000000000000000018\"\n *  );\n *  console.log(res);\n *  >\n *  '0': [ 42n, 24n ],\n *  '1': {\n *    '0': 42n,\n *    '1': 56n,\n *    '2': {\n *      '0': 45n,\n *      '1': 78n,\n *      __length__: 2,\n *      propertyOne: 45n,\n *      propertyTwo: 78n\n *    },\n *    __length__: 3,\n *    propertyOne: 42n,\n *    propertyTwo: 56n,\n *    childStruct: {\n *      '0': 45n,\n *      '1': 78n,\n *      __length__: 2,\n *      propertyOne: 45n,\n *      propertyTwo: 78n\n *    }\n *  },\n *  __length__: 2,\n *  ParentStruct: {\n *    '0': 42n,\n *    '1': 56n,\n *    '2': {\n *      '0': 45n,\n *      '1': 78n,\n *      __length__: 2,\n *      propertyOne: 45n,\n *      propertyTwo: 78n\n *    },\n *    __length__: 3,\n *    propertyOne: 42n,\n *    propertyTwo: 56n,\n *    childStruct: {\n *      '0': 45n,\n *      '1': 78n,\n *      __length__: 2,\n *      propertyOne: 45n,\n *      propertyTwo: 78n\n *    }\n *  }\n *}\n * ```\n */ const decodeParameters = (abi, bytes)=>decodeParametersWith(abi, bytes, false);\n/**\n * Should be used to decode bytes to plain param\n */ /**\n * Decodes an ABI encoded parameter to its JavaScript type.\n * @param abi -  The type of the parameter. See the [Solidity documentation](https://docs.soliditylang.org/en/develop/types.html) for a list of types.\n * @param bytes - The ABI byte code to decode\n * @returns - The decoded parameter\n * @example\n * ```ts\n *   const res = web3.eth.abi.decodeParameter(\n *    \"uint256\",\n *    \"0x0000000000000000000000000000000000000000000000000000000000000010\"\n *  );\n *  console.log(res);\n * > 16n\n *\n *  const res = web3.eth.abi.decodeParameter(\n *    \"string\",\n *    \"0x0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000848656c6c6f212521000000000000000000000000000000000000000000000000\"\n *  );\n *\n *  console.log(res);\n *  > Hello!%!\n *\n *  const res = web3.eth.abi.decodeParameter(\n *    {\n *      ParentStruct: {\n *        propertyOne: \"uint256\",\n *        propertyTwo: \"uint256\",\n *        childStruct: {\n *          propertyOne: \"uint256\",\n *          propertyTwo: \"uint256\",\n *        },\n *      },\n *    },\n *    \"0x000000000000000000000000000000000000000000000000000000000000002a0000000000000000000000000000000000000000000000000000000000000038000000000000000000000000000000000000000000000000000000000000002d000000000000000000000000000000000000000000000000000000000000004e\"\n *  );\n *\n *  console.log(res);\n *   {\n *  '0': 42n,\n *  '1': 56n,\n *  '2': {\n *    '0': 45n,\n *    '1': 78n,\n *    __length__: 2,\n *    propertyOne: 45n,\n *    propertyTwo: 78n\n *  },\n *  __length__: 3,\n *  propertyOne: 42n,\n *  propertyTwo: 56n,\n *  childStruct: {\n *    '0': 45n,\n *    '1': 78n,\n *    __length__: 2,\n *    propertyOne: 45n,\n *    propertyTwo: 78n\n *  }\n *}\n * ```\n */ const decodeParameter = (abi, bytes)=>decodeParameters([\n        abi\n    ], bytes)[\"0\"]; //# sourceMappingURL=parameters_api.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWJpL2xpYi9lc20vYXBpL3BhcmFtZXRlcnNfYXBpLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUE7Ozs7Ozs7Ozs7Ozs7OztBQWVBLEdBQ3VDO0FBQzRDO0FBQ0E7QUFDbkY7Ozs7Ozs7Ozs7Ozs7OztDQWVDLEdBQ00sTUFBTUcsbUJBQW1CLENBQUNFLEtBQUtDLFNBQVdGLG1FQUF3QkEsQ0FBQ0MsS0FBS0MsUUFBUTtBQUN2Rjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztDQXVEQyxHQUNNLE1BQU1DLGtCQUFrQixDQUFDRixLQUFLRyxRQUFVTCxpQkFBaUI7UUFBQ0U7S0FBSSxFQUFFO1FBQUNHO0tBQU0sRUFBRTtBQUNoRjs7Q0FFQyxHQUNNLE1BQU1DLHVCQUF1QixDQUFDQyxNQUFNQyxPQUFPQztJQUM5QyxJQUFJO1FBQ0EsSUFBSUYsS0FBS0csTUFBTSxHQUFHLEtBQU0sRUFBQ0YsU0FBU0EsVUFBVSxRQUFRQSxVQUFVLElBQUcsR0FBSTtZQUNqRSxNQUFNLElBQUlYLGlEQUFRQSxDQUFDLDBEQUNmLDREQUNBLGdFQUNBLDhEQUNBO1FBQ1I7UUFDQSxPQUFPRSxtRUFBd0JBLENBQUNRLE1BQU0sQ0FBQyxFQUFFLEVBQUVDLE1BQU1HLE9BQU8sQ0FBQyxPQUFPLElBQUksQ0FBQyxFQUFFRjtJQUMzRSxFQUNBLE9BQU9HLEtBQUs7UUFDUixNQUFNLElBQUlmLGlEQUFRQSxDQUFDLENBQUMsMEJBQTBCLEVBQUVlLElBQUlDLE9BQU8sQ0FBQyxDQUFDLEVBQUU7WUFDM0RDLGFBQWFGO1FBQ2pCO0lBQ0o7QUFDSixFQUFFO0FBQ0Y7O0NBRUMsR0FDRDs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztDQW9HQyxHQUNNLE1BQU1kLG1CQUFtQixDQUFDSSxLQUFLTSxRQUFVRixxQkFBcUJKLEtBQUtNLE9BQU8sT0FBTztBQUN4Rjs7Q0FFQyxHQUNEOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztDQTJEQyxHQUNNLE1BQU1PLGtCQUFrQixDQUFDYixLQUFLTSxRQUFVVixpQkFBaUI7UUFBQ0k7S0FBSSxFQUFFTSxNQUFNLENBQUMsSUFBSSxDQUFDLENBQ25GLDBDQUEwQyIsInNvdXJjZXMiOlsid2VicGFjazovL2Zyb250ZW5kLy4vbm9kZV9tb2R1bGVzL3dlYjMtZXRoLWFiaS9saWIvZXNtL2FwaS9wYXJhbWV0ZXJzX2FwaS5qcz9jMjRmIl0sInNvdXJjZXNDb250ZW50IjpbIi8qXG5UaGlzIGZpbGUgaXMgcGFydCBvZiB3ZWIzLmpzLlxuXG53ZWIzLmpzIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnlcbml0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieVxudGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSwgb3JcbihhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uXG5cbndlYjMuanMgaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCxcbmJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mXG5NRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlXG5HTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy5cblxuWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG5hbG9uZyB3aXRoIHdlYjMuanMuICBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uXG4qL1xuaW1wb3J0IHsgQWJpRXJyb3IgfSBmcm9tICd3ZWIzLWVycm9ycyc7XG5pbXBvcnQgeyBkZWNvZGVQYXJhbWV0ZXJzIGFzIGRlY29kZVBhcmFtZXRlcnNJbnRlcm5hbCB9IGZyb20gJy4uL2NvZGVycy9kZWNvZGUuanMnO1xuaW1wb3J0IHsgZW5jb2RlUGFyYW1ldGVycyBhcyBlbmNvZGVQYXJhbWV0ZXJzSW50ZXJuYWwgfSBmcm9tICcuLi9jb2RlcnMvZW5jb2RlLmpzJztcbi8qKlxuICogRW5jb2RlcyBhIHBhcmFtZXRlciBiYXNlZCBvbiBpdHMgdHlwZSB0byBpdHMgQUJJIHJlcHJlc2VudGF0aW9uLlxuICogQHBhcmFtIGFiaSAtIEFuIGFycmF5IG9mIHtAbGluayBBYmlJbnB1dH0uIFNlZSBbU29saWRpdHkncyBkb2N1bWVudGF0aW9uXShodHRwczovL3NvbGlkaXR5LnJlYWR0aGVkb2NzLmlvL2VuL3YwLjUuMy9hYmktc3BlYy5odG1sI2pzb24pIGZvciBtb3JlIGRldGFpbHMuXG4gKiBAcGFyYW0gcGFyYW1zIC0gVGhlIGFjdHVhbCBwYXJhbWV0ZXJzIHRvIGVuY29kZS5cbiAqIEByZXR1cm5zIC0gVGhlIEFCSSBlbmNvZGVkIHBhcmFtZXRlcnNcbiAqIEBleGFtcGxlXG4gKiBgYGB0c1xuICogY29uc3QgcmVzID0gd2ViMy5ldGguYWJpLmVuY29kZVBhcmFtZXRlcnMoXG4gKiAgICBbXCJ1aW50MjU2XCIsIFwic3RyaW5nXCJdLFxuICogICAgW1wiMjM0NTY3NTY0M1wiLCBcIkhlbGxvISVcIl1cbiAqICApO1xuICpcbiAqICBjb25zb2xlLmxvZyhyZXMpO1xuICogID4gMHgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDhiZDAyYjdiMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDA0MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDc0ODY1NmM2YzZmMjEyNTAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXG4gKiBgYGBcbiAqL1xuZXhwb3J0IGNvbnN0IGVuY29kZVBhcmFtZXRlcnMgPSAoYWJpLCBwYXJhbXMpID0+IGVuY29kZVBhcmFtZXRlcnNJbnRlcm5hbChhYmksIHBhcmFtcyk7XG4vKipcbiAqIEVuY29kZXMgYSBwYXJhbWV0ZXIgYmFzZWQgb24gaXRzIHR5cGUgdG8gaXRzIEFCSSByZXByZXNlbnRhdGlvbi5cbiAqIEBwYXJhbSBhYmkgLSAgVGhlIHR5cGUgb2YgdGhlIHBhcmFtZXRlci4gU2VlIHRoZSBbU29saWRpdHkgZG9jdW1lbnRhdGlvbl0oaHR0cHM6Ly9kb2NzLnNvbGlkaXR5bGFuZy5vcmcvZW4vZGV2ZWxvcC90eXBlcy5odG1sKSBmb3IgYSBsaXN0IG9mIHR5cGVzLlxuICogQHBhcmFtIHBhcmFtIC0gVGhlIGFjdHVhbCBwYXJhbWV0ZXIgdG8gZW5jb2RlLlxuICogQHJldHVybnMgLSAgVGhlIEFCSSBlbmNvZGVkIHBhcmFtZXRlclxuICogQGV4YW1wbGVcbiAqIGBgYHRzXG4gKiAgY29uc3QgcmVzID0gd2ViMy5ldGguYWJpLmVuY29kZVBhcmFtZXRlcihcInVpbnQyNTZcIiwgXCIyMzQ1Njc1NjQzXCIpO1xuICogIGNvbnNvbGUubG9nKHJlcyk7XG4gKiAgMHgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDhiZDAyYjdiXG4gKlxuICogIGNvbnN0IHJlcyA9IHdlYjMuZXRoLmFiaS5lbmNvZGVQYXJhbWV0ZXIoXCJ1aW50XCIsIFwiMjM0NTY3NTY0M1wiKTtcbiAqXG4gKiAgY29uc29sZS5sb2cocmVzKTtcbiAqICA+MHgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDhiZDAyYjdiXG4gKlxuICogICAgY29uc3QgcmVzID0gd2ViMy5ldGguYWJpLmVuY29kZVBhcmFtZXRlcihcImJ5dGVzMzJcIiwgXCIweGRmMzIzNFwiKTtcbiAqXG4gKiAgY29uc29sZS5sb2cocmVzKTtcbiAqICA+MHhkZjMyMzQwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXG4gKlxuICogICBjb25zdCByZXMgPSB3ZWIzLmV0aC5hYmkuZW5jb2RlUGFyYW1ldGVyKFwiYnl0ZXNcIiwgXCIweGRmMzIzNFwiKTtcbiAqXG4gKiAgY29uc29sZS5sb2cocmVzKTtcbiAqICA+IDB4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAyMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDNkZjMyMzQwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXG4gKlxuICogICBjb25zdCByZXMgPSB3ZWIzLmV0aC5hYmkuZW5jb2RlUGFyYW1ldGVyKFwiYnl0ZXMzMltdXCIsIFtcIjB4ZGYzMjM0XCIsIFwiMHhmZGZkXCJdKTtcbiAqXG4gKiAgY29uc29sZS5sb2cocmVzKTtcbiAqICA+IDB4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAyMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDJkZjMyMzQwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwZmRmZDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFxuICpcbiAqICBjb25zdCByZXMgPSB3ZWIzLmV0aC5hYmkuZW5jb2RlUGFyYW1ldGVyKFxuICogICAge1xuICogICAgICBQYXJlbnRTdHJ1Y3Q6IHtcbiAqICAgICAgICBwcm9wZXJ0eU9uZTogXCJ1aW50MjU2XCIsXG4gKiAgICAgICAgcHJvcGVydHlUd286IFwidWludDI1NlwiLFxuICogICAgICAgIGNoaWxkU3RydWN0OiB7XG4gKiAgICAgICAgICBwcm9wZXJ0eU9uZTogXCJ1aW50MjU2XCIsXG4gKiAgICAgICAgICBwcm9wZXJ0eVR3bzogXCJ1aW50MjU2XCIsXG4gKiAgICAgICAgfSxcbiAqICAgICAgfSxcbiAqICAgIH0sXG4gKiAgICB7XG4gKiAgICAgIHByb3BlcnR5T25lOiA0MixcbiAqICAgICAgcHJvcGVydHlUd286IDU2LFxuICogICAgICBjaGlsZFN0cnVjdDoge1xuICogICAgICAgIHByb3BlcnR5T25lOiA0NSxcbiAqICAgICAgICBwcm9wZXJ0eVR3bzogNzgsXG4gKiAgICAgIH0sXG4gKiAgICB9XG4gKiAgKTtcbiAqXG4gKiAgY29uc29sZS5sb2cocmVzKTtcbiAqICA+IDB4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAyYTAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMzgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDJkMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDA0ZVxuICogYGBgXG4gKi9cbmV4cG9ydCBjb25zdCBlbmNvZGVQYXJhbWV0ZXIgPSAoYWJpLCBwYXJhbSkgPT4gZW5jb2RlUGFyYW1ldGVycyhbYWJpXSwgW3BhcmFtXSk7XG4vKipcbiAqIFNob3VsZCBiZSB1c2VkIHRvIGRlY29kZSBsaXN0IG9mIHBhcmFtc1xuICovXG5leHBvcnQgY29uc3QgZGVjb2RlUGFyYW1ldGVyc1dpdGggPSAoYWJpcywgYnl0ZXMsIGxvb3NlKSA9PiB7XG4gICAgdHJ5IHtcbiAgICAgICAgaWYgKGFiaXMubGVuZ3RoID4gMCAmJiAoIWJ5dGVzIHx8IGJ5dGVzID09PSAnMHgnIHx8IGJ5dGVzID09PSAnMFgnKSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEFiaUVycm9yKFwiUmV0dXJuZWQgdmFsdWVzIGFyZW4ndCB2YWxpZCwgZGlkIGl0IHJ1biBPdXQgb2YgR2FzPyBcIiArXG4gICAgICAgICAgICAgICAgJ1lvdSBtaWdodCBhbHNvIHNlZSB0aGlzIGVycm9yIGlmIHlvdSBhcmUgbm90IHVzaW5nIHRoZSAnICtcbiAgICAgICAgICAgICAgICAnY29ycmVjdCBBQkkgZm9yIHRoZSBjb250cmFjdCB5b3UgYXJlIHJldHJpZXZpbmcgZGF0YSBmcm9tLCAnICtcbiAgICAgICAgICAgICAgICAncmVxdWVzdGluZyBkYXRhIGZyb20gYSBibG9jayBudW1iZXIgdGhhdCBkb2VzIG5vdCBleGlzdCwgJyArXG4gICAgICAgICAgICAgICAgJ29yIHF1ZXJ5aW5nIGEgbm9kZSB3aGljaCBpcyBub3QgZnVsbHkgc3luY2VkLicpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBkZWNvZGVQYXJhbWV0ZXJzSW50ZXJuYWwoYWJpcywgYDB4JHtieXRlcy5yZXBsYWNlKC8weC9pLCAnJyl9YCwgbG9vc2UpO1xuICAgIH1cbiAgICBjYXRjaCAoZXJyKSB7XG4gICAgICAgIHRocm93IG5ldyBBYmlFcnJvcihgUGFyYW1ldGVyIGRlY29kaW5nIGVycm9yOiAke2Vyci5tZXNzYWdlfWAsIHtcbiAgICAgICAgICAgIGludGVybmFsRXJyOiBlcnIsXG4gICAgICAgIH0pO1xuICAgIH1cbn07XG4vKipcbiAqIFNob3VsZCBiZSB1c2VkIHRvIGRlY29kZSBsaXN0IG9mIHBhcmFtc1xuICovXG4vKipcbiAqIERlY29kZXMgQUJJIGVuY29kZWQgcGFyYW1ldGVycyB0byBpdHMgSmF2YVNjcmlwdCB0eXBlcy5cbiAqIEBwYXJhbSBhYmkgLSAgQW4gYXJyYXkgb2Yge0BsaW5rIEFiaUlucHV0fS4gU2VlIHRoZSBbU29saWRpdHkgZG9jdW1lbnRhdGlvbl0oaHR0cHM6Ly9kb2NzLnNvbGlkaXR5bGFuZy5vcmcvZW4vZGV2ZWxvcC90eXBlcy5odG1sKSBmb3IgYSBsaXN0IG9mIHR5cGVzLlxuICogQHBhcmFtIGJ5dGVzIC0gVGhlIEFCSSBieXRlIGNvZGUgdG8gZGVjb2RlXG4gKiBAcmV0dXJucyAtIFRoZSByZXN1bHQgb2JqZWN0IGNvbnRhaW5pbmcgdGhlIGRlY29kZWQgcGFyYW1ldGVycy5cbiAqIEBleGFtcGxlXG4gKiBgYGB0c1xuICogbGV0IHJlcyA9IHdlYjMuZXRoLmFiaS5kZWNvZGVQYXJhbWV0ZXJzKFxuICogICAgW1wic3RyaW5nXCIsIFwidWludDI1NlwiXSxcbiAqICAgIFwiMHgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDQwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBlYTAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDg0ODY1NmM2YzZmMjEyNTIxMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCJcbiAqICApO1xuICogIGNvbnNvbGUubG9nKHJlcyk7XG4gKiAgPiB7ICcwJzogJ0hlbGxvISUhJywgJzEnOiAyMzRuLCBfX2xlbmd0aF9fOiAyIH1cbiAqXG4gKiBsZXQgcmVzID0gd2ViMy5ldGguYWJpLmRlY29kZVBhcmFtZXRlcnMoXG4gKiAgICBbXG4gKiAgICAgIHtcbiAqICAgICAgICB0eXBlOiBcInN0cmluZ1wiLFxuICogICAgICAgIG5hbWU6IFwibXlTdHJpbmdcIixcbiAqICAgICAgfSxcbiAqICAgICAge1xuICogICAgICAgIHR5cGU6IFwidWludDI1NlwiLFxuICogICAgICAgIG5hbWU6IFwibXlOdW1iZXJcIixcbiAqICAgICAgfSxcbiAqICAgIF0sXG4gKiAgICBcIjB4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDA0MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwZWEwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDA4NDg2NTZjNmM2ZjIxMjUyMTAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwiXG4gKiAgKTtcbiAqIGNvbnNvbGUubG9nKHJlcyk7XG4gKiAgPiB7XG4gKiAgJzAnOiAnSGVsbG8hJSEnLFxuICogICcxJzogMjM0bixcbiAqICBfX2xlbmd0aF9fOiAyLFxuICogIG15U3RyaW5nOiAnSGVsbG8hJSEnLFxuICogIG15TnVtYmVyOiAyMzRuXG4gKiB9XG4gKlxuICogY29uc3QgcmVzID0gd2ViMy5ldGguYWJpLmRlY29kZVBhcmFtZXRlcnMoXG4gKiAgICBbXG4gKiAgICAgIFwidWludDhbXVwiLFxuICogICAgICB7XG4gKiAgICAgICAgUGFyZW50U3RydWN0OiB7XG4gKiAgICAgICAgICBwcm9wZXJ0eU9uZTogXCJ1aW50MjU2XCIsXG4gKiAgICAgICAgICBwcm9wZXJ0eVR3bzogXCJ1aW50MjU2XCIsXG4gKiAgICAgICAgICBjaGlsZFN0cnVjdDoge1xuICogICAgICAgICAgICBwcm9wZXJ0eU9uZTogXCJ1aW50MjU2XCIsXG4gKiAgICAgICAgICAgIHByb3BlcnR5VHdvOiBcInVpbnQyNTZcIixcbiAqICAgICAgICAgIH0sXG4gKiAgICAgICAgfSxcbiAqICAgICAgfSxcbiAqICAgIF0sXG4gKiAgICBcIjB4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBhMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMmEwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDM4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAyZDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwNGUwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAyMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAyYTAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMThcIlxuICogICk7XG4gKiAgY29uc29sZS5sb2cocmVzKTtcbiAqICA+XG4gKiAgJzAnOiBbIDQybiwgMjRuIF0sXG4gKiAgJzEnOiB7XG4gKiAgICAnMCc6IDQybixcbiAqICAgICcxJzogNTZuLFxuICogICAgJzInOiB7XG4gKiAgICAgICcwJzogNDVuLFxuICogICAgICAnMSc6IDc4bixcbiAqICAgICAgX19sZW5ndGhfXzogMixcbiAqICAgICAgcHJvcGVydHlPbmU6IDQ1bixcbiAqICAgICAgcHJvcGVydHlUd286IDc4blxuICogICAgfSxcbiAqICAgIF9fbGVuZ3RoX186IDMsXG4gKiAgICBwcm9wZXJ0eU9uZTogNDJuLFxuICogICAgcHJvcGVydHlUd286IDU2bixcbiAqICAgIGNoaWxkU3RydWN0OiB7XG4gKiAgICAgICcwJzogNDVuLFxuICogICAgICAnMSc6IDc4bixcbiAqICAgICAgX19sZW5ndGhfXzogMixcbiAqICAgICAgcHJvcGVydHlPbmU6IDQ1bixcbiAqICAgICAgcHJvcGVydHlUd286IDc4blxuICogICAgfVxuICogIH0sXG4gKiAgX19sZW5ndGhfXzogMixcbiAqICBQYXJlbnRTdHJ1Y3Q6IHtcbiAqICAgICcwJzogNDJuLFxuICogICAgJzEnOiA1Nm4sXG4gKiAgICAnMic6IHtcbiAqICAgICAgJzAnOiA0NW4sXG4gKiAgICAgICcxJzogNzhuLFxuICogICAgICBfX2xlbmd0aF9fOiAyLFxuICogICAgICBwcm9wZXJ0eU9uZTogNDVuLFxuICogICAgICBwcm9wZXJ0eVR3bzogNzhuXG4gKiAgICB9LFxuICogICAgX19sZW5ndGhfXzogMyxcbiAqICAgIHByb3BlcnR5T25lOiA0Mm4sXG4gKiAgICBwcm9wZXJ0eVR3bzogNTZuLFxuICogICAgY2hpbGRTdHJ1Y3Q6IHtcbiAqICAgICAgJzAnOiA0NW4sXG4gKiAgICAgICcxJzogNzhuLFxuICogICAgICBfX2xlbmd0aF9fOiAyLFxuICogICAgICBwcm9wZXJ0eU9uZTogNDVuLFxuICogICAgICBwcm9wZXJ0eVR3bzogNzhuXG4gKiAgICB9XG4gKiAgfVxuICp9XG4gKiBgYGBcbiAqL1xuZXhwb3J0IGNvbnN0IGRlY29kZVBhcmFtZXRlcnMgPSAoYWJpLCBieXRlcykgPT4gZGVjb2RlUGFyYW1ldGVyc1dpdGgoYWJpLCBieXRlcywgZmFsc2UpO1xuLyoqXG4gKiBTaG91bGQgYmUgdXNlZCB0byBkZWNvZGUgYnl0ZXMgdG8gcGxhaW4gcGFyYW1cbiAqL1xuLyoqXG4gKiBEZWNvZGVzIGFuIEFCSSBlbmNvZGVkIHBhcmFtZXRlciB0byBpdHMgSmF2YVNjcmlwdCB0eXBlLlxuICogQHBhcmFtIGFiaSAtICBUaGUgdHlwZSBvZiB0aGUgcGFyYW1ldGVyLiBTZWUgdGhlIFtTb2xpZGl0eSBkb2N1bWVudGF0aW9uXShodHRwczovL2RvY3Muc29saWRpdHlsYW5nLm9yZy9lbi9kZXZlbG9wL3R5cGVzLmh0bWwpIGZvciBhIGxpc3Qgb2YgdHlwZXMuXG4gKiBAcGFyYW0gYnl0ZXMgLSBUaGUgQUJJIGJ5dGUgY29kZSB0byBkZWNvZGVcbiAqIEByZXR1cm5zIC0gVGhlIGRlY29kZWQgcGFyYW1ldGVyXG4gKiBAZXhhbXBsZVxuICogYGBgdHNcbiAqICAgY29uc3QgcmVzID0gd2ViMy5ldGguYWJpLmRlY29kZVBhcmFtZXRlcihcbiAqICAgIFwidWludDI1NlwiLFxuICogICAgXCIweDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMTBcIlxuICogICk7XG4gKiAgY29uc29sZS5sb2cocmVzKTtcbiAqID4gMTZuXG4gKlxuICogIGNvbnN0IHJlcyA9IHdlYjMuZXRoLmFiaS5kZWNvZGVQYXJhbWV0ZXIoXG4gKiAgICBcInN0cmluZ1wiLFxuICogICAgXCIweDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDA4NDg2NTZjNmM2ZjIxMjUyMTAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwiXG4gKiAgKTtcbiAqXG4gKiAgY29uc29sZS5sb2cocmVzKTtcbiAqICA+IEhlbGxvISUhXG4gKlxuICogIGNvbnN0IHJlcyA9IHdlYjMuZXRoLmFiaS5kZWNvZGVQYXJhbWV0ZXIoXG4gKiAgICB7XG4gKiAgICAgIFBhcmVudFN0cnVjdDoge1xuICogICAgICAgIHByb3BlcnR5T25lOiBcInVpbnQyNTZcIixcbiAqICAgICAgICBwcm9wZXJ0eVR3bzogXCJ1aW50MjU2XCIsXG4gKiAgICAgICAgY2hpbGRTdHJ1Y3Q6IHtcbiAqICAgICAgICAgIHByb3BlcnR5T25lOiBcInVpbnQyNTZcIixcbiAqICAgICAgICAgIHByb3BlcnR5VHdvOiBcInVpbnQyNTZcIixcbiAqICAgICAgICB9LFxuICogICAgICB9LFxuICogICAgfSxcbiAqICAgIFwiMHgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDJhMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAzODAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMmQwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDRlXCJcbiAqICApO1xuICpcbiAqICBjb25zb2xlLmxvZyhyZXMpO1xuICogICB7XG4gKiAgJzAnOiA0Mm4sXG4gKiAgJzEnOiA1Nm4sXG4gKiAgJzInOiB7XG4gKiAgICAnMCc6IDQ1bixcbiAqICAgICcxJzogNzhuLFxuICogICAgX19sZW5ndGhfXzogMixcbiAqICAgIHByb3BlcnR5T25lOiA0NW4sXG4gKiAgICBwcm9wZXJ0eVR3bzogNzhuXG4gKiAgfSxcbiAqICBfX2xlbmd0aF9fOiAzLFxuICogIHByb3BlcnR5T25lOiA0Mm4sXG4gKiAgcHJvcGVydHlUd286IDU2bixcbiAqICBjaGlsZFN0cnVjdDoge1xuICogICAgJzAnOiA0NW4sXG4gKiAgICAnMSc6IDc4bixcbiAqICAgIF9fbGVuZ3RoX186IDIsXG4gKiAgICBwcm9wZXJ0eU9uZTogNDVuLFxuICogICAgcHJvcGVydHlUd286IDc4blxuICogIH1cbiAqfVxuICogYGBgXG4gKi9cbmV4cG9ydCBjb25zdCBkZWNvZGVQYXJhbWV0ZXIgPSAoYWJpLCBieXRlcykgPT4gZGVjb2RlUGFyYW1ldGVycyhbYWJpXSwgYnl0ZXMpWycwJ107XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wYXJhbWV0ZXJzX2FwaS5qcy5tYXAiXSwibmFtZXMiOlsiQWJpRXJyb3IiLCJkZWNvZGVQYXJhbWV0ZXJzIiwiZGVjb2RlUGFyYW1ldGVyc0ludGVybmFsIiwiZW5jb2RlUGFyYW1ldGVycyIsImVuY29kZVBhcmFtZXRlcnNJbnRlcm5hbCIsImFiaSIsInBhcmFtcyIsImVuY29kZVBhcmFtZXRlciIsInBhcmFtIiwiZGVjb2RlUGFyYW1ldGVyc1dpdGgiLCJhYmlzIiwiYnl0ZXMiLCJsb29zZSIsImxlbmd0aCIsInJlcGxhY2UiLCJlcnIiLCJtZXNzYWdlIiwiaW50ZXJuYWxFcnIiLCJkZWNvZGVQYXJhbWV0ZXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-abi/lib/esm/api/parameters_api.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/base/address.js":
/*!******************************************************************!*\
  !*** ./node_modules/web3-eth-abi/lib/esm/coders/base/address.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeAddress: () => (/* binding */ decodeAddress),\n/* harmony export */   encodeAddress: () => (/* binding */ encodeAddress)\n/* harmony export */ });\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-errors */ \"(ssr)/./node_modules/web3-errors/lib/esm/index.js\");\n/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-utils */ \"(ssr)/./node_modules/web3-utils/lib/esm/index.js\");\n/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-validator */ \"(ssr)/./node_modules/web3-validator/lib/esm/index.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils.js */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/utils.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ \n\n\n\nconst ADDRESS_BYTES_COUNT = 20;\nconst ADDRESS_OFFSET = _utils_js__WEBPACK_IMPORTED_MODULE_3__.WORD_SIZE - ADDRESS_BYTES_COUNT;\nfunction encodeAddress(param, input) {\n    if (typeof input !== \"string\") {\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.AbiError(\"address type expects string as input type\", {\n            value: input,\n            name: param.name,\n            type: param.type\n        });\n    }\n    let address = input.toLowerCase();\n    if (!address.startsWith(\"0x\")) {\n        address = `0x${address}`;\n    }\n    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isAddress)(address)) {\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.AbiError(\"provided input is not valid address\", {\n            value: input,\n            name: param.name,\n            type: param.type\n        });\n    }\n    // for better performance, we could convert hex to destination bytes directly (encoded var)\n    const addressBytes = web3_validator__WEBPACK_IMPORTED_MODULE_2__.utils.hexToUint8Array(address);\n    // expand address to WORD_SIZE\n    const encoded = (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.alloc)(_utils_js__WEBPACK_IMPORTED_MODULE_3__.WORD_SIZE);\n    encoded.set(addressBytes, ADDRESS_OFFSET);\n    return {\n        dynamic: false,\n        encoded\n    };\n}\nfunction decodeAddress(_param, bytes) {\n    const addressBytes = bytes.subarray(ADDRESS_OFFSET, _utils_js__WEBPACK_IMPORTED_MODULE_3__.WORD_SIZE);\n    if (addressBytes.length !== ADDRESS_BYTES_COUNT) {\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.AbiError(\"Invalid decoding input, not enough bytes to decode address\", {\n            bytes\n        });\n    }\n    const result = web3_validator__WEBPACK_IMPORTED_MODULE_2__.utils.uint8ArrayToHexString(addressBytes);\n    // should we check is decoded value is valid address?\n    // if(!isAddress(result)) {\n    //     throw new AbiError(\"encoded data is not valid address\", {\n    //         address: result,\n    //     });\n    // }\n    return {\n        result: (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.toChecksumAddress)(result),\n        encoded: bytes.subarray(_utils_js__WEBPACK_IMPORTED_MODULE_3__.WORD_SIZE),\n        consumed: _utils_js__WEBPACK_IMPORTED_MODULE_3__.WORD_SIZE\n    };\n} //# sourceMappingURL=address.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWJpL2xpYi9lc20vY29kZXJzL2Jhc2UvYWRkcmVzcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTs7Ozs7Ozs7Ozs7Ozs7O0FBZUEsR0FDdUM7QUFDUTtBQUNHO0FBQ0g7QUFDL0MsTUFBTU0sc0JBQXNCO0FBQzVCLE1BQU1DLGlCQUFpQkYsZ0RBQVNBLEdBQUdDO0FBQzVCLFNBQVNFLGNBQWNDLEtBQUssRUFBRUMsS0FBSztJQUN0QyxJQUFJLE9BQU9BLFVBQVUsVUFBVTtRQUMzQixNQUFNLElBQUlWLGlEQUFRQSxDQUFDLDZDQUE2QztZQUM1RFcsT0FBT0Q7WUFDUEUsTUFBTUgsTUFBTUcsSUFBSTtZQUNoQkMsTUFBTUosTUFBTUksSUFBSTtRQUNwQjtJQUNKO0lBQ0EsSUFBSUMsVUFBVUosTUFBTUssV0FBVztJQUMvQixJQUFJLENBQUNELFFBQVFFLFVBQVUsQ0FBQyxPQUFPO1FBQzNCRixVQUFVLENBQUMsRUFBRSxFQUFFQSxRQUFRLENBQUM7SUFDNUI7SUFDQSxJQUFJLENBQUNaLHlEQUFTQSxDQUFDWSxVQUFVO1FBQ3JCLE1BQU0sSUFBSWQsaURBQVFBLENBQUMsdUNBQXVDO1lBQ3REVyxPQUFPRDtZQUNQRSxNQUFNSCxNQUFNRyxJQUFJO1lBQ2hCQyxNQUFNSixNQUFNSSxJQUFJO1FBQ3BCO0lBQ0o7SUFDQSwyRkFBMkY7SUFDM0YsTUFBTUksZUFBZWQsaUVBQXFCLENBQUNXO0lBQzNDLDhCQUE4QjtJQUM5QixNQUFNSyxVQUFVZixnREFBS0EsQ0FBQ0MsZ0RBQVNBO0lBQy9CYyxRQUFRQyxHQUFHLENBQUNILGNBQWNWO0lBQzFCLE9BQU87UUFDSGMsU0FBUztRQUNURjtJQUNKO0FBQ0o7QUFDTyxTQUFTRyxjQUFjQyxNQUFNLEVBQUVDLEtBQUs7SUFDdkMsTUFBTVAsZUFBZU8sTUFBTUMsUUFBUSxDQUFDbEIsZ0JBQWdCRixnREFBU0E7SUFDN0QsSUFBSVksYUFBYVMsTUFBTSxLQUFLcEIscUJBQXFCO1FBQzdDLE1BQU0sSUFBSU4saURBQVFBLENBQUMsOERBQThEO1lBQUV3QjtRQUFNO0lBQzdGO0lBQ0EsTUFBTUcsU0FBU3hCLHVFQUEyQixDQUFDYztJQUMzQyxxREFBcUQ7SUFDckQsMkJBQTJCO0lBQzNCLGdFQUFnRTtJQUNoRSwyQkFBMkI7SUFDM0IsVUFBVTtJQUNWLElBQUk7SUFDSixPQUFPO1FBQ0hVLFFBQVExQiw2REFBaUJBLENBQUMwQjtRQUMxQlIsU0FBU0ssTUFBTUMsUUFBUSxDQUFDcEIsZ0RBQVNBO1FBQ2pDd0IsVUFBVXhCLGdEQUFTQTtJQUN2QjtBQUNKLEVBQ0EsbUNBQW1DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWJpL2xpYi9lc20vY29kZXJzL2Jhc2UvYWRkcmVzcy5qcz8zOWFkIl0sInNvdXJjZXNDb250ZW50IjpbIi8qXG5UaGlzIGZpbGUgaXMgcGFydCBvZiB3ZWIzLmpzLlxuXG53ZWIzLmpzIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnlcbml0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieVxudGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSwgb3JcbihhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uXG5cbndlYjMuanMgaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCxcbmJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mXG5NRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlXG5HTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy5cblxuWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG5hbG9uZyB3aXRoIHdlYjMuanMuICBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uXG4qL1xuaW1wb3J0IHsgQWJpRXJyb3IgfSBmcm9tICd3ZWIzLWVycm9ycyc7XG5pbXBvcnQgeyB0b0NoZWNrc3VtQWRkcmVzcyB9IGZyb20gJ3dlYjMtdXRpbHMnO1xuaW1wb3J0IHsgaXNBZGRyZXNzLCB1dGlscyB9IGZyb20gJ3dlYjMtdmFsaWRhdG9yJztcbmltcG9ydCB7IGFsbG9jLCBXT1JEX1NJWkUgfSBmcm9tICcuLi91dGlscy5qcyc7XG5jb25zdCBBRERSRVNTX0JZVEVTX0NPVU5UID0gMjA7XG5jb25zdCBBRERSRVNTX09GRlNFVCA9IFdPUkRfU0laRSAtIEFERFJFU1NfQllURVNfQ09VTlQ7XG5leHBvcnQgZnVuY3Rpb24gZW5jb2RlQWRkcmVzcyhwYXJhbSwgaW5wdXQpIHtcbiAgICBpZiAodHlwZW9mIGlucHV0ICE9PSAnc3RyaW5nJykge1xuICAgICAgICB0aHJvdyBuZXcgQWJpRXJyb3IoJ2FkZHJlc3MgdHlwZSBleHBlY3RzIHN0cmluZyBhcyBpbnB1dCB0eXBlJywge1xuICAgICAgICAgICAgdmFsdWU6IGlucHV0LFxuICAgICAgICAgICAgbmFtZTogcGFyYW0ubmFtZSxcbiAgICAgICAgICAgIHR5cGU6IHBhcmFtLnR5cGUsXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBsZXQgYWRkcmVzcyA9IGlucHV0LnRvTG93ZXJDYXNlKCk7XG4gICAgaWYgKCFhZGRyZXNzLnN0YXJ0c1dpdGgoJzB4JykpIHtcbiAgICAgICAgYWRkcmVzcyA9IGAweCR7YWRkcmVzc31gO1xuICAgIH1cbiAgICBpZiAoIWlzQWRkcmVzcyhhZGRyZXNzKSkge1xuICAgICAgICB0aHJvdyBuZXcgQWJpRXJyb3IoJ3Byb3ZpZGVkIGlucHV0IGlzIG5vdCB2YWxpZCBhZGRyZXNzJywge1xuICAgICAgICAgICAgdmFsdWU6IGlucHV0LFxuICAgICAgICAgICAgbmFtZTogcGFyYW0ubmFtZSxcbiAgICAgICAgICAgIHR5cGU6IHBhcmFtLnR5cGUsXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvLyBmb3IgYmV0dGVyIHBlcmZvcm1hbmNlLCB3ZSBjb3VsZCBjb252ZXJ0IGhleCB0byBkZXN0aW5hdGlvbiBieXRlcyBkaXJlY3RseSAoZW5jb2RlZCB2YXIpXG4gICAgY29uc3QgYWRkcmVzc0J5dGVzID0gdXRpbHMuaGV4VG9VaW50OEFycmF5KGFkZHJlc3MpO1xuICAgIC8vIGV4cGFuZCBhZGRyZXNzIHRvIFdPUkRfU0laRVxuICAgIGNvbnN0IGVuY29kZWQgPSBhbGxvYyhXT1JEX1NJWkUpO1xuICAgIGVuY29kZWQuc2V0KGFkZHJlc3NCeXRlcywgQUREUkVTU19PRkZTRVQpO1xuICAgIHJldHVybiB7XG4gICAgICAgIGR5bmFtaWM6IGZhbHNlLFxuICAgICAgICBlbmNvZGVkLFxuICAgIH07XG59XG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlQWRkcmVzcyhfcGFyYW0sIGJ5dGVzKSB7XG4gICAgY29uc3QgYWRkcmVzc0J5dGVzID0gYnl0ZXMuc3ViYXJyYXkoQUREUkVTU19PRkZTRVQsIFdPUkRfU0laRSk7XG4gICAgaWYgKGFkZHJlc3NCeXRlcy5sZW5ndGggIT09IEFERFJFU1NfQllURVNfQ09VTlQpIHtcbiAgICAgICAgdGhyb3cgbmV3IEFiaUVycm9yKCdJbnZhbGlkIGRlY29kaW5nIGlucHV0LCBub3QgZW5vdWdoIGJ5dGVzIHRvIGRlY29kZSBhZGRyZXNzJywgeyBieXRlcyB9KTtcbiAgICB9XG4gICAgY29uc3QgcmVzdWx0ID0gdXRpbHMudWludDhBcnJheVRvSGV4U3RyaW5nKGFkZHJlc3NCeXRlcyk7XG4gICAgLy8gc2hvdWxkIHdlIGNoZWNrIGlzIGRlY29kZWQgdmFsdWUgaXMgdmFsaWQgYWRkcmVzcz9cbiAgICAvLyBpZighaXNBZGRyZXNzKHJlc3VsdCkpIHtcbiAgICAvLyAgICAgdGhyb3cgbmV3IEFiaUVycm9yKFwiZW5jb2RlZCBkYXRhIGlzIG5vdCB2YWxpZCBhZGRyZXNzXCIsIHtcbiAgICAvLyAgICAgICAgIGFkZHJlc3M6IHJlc3VsdCxcbiAgICAvLyAgICAgfSk7XG4gICAgLy8gfVxuICAgIHJldHVybiB7XG4gICAgICAgIHJlc3VsdDogdG9DaGVja3N1bUFkZHJlc3MocmVzdWx0KSxcbiAgICAgICAgZW5jb2RlZDogYnl0ZXMuc3ViYXJyYXkoV09SRF9TSVpFKSxcbiAgICAgICAgY29uc3VtZWQ6IFdPUkRfU0laRSxcbiAgICB9O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YWRkcmVzcy5qcy5tYXAiXSwibmFtZXMiOlsiQWJpRXJyb3IiLCJ0b0NoZWNrc3VtQWRkcmVzcyIsImlzQWRkcmVzcyIsInV0aWxzIiwiYWxsb2MiLCJXT1JEX1NJWkUiLCJBRERSRVNTX0JZVEVTX0NPVU5UIiwiQUREUkVTU19PRkZTRVQiLCJlbmNvZGVBZGRyZXNzIiwicGFyYW0iLCJpbnB1dCIsInZhbHVlIiwibmFtZSIsInR5cGUiLCJhZGRyZXNzIiwidG9Mb3dlckNhc2UiLCJzdGFydHNXaXRoIiwiYWRkcmVzc0J5dGVzIiwiaGV4VG9VaW50OEFycmF5IiwiZW5jb2RlZCIsInNldCIsImR5bmFtaWMiLCJkZWNvZGVBZGRyZXNzIiwiX3BhcmFtIiwiYnl0ZXMiLCJzdWJhcnJheSIsImxlbmd0aCIsInJlc3VsdCIsInVpbnQ4QXJyYXlUb0hleFN0cmluZyIsImNvbnN1bWVkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/base/address.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/base/array.js":
/*!****************************************************************!*\
  !*** ./node_modules/web3-eth-abi/lib/esm/coders/base/array.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeArray: () => (/* binding */ decodeArray),\n/* harmony export */   encodeArray: () => (/* binding */ encodeArray)\n/* harmony export */ });\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-errors */ \"(ssr)/./node_modules/web3-errors/lib/esm/index.js\");\n/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-utils */ \"(ssr)/./node_modules/web3-utils/lib/esm/index.js\");\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./index.js */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/base/index.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils.js */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/utils.js\");\n/* harmony import */ var _number_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./number.js */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/base/number.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/base/utils.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ \n\n// eslint-disable-next-line import/no-cycle\n\n\n\n\nfunction encodeArray(param, values) {\n    if (!Array.isArray(values)) {\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.AbiError(\"Expected value to be array\", {\n            abi: param,\n            values\n        });\n    }\n    const { size, param: arrayItemParam } = (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.extractArrayType)(param);\n    const encodedParams = values.map((v)=>(0,_index_js__WEBPACK_IMPORTED_MODULE_2__.encodeParamFromAbiParameter)(arrayItemParam, v));\n    const dynamic = size === -1;\n    const dynamicItems = encodedParams.length > 0 && encodedParams[0].dynamic;\n    if (!dynamic && values.length !== size) {\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.AbiError(\"Given arguments count doesn't match array length\", {\n            arrayLength: size,\n            argumentsLength: values.length\n        });\n    }\n    if (dynamic || dynamicItems) {\n        const encodingResult = (0,_utils_js__WEBPACK_IMPORTED_MODULE_5__.encodeDynamicParams)(encodedParams);\n        if (dynamic) {\n            const encodedLength = (0,_index_js__WEBPACK_IMPORTED_MODULE_2__.encodeNumber)({\n                type: \"uint256\",\n                name: \"\"\n            }, encodedParams.length).encoded;\n            return {\n                dynamic: true,\n                encoded: encodedParams.length > 0 ? (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.uint8ArrayConcat)(encodedLength, encodingResult) : encodedLength\n            };\n        }\n        return {\n            dynamic: true,\n            encoded: encodingResult\n        };\n    }\n    return {\n        dynamic: false,\n        encoded: (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.uint8ArrayConcat)(...encodedParams.map((p)=>p.encoded))\n    };\n}\nfunction decodeArray(param, bytes) {\n    // eslint-disable-next-line prefer-const\n    let { size, param: arrayItemParam } = (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.extractArrayType)(param);\n    const dynamic = size === -1;\n    let consumed = 0;\n    const result = [];\n    let remaining = bytes;\n    // dynamic array, we need to decode length\n    if (dynamic) {\n        const lengthResult = (0,_number_js__WEBPACK_IMPORTED_MODULE_4__.decodeNumber)({\n            type: \"uint32\",\n            name: \"\"\n        }, bytes);\n        size = Number(lengthResult.result);\n        consumed = lengthResult.consumed;\n        remaining = lengthResult.encoded;\n    }\n    const hasDynamicChild = (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.isDynamic)(arrayItemParam);\n    if (hasDynamicChild) {\n        // known length but dynamic child, each child is actually head element with encoded offset\n        for(let i = 0; i < size; i += 1){\n            const offsetResult = (0,_number_js__WEBPACK_IMPORTED_MODULE_4__.decodeNumber)({\n                type: \"uint32\",\n                name: \"\"\n            }, remaining.subarray(i * _utils_js__WEBPACK_IMPORTED_MODULE_3__.WORD_SIZE));\n            consumed += offsetResult.consumed;\n            const decodedChildResult = (0,_index_js__WEBPACK_IMPORTED_MODULE_2__.decodeParamFromAbiParameter)(arrayItemParam, remaining.subarray(Number(offsetResult.result)));\n            consumed += decodedChildResult.consumed;\n            result.push(decodedChildResult.result);\n        }\n        return {\n            result,\n            encoded: remaining.subarray(consumed),\n            consumed\n        };\n    }\n    for(let i = 0; i < size; i += 1){\n        // decode static params\n        const decodedChildResult = (0,_index_js__WEBPACK_IMPORTED_MODULE_2__.decodeParamFromAbiParameter)(arrayItemParam, bytes.subarray(consumed));\n        consumed += decodedChildResult.consumed;\n        result.push(decodedChildResult.result);\n    }\n    return {\n        result,\n        encoded: bytes.subarray(consumed),\n        consumed\n    };\n} //# sourceMappingURL=array.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/base/array.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/base/bool.js":
/*!***************************************************************!*\
  !*** ./node_modules/web3-eth-abi/lib/esm/coders/base/bool.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeBool: () => (/* binding */ decodeBool),\n/* harmony export */   encodeBoolean: () => (/* binding */ encodeBoolean)\n/* harmony export */ });\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-errors */ \"(ssr)/./node_modules/web3-errors/lib/esm/index.js\");\n/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-utils */ \"(ssr)/./node_modules/web3-utils/lib/esm/index.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils.js */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/utils.js\");\n/* harmony import */ var _number_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./number.js */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/base/number.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ \n\n\n\nfunction encodeBoolean(param, input) {\n    let value;\n    try {\n        value = (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.toBool)(input);\n    } catch (e) {\n        if (e instanceof web3_errors__WEBPACK_IMPORTED_MODULE_0__.InvalidBooleanError) {\n            throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.AbiError(\"provided input is not valid boolean value\", {\n                type: param.type,\n                value: input,\n                name: param.name\n            });\n        }\n    }\n    return (0,_number_js__WEBPACK_IMPORTED_MODULE_3__.encodeNumber)({\n        type: \"uint8\",\n        name: \"\"\n    }, Number(value));\n}\nfunction decodeBool(_param, bytes) {\n    const numberResult = (0,_number_js__WEBPACK_IMPORTED_MODULE_3__.decodeNumber)({\n        type: \"uint8\",\n        name: \"\"\n    }, bytes);\n    if (numberResult.result > 1 || numberResult.result < 0) {\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.AbiError(\"Invalid boolean value encoded\", {\n            boolBytes: bytes.subarray(0, _utils_js__WEBPACK_IMPORTED_MODULE_2__.WORD_SIZE),\n            numberResult\n        });\n    }\n    return {\n        result: numberResult.result === BigInt(1),\n        encoded: numberResult.encoded,\n        consumed: _utils_js__WEBPACK_IMPORTED_MODULE_2__.WORD_SIZE\n    };\n} //# sourceMappingURL=bool.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWJpL2xpYi9lc20vY29kZXJzL2Jhc2UvYm9vbC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTs7Ozs7Ozs7Ozs7Ozs7O0FBZUEsR0FDNEQ7QUFDeEI7QUFDSTtBQUNpQjtBQUNsRCxTQUFTTSxjQUFjQyxLQUFLLEVBQUVDLEtBQUs7SUFDdEMsSUFBSUM7SUFDSixJQUFJO1FBQ0FBLFFBQVFQLGtEQUFNQSxDQUFDTTtJQUNuQixFQUNBLE9BQU9FLEdBQUc7UUFDTixJQUFJQSxhQUFhVCw0REFBbUJBLEVBQUU7WUFDbEMsTUFBTSxJQUFJRCxpREFBUUEsQ0FBQyw2Q0FBNkM7Z0JBQzVEVyxNQUFNSixNQUFNSSxJQUFJO2dCQUNoQkYsT0FBT0Q7Z0JBQ1BJLE1BQU1MLE1BQU1LLElBQUk7WUFDcEI7UUFDSjtJQUNKO0lBQ0EsT0FBT1Asd0RBQVlBLENBQUM7UUFBRU0sTUFBTTtRQUFTQyxNQUFNO0lBQUcsR0FBR0MsT0FBT0o7QUFDNUQ7QUFDTyxTQUFTSyxXQUFXQyxNQUFNLEVBQUVDLEtBQUs7SUFDcEMsTUFBTUMsZUFBZWIsd0RBQVlBLENBQUM7UUFBRU8sTUFBTTtRQUFTQyxNQUFNO0lBQUcsR0FBR0k7SUFDL0QsSUFBSUMsYUFBYUMsTUFBTSxHQUFHLEtBQUtELGFBQWFDLE1BQU0sR0FBRyxHQUFHO1FBQ3BELE1BQU0sSUFBSWxCLGlEQUFRQSxDQUFDLGlDQUFpQztZQUNoRG1CLFdBQVdILE1BQU1JLFFBQVEsQ0FBQyxHQUFHakIsZ0RBQVNBO1lBQ3RDYztRQUNKO0lBQ0o7SUFDQSxPQUFPO1FBQ0hDLFFBQVFELGFBQWFDLE1BQU0sS0FBS0csT0FBTztRQUN2Q0MsU0FBU0wsYUFBYUssT0FBTztRQUM3QkMsVUFBVXBCLGdEQUFTQTtJQUN2QjtBQUNKLEVBQ0EsZ0NBQWdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWJpL2xpYi9lc20vY29kZXJzL2Jhc2UvYm9vbC5qcz9iYzk5Il0sInNvdXJjZXNDb250ZW50IjpbIi8qXG5UaGlzIGZpbGUgaXMgcGFydCBvZiB3ZWIzLmpzLlxuXG53ZWIzLmpzIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnlcbml0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieVxudGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSwgb3JcbihhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uXG5cbndlYjMuanMgaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCxcbmJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mXG5NRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlXG5HTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy5cblxuWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG5hbG9uZyB3aXRoIHdlYjMuanMuICBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uXG4qL1xuaW1wb3J0IHsgQWJpRXJyb3IsIEludmFsaWRCb29sZWFuRXJyb3IgfSBmcm9tICd3ZWIzLWVycm9ycyc7XG5pbXBvcnQgeyB0b0Jvb2wgfSBmcm9tICd3ZWIzLXV0aWxzJztcbmltcG9ydCB7IFdPUkRfU0laRSB9IGZyb20gJy4uL3V0aWxzLmpzJztcbmltcG9ydCB7IGRlY29kZU51bWJlciwgZW5jb2RlTnVtYmVyIH0gZnJvbSAnLi9udW1iZXIuanMnO1xuZXhwb3J0IGZ1bmN0aW9uIGVuY29kZUJvb2xlYW4ocGFyYW0sIGlucHV0KSB7XG4gICAgbGV0IHZhbHVlO1xuICAgIHRyeSB7XG4gICAgICAgIHZhbHVlID0gdG9Cb29sKGlucHV0KTtcbiAgICB9XG4gICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgaWYgKGUgaW5zdGFuY2VvZiBJbnZhbGlkQm9vbGVhbkVycm9yKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgQWJpRXJyb3IoJ3Byb3ZpZGVkIGlucHV0IGlzIG5vdCB2YWxpZCBib29sZWFuIHZhbHVlJywge1xuICAgICAgICAgICAgICAgIHR5cGU6IHBhcmFtLnR5cGUsXG4gICAgICAgICAgICAgICAgdmFsdWU6IGlucHV0LFxuICAgICAgICAgICAgICAgIG5hbWU6IHBhcmFtLm5hbWUsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gZW5jb2RlTnVtYmVyKHsgdHlwZTogJ3VpbnQ4JywgbmFtZTogJycgfSwgTnVtYmVyKHZhbHVlKSk7XG59XG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlQm9vbChfcGFyYW0sIGJ5dGVzKSB7XG4gICAgY29uc3QgbnVtYmVyUmVzdWx0ID0gZGVjb2RlTnVtYmVyKHsgdHlwZTogJ3VpbnQ4JywgbmFtZTogJycgfSwgYnl0ZXMpO1xuICAgIGlmIChudW1iZXJSZXN1bHQucmVzdWx0ID4gMSB8fCBudW1iZXJSZXN1bHQucmVzdWx0IDwgMCkge1xuICAgICAgICB0aHJvdyBuZXcgQWJpRXJyb3IoJ0ludmFsaWQgYm9vbGVhbiB2YWx1ZSBlbmNvZGVkJywge1xuICAgICAgICAgICAgYm9vbEJ5dGVzOiBieXRlcy5zdWJhcnJheSgwLCBXT1JEX1NJWkUpLFxuICAgICAgICAgICAgbnVtYmVyUmVzdWx0LFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgcmVzdWx0OiBudW1iZXJSZXN1bHQucmVzdWx0ID09PSBCaWdJbnQoMSksXG4gICAgICAgIGVuY29kZWQ6IG51bWJlclJlc3VsdC5lbmNvZGVkLFxuICAgICAgICBjb25zdW1lZDogV09SRF9TSVpFLFxuICAgIH07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1ib29sLmpzLm1hcCJdLCJuYW1lcyI6WyJBYmlFcnJvciIsIkludmFsaWRCb29sZWFuRXJyb3IiLCJ0b0Jvb2wiLCJXT1JEX1NJWkUiLCJkZWNvZGVOdW1iZXIiLCJlbmNvZGVOdW1iZXIiLCJlbmNvZGVCb29sZWFuIiwicGFyYW0iLCJpbnB1dCIsInZhbHVlIiwiZSIsInR5cGUiLCJuYW1lIiwiTnVtYmVyIiwiZGVjb2RlQm9vbCIsIl9wYXJhbSIsImJ5dGVzIiwibnVtYmVyUmVzdWx0IiwicmVzdWx0IiwiYm9vbEJ5dGVzIiwic3ViYXJyYXkiLCJCaWdJbnQiLCJlbmNvZGVkIiwiY29uc3VtZWQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/base/bool.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/base/bytes.js":
/*!****************************************************************!*\
  !*** ./node_modules/web3-eth-abi/lib/esm/coders/base/bytes.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeBytes: () => (/* binding */ decodeBytes),\n/* harmony export */   encodeBytes: () => (/* binding */ encodeBytes)\n/* harmony export */ });\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-errors */ \"(ssr)/./node_modules/web3-errors/lib/esm/index.js\");\n/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-utils */ \"(ssr)/./node_modules/web3-utils/lib/esm/index.js\");\n/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-validator */ \"(ssr)/./node_modules/web3-validator/lib/esm/index.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils.js */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/utils.js\");\n/* harmony import */ var _number_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./number.js */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/base/number.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ \n\n\n\n\nconst MAX_STATIC_BYTES_COUNT = 32;\nfunction encodeBytes(param, input) {\n    // hack for odd length hex strings\n    if (typeof input === \"string\" && input.length % 2 !== 0) {\n        // eslint-disable-next-line no-param-reassign\n        input += \"0\";\n    }\n    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isBytes)(input)) {\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.AbiError(\"provided input is not valid bytes value\", {\n            type: param.type,\n            value: input,\n            name: param.name\n        });\n    }\n    const bytes = (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.bytesToUint8Array)(input);\n    const [, size] = param.type.split(\"bytes\");\n    // fixed size\n    if (size) {\n        if (Number(size) > MAX_STATIC_BYTES_COUNT || Number(size) < 1) {\n            throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.AbiError(\"invalid bytes type. Static byte type can have between 1 and 32 bytes\", {\n                type: param.type\n            });\n        }\n        if (Number(size) < bytes.length) {\n            throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.AbiError(\"provided input size is different than type size\", {\n                type: param.type,\n                value: input,\n                name: param.name\n            });\n        }\n        const encoded = (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.alloc)(_utils_js__WEBPACK_IMPORTED_MODULE_3__.WORD_SIZE);\n        encoded.set(bytes);\n        return {\n            dynamic: false,\n            encoded\n        };\n    }\n    const partsLength = Math.ceil(bytes.length / _utils_js__WEBPACK_IMPORTED_MODULE_3__.WORD_SIZE);\n    // one word for length of data + WORD for each part of actual data\n    const encoded = (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.alloc)(_utils_js__WEBPACK_IMPORTED_MODULE_3__.WORD_SIZE + partsLength * _utils_js__WEBPACK_IMPORTED_MODULE_3__.WORD_SIZE);\n    encoded.set((0,_number_js__WEBPACK_IMPORTED_MODULE_4__.encodeNumber)({\n        type: \"uint32\",\n        name: \"\"\n    }, bytes.length).encoded);\n    encoded.set(bytes, _utils_js__WEBPACK_IMPORTED_MODULE_3__.WORD_SIZE);\n    return {\n        dynamic: true,\n        encoded\n    };\n}\nfunction decodeBytes(param, bytes) {\n    const [, sizeString] = param.type.split(\"bytes\");\n    let size = Number(sizeString);\n    let remainingBytes = bytes;\n    let partsCount = 1;\n    let consumed = 0;\n    if (!size) {\n        // dynamic bytes\n        const result = (0,_number_js__WEBPACK_IMPORTED_MODULE_4__.decodeNumber)({\n            type: \"uint32\",\n            name: \"\"\n        }, remainingBytes);\n        size = Number(result.result);\n        consumed += result.consumed;\n        remainingBytes = result.encoded;\n        partsCount = Math.ceil(size / _utils_js__WEBPACK_IMPORTED_MODULE_3__.WORD_SIZE);\n    }\n    if (size > bytes.length) {\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.AbiError(\"there is not enough data to decode\", {\n            type: param.type,\n            encoded: bytes,\n            size\n        });\n    }\n    return {\n        result: (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.bytesToHex)(remainingBytes.subarray(0, size)),\n        encoded: remainingBytes.subarray(partsCount * _utils_js__WEBPACK_IMPORTED_MODULE_3__.WORD_SIZE),\n        consumed: consumed + partsCount * _utils_js__WEBPACK_IMPORTED_MODULE_3__.WORD_SIZE\n    };\n} //# sourceMappingURL=bytes.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWJpL2xpYi9lc20vY29kZXJzL2Jhc2UvYnl0ZXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBOzs7Ozs7Ozs7Ozs7Ozs7QUFlQSxHQUN1QztBQUNvQjtBQUNsQjtBQUNNO0FBQ1U7QUFDekQsTUFBTVEseUJBQXlCO0FBQ3hCLFNBQVNDLFlBQVlDLEtBQUssRUFBRUMsS0FBSztJQUNwQyxrQ0FBa0M7SUFDbEMsSUFBSSxPQUFPQSxVQUFVLFlBQVlBLE1BQU1DLE1BQU0sR0FBRyxNQUFNLEdBQUc7UUFDckQsNkNBQTZDO1FBQzdDRCxTQUFTO0lBQ2I7SUFDQSxJQUFJLENBQUNSLHVEQUFPQSxDQUFDUSxRQUFRO1FBQ2pCLE1BQU0sSUFBSVgsaURBQVFBLENBQUMsMkNBQTJDO1lBQzFEYSxNQUFNSCxNQUFNRyxJQUFJO1lBQ2hCQyxPQUFPSDtZQUNQSSxNQUFNTCxNQUFNSyxJQUFJO1FBQ3BCO0lBQ0o7SUFDQSxNQUFNQyxRQUFRZCw2REFBaUJBLENBQUNTO0lBQ2hDLE1BQU0sR0FBR00sS0FBSyxHQUFHUCxNQUFNRyxJQUFJLENBQUNLLEtBQUssQ0FBQztJQUNsQyxhQUFhO0lBQ2IsSUFBSUQsTUFBTTtRQUNOLElBQUlFLE9BQU9GLFFBQVFULDBCQUEwQlcsT0FBT0YsUUFBUSxHQUFHO1lBQzNELE1BQU0sSUFBSWpCLGlEQUFRQSxDQUFDLHdFQUF3RTtnQkFDdkZhLE1BQU1ILE1BQU1HLElBQUk7WUFDcEI7UUFDSjtRQUNBLElBQUlNLE9BQU9GLFFBQVFELE1BQU1KLE1BQU0sRUFBRTtZQUM3QixNQUFNLElBQUlaLGlEQUFRQSxDQUFDLG1EQUFtRDtnQkFDbEVhLE1BQU1ILE1BQU1HLElBQUk7Z0JBQ2hCQyxPQUFPSDtnQkFDUEksTUFBTUwsTUFBTUssSUFBSTtZQUNwQjtRQUNKO1FBQ0EsTUFBTUssVUFBVWhCLGdEQUFLQSxDQUFDQyxnREFBU0E7UUFDL0JlLFFBQVFDLEdBQUcsQ0FBQ0w7UUFDWixPQUFPO1lBQ0hNLFNBQVM7WUFDVEY7UUFDSjtJQUNKO0lBQ0EsTUFBTUcsY0FBY0MsS0FBS0MsSUFBSSxDQUFDVCxNQUFNSixNQUFNLEdBQUdQLGdEQUFTQTtJQUN0RCxrRUFBa0U7SUFDbEUsTUFBTWUsVUFBVWhCLGdEQUFLQSxDQUFDQyxnREFBU0EsR0FBR2tCLGNBQWNsQixnREFBU0E7SUFDekRlLFFBQVFDLEdBQUcsQ0FBQ2Qsd0RBQVlBLENBQUM7UUFBRU0sTUFBTTtRQUFVRSxNQUFNO0lBQUcsR0FBR0MsTUFBTUosTUFBTSxFQUFFUSxPQUFPO0lBQzVFQSxRQUFRQyxHQUFHLENBQUNMLE9BQU9YLGdEQUFTQTtJQUM1QixPQUFPO1FBQ0hpQixTQUFTO1FBQ1RGO0lBQ0o7QUFDSjtBQUNPLFNBQVNNLFlBQVloQixLQUFLLEVBQUVNLEtBQUs7SUFDcEMsTUFBTSxHQUFHVyxXQUFXLEdBQUdqQixNQUFNRyxJQUFJLENBQUNLLEtBQUssQ0FBQztJQUN4QyxJQUFJRCxPQUFPRSxPQUFPUTtJQUNsQixJQUFJQyxpQkFBaUJaO0lBQ3JCLElBQUlhLGFBQWE7SUFDakIsSUFBSUMsV0FBVztJQUNmLElBQUksQ0FBQ2IsTUFBTTtRQUNQLGdCQUFnQjtRQUNoQixNQUFNYyxTQUFTekIsd0RBQVlBLENBQUM7WUFBRU8sTUFBTTtZQUFVRSxNQUFNO1FBQUcsR0FBR2E7UUFDMURYLE9BQU9FLE9BQU9ZLE9BQU9BLE1BQU07UUFDM0JELFlBQVlDLE9BQU9ELFFBQVE7UUFDM0JGLGlCQUFpQkcsT0FBT1gsT0FBTztRQUMvQlMsYUFBYUwsS0FBS0MsSUFBSSxDQUFDUixPQUFPWixnREFBU0E7SUFDM0M7SUFDQSxJQUFJWSxPQUFPRCxNQUFNSixNQUFNLEVBQUU7UUFDckIsTUFBTSxJQUFJWixpREFBUUEsQ0FBQyxzQ0FBc0M7WUFDckRhLE1BQU1ILE1BQU1HLElBQUk7WUFDaEJPLFNBQVNKO1lBQ1RDO1FBQ0o7SUFDSjtJQUNBLE9BQU87UUFDSGMsUUFBUTlCLHNEQUFVQSxDQUFDMkIsZUFBZUksUUFBUSxDQUFDLEdBQUdmO1FBQzlDRyxTQUFTUSxlQUFlSSxRQUFRLENBQUNILGFBQWF4QixnREFBU0E7UUFDdkR5QixVQUFVQSxXQUFXRCxhQUFheEIsZ0RBQVNBO0lBQy9DO0FBQ0osRUFDQSxpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mcm9udGVuZC8uL25vZGVfbW9kdWxlcy93ZWIzLWV0aC1hYmkvbGliL2VzbS9jb2RlcnMvYmFzZS9ieXRlcy5qcz81YTk3Il0sInNvdXJjZXNDb250ZW50IjpbIi8qXG5UaGlzIGZpbGUgaXMgcGFydCBvZiB3ZWIzLmpzLlxuXG53ZWIzLmpzIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnlcbml0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieVxudGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSwgb3JcbihhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uXG5cbndlYjMuanMgaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCxcbmJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mXG5NRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlXG5HTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy5cblxuWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG5hbG9uZyB3aXRoIHdlYjMuanMuICBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uXG4qL1xuaW1wb3J0IHsgQWJpRXJyb3IgfSBmcm9tICd3ZWIzLWVycm9ycyc7XG5pbXBvcnQgeyBieXRlc1RvSGV4LCBieXRlc1RvVWludDhBcnJheSB9IGZyb20gJ3dlYjMtdXRpbHMnO1xuaW1wb3J0IHsgaXNCeXRlcyB9IGZyb20gJ3dlYjMtdmFsaWRhdG9yJztcbmltcG9ydCB7IGFsbG9jLCBXT1JEX1NJWkUgfSBmcm9tICcuLi91dGlscy5qcyc7XG5pbXBvcnQgeyBkZWNvZGVOdW1iZXIsIGVuY29kZU51bWJlciB9IGZyb20gJy4vbnVtYmVyLmpzJztcbmNvbnN0IE1BWF9TVEFUSUNfQllURVNfQ09VTlQgPSAzMjtcbmV4cG9ydCBmdW5jdGlvbiBlbmNvZGVCeXRlcyhwYXJhbSwgaW5wdXQpIHtcbiAgICAvLyBoYWNrIGZvciBvZGQgbGVuZ3RoIGhleCBzdHJpbmdzXG4gICAgaWYgKHR5cGVvZiBpbnB1dCA9PT0gJ3N0cmluZycgJiYgaW5wdXQubGVuZ3RoICUgMiAhPT0gMCkge1xuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcGFyYW0tcmVhc3NpZ25cbiAgICAgICAgaW5wdXQgKz0gJzAnO1xuICAgIH1cbiAgICBpZiAoIWlzQnl0ZXMoaW5wdXQpKSB7XG4gICAgICAgIHRocm93IG5ldyBBYmlFcnJvcigncHJvdmlkZWQgaW5wdXQgaXMgbm90IHZhbGlkIGJ5dGVzIHZhbHVlJywge1xuICAgICAgICAgICAgdHlwZTogcGFyYW0udHlwZSxcbiAgICAgICAgICAgIHZhbHVlOiBpbnB1dCxcbiAgICAgICAgICAgIG5hbWU6IHBhcmFtLm5hbWUsXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBjb25zdCBieXRlcyA9IGJ5dGVzVG9VaW50OEFycmF5KGlucHV0KTtcbiAgICBjb25zdCBbLCBzaXplXSA9IHBhcmFtLnR5cGUuc3BsaXQoJ2J5dGVzJyk7XG4gICAgLy8gZml4ZWQgc2l6ZVxuICAgIGlmIChzaXplKSB7XG4gICAgICAgIGlmIChOdW1iZXIoc2l6ZSkgPiBNQVhfU1RBVElDX0JZVEVTX0NPVU5UIHx8IE51bWJlcihzaXplKSA8IDEpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBBYmlFcnJvcignaW52YWxpZCBieXRlcyB0eXBlLiBTdGF0aWMgYnl0ZSB0eXBlIGNhbiBoYXZlIGJldHdlZW4gMSBhbmQgMzIgYnl0ZXMnLCB7XG4gICAgICAgICAgICAgICAgdHlwZTogcGFyYW0udHlwZSxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIGlmIChOdW1iZXIoc2l6ZSkgPCBieXRlcy5sZW5ndGgpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBBYmlFcnJvcigncHJvdmlkZWQgaW5wdXQgc2l6ZSBpcyBkaWZmZXJlbnQgdGhhbiB0eXBlIHNpemUnLCB7XG4gICAgICAgICAgICAgICAgdHlwZTogcGFyYW0udHlwZSxcbiAgICAgICAgICAgICAgICB2YWx1ZTogaW5wdXQsXG4gICAgICAgICAgICAgICAgbmFtZTogcGFyYW0ubmFtZSxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGVuY29kZWQgPSBhbGxvYyhXT1JEX1NJWkUpO1xuICAgICAgICBlbmNvZGVkLnNldChieXRlcyk7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBkeW5hbWljOiBmYWxzZSxcbiAgICAgICAgICAgIGVuY29kZWQsXG4gICAgICAgIH07XG4gICAgfVxuICAgIGNvbnN0IHBhcnRzTGVuZ3RoID0gTWF0aC5jZWlsKGJ5dGVzLmxlbmd0aCAvIFdPUkRfU0laRSk7XG4gICAgLy8gb25lIHdvcmQgZm9yIGxlbmd0aCBvZiBkYXRhICsgV09SRCBmb3IgZWFjaCBwYXJ0IG9mIGFjdHVhbCBkYXRhXG4gICAgY29uc3QgZW5jb2RlZCA9IGFsbG9jKFdPUkRfU0laRSArIHBhcnRzTGVuZ3RoICogV09SRF9TSVpFKTtcbiAgICBlbmNvZGVkLnNldChlbmNvZGVOdW1iZXIoeyB0eXBlOiAndWludDMyJywgbmFtZTogJycgfSwgYnl0ZXMubGVuZ3RoKS5lbmNvZGVkKTtcbiAgICBlbmNvZGVkLnNldChieXRlcywgV09SRF9TSVpFKTtcbiAgICByZXR1cm4ge1xuICAgICAgICBkeW5hbWljOiB0cnVlLFxuICAgICAgICBlbmNvZGVkLFxuICAgIH07XG59XG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlQnl0ZXMocGFyYW0sIGJ5dGVzKSB7XG4gICAgY29uc3QgWywgc2l6ZVN0cmluZ10gPSBwYXJhbS50eXBlLnNwbGl0KCdieXRlcycpO1xuICAgIGxldCBzaXplID0gTnVtYmVyKHNpemVTdHJpbmcpO1xuICAgIGxldCByZW1haW5pbmdCeXRlcyA9IGJ5dGVzO1xuICAgIGxldCBwYXJ0c0NvdW50ID0gMTtcbiAgICBsZXQgY29uc3VtZWQgPSAwO1xuICAgIGlmICghc2l6ZSkge1xuICAgICAgICAvLyBkeW5hbWljIGJ5dGVzXG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IGRlY29kZU51bWJlcih7IHR5cGU6ICd1aW50MzInLCBuYW1lOiAnJyB9LCByZW1haW5pbmdCeXRlcyk7XG4gICAgICAgIHNpemUgPSBOdW1iZXIocmVzdWx0LnJlc3VsdCk7XG4gICAgICAgIGNvbnN1bWVkICs9IHJlc3VsdC5jb25zdW1lZDtcbiAgICAgICAgcmVtYWluaW5nQnl0ZXMgPSByZXN1bHQuZW5jb2RlZDtcbiAgICAgICAgcGFydHNDb3VudCA9IE1hdGguY2VpbChzaXplIC8gV09SRF9TSVpFKTtcbiAgICB9XG4gICAgaWYgKHNpemUgPiBieXRlcy5sZW5ndGgpIHtcbiAgICAgICAgdGhyb3cgbmV3IEFiaUVycm9yKCd0aGVyZSBpcyBub3QgZW5vdWdoIGRhdGEgdG8gZGVjb2RlJywge1xuICAgICAgICAgICAgdHlwZTogcGFyYW0udHlwZSxcbiAgICAgICAgICAgIGVuY29kZWQ6IGJ5dGVzLFxuICAgICAgICAgICAgc2l6ZSxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgIHJlc3VsdDogYnl0ZXNUb0hleChyZW1haW5pbmdCeXRlcy5zdWJhcnJheSgwLCBzaXplKSksXG4gICAgICAgIGVuY29kZWQ6IHJlbWFpbmluZ0J5dGVzLnN1YmFycmF5KHBhcnRzQ291bnQgKiBXT1JEX1NJWkUpLFxuICAgICAgICBjb25zdW1lZDogY29uc3VtZWQgKyBwYXJ0c0NvdW50ICogV09SRF9TSVpFLFxuICAgIH07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1ieXRlcy5qcy5tYXAiXSwibmFtZXMiOlsiQWJpRXJyb3IiLCJieXRlc1RvSGV4IiwiYnl0ZXNUb1VpbnQ4QXJyYXkiLCJpc0J5dGVzIiwiYWxsb2MiLCJXT1JEX1NJWkUiLCJkZWNvZGVOdW1iZXIiLCJlbmNvZGVOdW1iZXIiLCJNQVhfU1RBVElDX0JZVEVTX0NPVU5UIiwiZW5jb2RlQnl0ZXMiLCJwYXJhbSIsImlucHV0IiwibGVuZ3RoIiwidHlwZSIsInZhbHVlIiwibmFtZSIsImJ5dGVzIiwic2l6ZSIsInNwbGl0IiwiTnVtYmVyIiwiZW5jb2RlZCIsInNldCIsImR5bmFtaWMiLCJwYXJ0c0xlbmd0aCIsIk1hdGgiLCJjZWlsIiwiZGVjb2RlQnl0ZXMiLCJzaXplU3RyaW5nIiwicmVtYWluaW5nQnl0ZXMiLCJwYXJ0c0NvdW50IiwiY29uc3VtZWQiLCJyZXN1bHQiLCJzdWJhcnJheSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/base/bytes.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/base/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/web3-eth-abi/lib/esm/coders/base/index.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeAddress: () => (/* reexport safe */ _address_js__WEBPACK_IMPORTED_MODULE_0__.decodeAddress),\n/* harmony export */   decodeArray: () => (/* reexport safe */ _array_js__WEBPACK_IMPORTED_MODULE_6__.decodeArray),\n/* harmony export */   decodeBool: () => (/* reexport safe */ _bool_js__WEBPACK_IMPORTED_MODULE_1__.decodeBool),\n/* harmony export */   decodeBytes: () => (/* reexport safe */ _bytes_js__WEBPACK_IMPORTED_MODULE_2__.decodeBytes),\n/* harmony export */   decodeNumber: () => (/* reexport safe */ _number_js__WEBPACK_IMPORTED_MODULE_3__.decodeNumber),\n/* harmony export */   decodeParamFromAbiParameter: () => (/* binding */ decodeParamFromAbiParameter),\n/* harmony export */   decodeString: () => (/* reexport safe */ _string_js__WEBPACK_IMPORTED_MODULE_4__.decodeString),\n/* harmony export */   decodeTuple: () => (/* reexport safe */ _tuple_js__WEBPACK_IMPORTED_MODULE_5__.decodeTuple),\n/* harmony export */   encodeAddress: () => (/* reexport safe */ _address_js__WEBPACK_IMPORTED_MODULE_0__.encodeAddress),\n/* harmony export */   encodeArray: () => (/* reexport safe */ _array_js__WEBPACK_IMPORTED_MODULE_6__.encodeArray),\n/* harmony export */   encodeBoolean: () => (/* reexport safe */ _bool_js__WEBPACK_IMPORTED_MODULE_1__.encodeBoolean),\n/* harmony export */   encodeBytes: () => (/* reexport safe */ _bytes_js__WEBPACK_IMPORTED_MODULE_2__.encodeBytes),\n/* harmony export */   encodeNumber: () => (/* reexport safe */ _number_js__WEBPACK_IMPORTED_MODULE_3__.encodeNumber),\n/* harmony export */   encodeParamFromAbiParameter: () => (/* binding */ encodeParamFromAbiParameter),\n/* harmony export */   encodeString: () => (/* reexport safe */ _string_js__WEBPACK_IMPORTED_MODULE_4__.encodeString),\n/* harmony export */   encodeTuple: () => (/* reexport safe */ _tuple_js__WEBPACK_IMPORTED_MODULE_5__.encodeTuple)\n/* harmony export */ });\n/* harmony import */ var _address_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./address.js */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/base/address.js\");\n/* harmony import */ var _bool_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./bool.js */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/base/bool.js\");\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./bytes.js */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/base/bytes.js\");\n/* harmony import */ var _number_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./number.js */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/base/number.js\");\n/* harmony import */ var _string_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./string.js */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/base/string.js\");\n/* harmony import */ var _tuple_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./tuple.js */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/base/tuple.js\");\n/* harmony import */ var _array_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./array.js */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/base/array.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ \n\n\n\n\n// eslint-disable-next-line import/no-cycle\n\n// eslint-disable-next-line import/no-cycle\n\n\n\n\n\n\n// eslint-disable-next-line import/no-cycle\n\n// eslint-disable-next-line import/no-cycle\n\nfunction encodeParamFromAbiParameter(param, value) {\n    if (param.type === \"string\") {\n        return (0,_string_js__WEBPACK_IMPORTED_MODULE_4__.encodeString)(param, value);\n    }\n    if (param.type === \"bool\") {\n        return (0,_bool_js__WEBPACK_IMPORTED_MODULE_1__.encodeBoolean)(param, value);\n    }\n    if (param.type === \"address\") {\n        return (0,_address_js__WEBPACK_IMPORTED_MODULE_0__.encodeAddress)(param, value);\n    }\n    if (param.type === \"tuple\") {\n        return (0,_tuple_js__WEBPACK_IMPORTED_MODULE_5__.encodeTuple)(param, value);\n    }\n    if (param.type.endsWith(\"]\")) {\n        return (0,_array_js__WEBPACK_IMPORTED_MODULE_6__.encodeArray)(param, value);\n    }\n    if (param.type.startsWith(\"bytes\")) {\n        return (0,_bytes_js__WEBPACK_IMPORTED_MODULE_2__.encodeBytes)(param, value);\n    }\n    if (param.type.startsWith(\"uint\") || param.type.startsWith(\"int\")) {\n        return (0,_number_js__WEBPACK_IMPORTED_MODULE_3__.encodeNumber)(param, value);\n    }\n    throw new Error(\"Unsupported\");\n}\nfunction decodeParamFromAbiParameter(param, bytes) {\n    if (param.type === \"string\") {\n        return (0,_string_js__WEBPACK_IMPORTED_MODULE_4__.decodeString)(param, bytes);\n    }\n    if (param.type === \"bool\") {\n        return (0,_bool_js__WEBPACK_IMPORTED_MODULE_1__.decodeBool)(param, bytes);\n    }\n    if (param.type === \"address\") {\n        return (0,_address_js__WEBPACK_IMPORTED_MODULE_0__.decodeAddress)(param, bytes);\n    }\n    if (param.type === \"tuple\") {\n        return (0,_tuple_js__WEBPACK_IMPORTED_MODULE_5__.decodeTuple)(param, bytes);\n    }\n    if (param.type.endsWith(\"]\")) {\n        return (0,_array_js__WEBPACK_IMPORTED_MODULE_6__.decodeArray)(param, bytes);\n    }\n    if (param.type.startsWith(\"bytes\")) {\n        return (0,_bytes_js__WEBPACK_IMPORTED_MODULE_2__.decodeBytes)(param, bytes);\n    }\n    if (param.type.startsWith(\"uint\") || param.type.startsWith(\"int\")) {\n        return (0,_number_js__WEBPACK_IMPORTED_MODULE_3__.decodeNumber)(param, bytes);\n    }\n    throw new Error(\"Unsupported\");\n} //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWJpL2xpYi9lc20vY29kZXJzL2Jhc2UvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTs7Ozs7Ozs7Ozs7Ozs7O0FBZUEsR0FDNEQ7QUFDTjtBQUNBO0FBQ0c7QUFDQTtBQUN6RCwyQ0FBMkM7QUFDVztBQUN0RCwyQ0FBMkM7QUFDVztBQUNNO0FBQ047QUFDQTtBQUNHO0FBQ0E7QUFDekQsMkNBQTJDO0FBQ1c7QUFDdEQsMkNBQTJDO0FBQ1c7QUFDL0MsU0FBU2MsNEJBQTRCQyxLQUFLLEVBQUVDLEtBQUs7SUFDcEQsSUFBSUQsTUFBTUUsSUFBSSxLQUFLLFVBQVU7UUFDekIsT0FBT1Isd0RBQVlBLENBQUNNLE9BQU9DO0lBQy9CO0lBQ0EsSUFBSUQsTUFBTUUsSUFBSSxLQUFLLFFBQVE7UUFDdkIsT0FBT2QsdURBQWFBLENBQUNZLE9BQU9DO0lBQ2hDO0lBQ0EsSUFBSUQsTUFBTUUsSUFBSSxLQUFLLFdBQVc7UUFDMUIsT0FBT2hCLDBEQUFhQSxDQUFDYyxPQUFPQztJQUNoQztJQUNBLElBQUlELE1BQU1FLElBQUksS0FBSyxTQUFTO1FBQ3hCLE9BQU9OLHNEQUFXQSxDQUFDSSxPQUFPQztJQUM5QjtJQUNBLElBQUlELE1BQU1FLElBQUksQ0FBQ0MsUUFBUSxDQUFDLE1BQU07UUFDMUIsT0FBT0wsc0RBQVdBLENBQUNFLE9BQU9DO0lBQzlCO0lBQ0EsSUFBSUQsTUFBTUUsSUFBSSxDQUFDRSxVQUFVLENBQUMsVUFBVTtRQUNoQyxPQUFPZCxzREFBV0EsQ0FBQ1UsT0FBT0M7SUFDOUI7SUFDQSxJQUFJRCxNQUFNRSxJQUFJLENBQUNFLFVBQVUsQ0FBQyxXQUFXSixNQUFNRSxJQUFJLENBQUNFLFVBQVUsQ0FBQyxRQUFRO1FBQy9ELE9BQU9aLHdEQUFZQSxDQUFDUSxPQUFPQztJQUMvQjtJQUNBLE1BQU0sSUFBSUksTUFBTTtBQUNwQjtBQUNPLFNBQVNDLDRCQUE0Qk4sS0FBSyxFQUFFTyxLQUFLO0lBQ3BELElBQUlQLE1BQU1FLElBQUksS0FBSyxVQUFVO1FBQ3pCLE9BQU9ULHdEQUFZQSxDQUFDTyxPQUFPTztJQUMvQjtJQUNBLElBQUlQLE1BQU1FLElBQUksS0FBSyxRQUFRO1FBQ3ZCLE9BQU9mLG9EQUFVQSxDQUFDYSxPQUFPTztJQUM3QjtJQUNBLElBQUlQLE1BQU1FLElBQUksS0FBSyxXQUFXO1FBQzFCLE9BQU9qQiwwREFBYUEsQ0FBQ2UsT0FBT087SUFDaEM7SUFDQSxJQUFJUCxNQUFNRSxJQUFJLEtBQUssU0FBUztRQUN4QixPQUFPUCxzREFBV0EsQ0FBQ0ssT0FBT087SUFDOUI7SUFDQSxJQUFJUCxNQUFNRSxJQUFJLENBQUNDLFFBQVEsQ0FBQyxNQUFNO1FBQzFCLE9BQU9OLHNEQUFXQSxDQUFDRyxPQUFPTztJQUM5QjtJQUNBLElBQUlQLE1BQU1FLElBQUksQ0FBQ0UsVUFBVSxDQUFDLFVBQVU7UUFDaEMsT0FBT2Ysc0RBQVdBLENBQUNXLE9BQU9PO0lBQzlCO0lBQ0EsSUFBSVAsTUFBTUUsSUFBSSxDQUFDRSxVQUFVLENBQUMsV0FBV0osTUFBTUUsSUFBSSxDQUFDRSxVQUFVLENBQUMsUUFBUTtRQUMvRCxPQUFPYix3REFBWUEsQ0FBQ1MsT0FBT087SUFDL0I7SUFDQSxNQUFNLElBQUlGLE1BQU07QUFDcEIsRUFDQSxpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mcm9udGVuZC8uL25vZGVfbW9kdWxlcy93ZWIzLWV0aC1hYmkvbGliL2VzbS9jb2RlcnMvYmFzZS9pbmRleC5qcz9kZmExIl0sInNvdXJjZXNDb250ZW50IjpbIi8qXG5UaGlzIGZpbGUgaXMgcGFydCBvZiB3ZWIzLmpzLlxuXG53ZWIzLmpzIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnlcbml0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieVxudGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSwgb3JcbihhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uXG5cbndlYjMuanMgaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCxcbmJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mXG5NRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlXG5HTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy5cblxuWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG5hbG9uZyB3aXRoIHdlYjMuanMuICBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uXG4qL1xuaW1wb3J0IHsgZGVjb2RlQWRkcmVzcywgZW5jb2RlQWRkcmVzcyB9IGZyb20gJy4vYWRkcmVzcy5qcyc7XG5pbXBvcnQgeyBkZWNvZGVCb29sLCBlbmNvZGVCb29sZWFuIH0gZnJvbSAnLi9ib29sLmpzJztcbmltcG9ydCB7IGRlY29kZUJ5dGVzLCBlbmNvZGVCeXRlcyB9IGZyb20gJy4vYnl0ZXMuanMnO1xuaW1wb3J0IHsgZGVjb2RlTnVtYmVyLCBlbmNvZGVOdW1iZXIgfSBmcm9tICcuL251bWJlci5qcyc7XG5pbXBvcnQgeyBkZWNvZGVTdHJpbmcsIGVuY29kZVN0cmluZyB9IGZyb20gJy4vc3RyaW5nLmpzJztcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBpbXBvcnQvbm8tY3ljbGVcbmltcG9ydCB7IGRlY29kZVR1cGxlLCBlbmNvZGVUdXBsZSB9IGZyb20gJy4vdHVwbGUuanMnO1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGltcG9ydC9uby1jeWNsZVxuaW1wb3J0IHsgZGVjb2RlQXJyYXksIGVuY29kZUFycmF5IH0gZnJvbSAnLi9hcnJheS5qcyc7XG5leHBvcnQgeyBlbmNvZGVBZGRyZXNzLCBkZWNvZGVBZGRyZXNzIH0gZnJvbSAnLi9hZGRyZXNzLmpzJztcbmV4cG9ydCB7IGVuY29kZUJvb2xlYW4sIGRlY29kZUJvb2wgfSBmcm9tICcuL2Jvb2wuanMnO1xuZXhwb3J0IHsgZW5jb2RlQnl0ZXMsIGRlY29kZUJ5dGVzIH0gZnJvbSAnLi9ieXRlcy5qcyc7XG5leHBvcnQgeyBlbmNvZGVOdW1iZXIsIGRlY29kZU51bWJlciB9IGZyb20gJy4vbnVtYmVyLmpzJztcbmV4cG9ydCB7IGVuY29kZVN0cmluZywgZGVjb2RlU3RyaW5nIH0gZnJvbSAnLi9zdHJpbmcuanMnO1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGltcG9ydC9uby1jeWNsZVxuZXhwb3J0IHsgZW5jb2RlVHVwbGUsIGRlY29kZVR1cGxlIH0gZnJvbSAnLi90dXBsZS5qcyc7XG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgaW1wb3J0L25vLWN5Y2xlXG5leHBvcnQgeyBlbmNvZGVBcnJheSwgZGVjb2RlQXJyYXkgfSBmcm9tICcuL2FycmF5LmpzJztcbmV4cG9ydCBmdW5jdGlvbiBlbmNvZGVQYXJhbUZyb21BYmlQYXJhbWV0ZXIocGFyYW0sIHZhbHVlKSB7XG4gICAgaWYgKHBhcmFtLnR5cGUgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHJldHVybiBlbmNvZGVTdHJpbmcocGFyYW0sIHZhbHVlKTtcbiAgICB9XG4gICAgaWYgKHBhcmFtLnR5cGUgPT09ICdib29sJykge1xuICAgICAgICByZXR1cm4gZW5jb2RlQm9vbGVhbihwYXJhbSwgdmFsdWUpO1xuICAgIH1cbiAgICBpZiAocGFyYW0udHlwZSA9PT0gJ2FkZHJlc3MnKSB7XG4gICAgICAgIHJldHVybiBlbmNvZGVBZGRyZXNzKHBhcmFtLCB2YWx1ZSk7XG4gICAgfVxuICAgIGlmIChwYXJhbS50eXBlID09PSAndHVwbGUnKSB7XG4gICAgICAgIHJldHVybiBlbmNvZGVUdXBsZShwYXJhbSwgdmFsdWUpO1xuICAgIH1cbiAgICBpZiAocGFyYW0udHlwZS5lbmRzV2l0aCgnXScpKSB7XG4gICAgICAgIHJldHVybiBlbmNvZGVBcnJheShwYXJhbSwgdmFsdWUpO1xuICAgIH1cbiAgICBpZiAocGFyYW0udHlwZS5zdGFydHNXaXRoKCdieXRlcycpKSB7XG4gICAgICAgIHJldHVybiBlbmNvZGVCeXRlcyhwYXJhbSwgdmFsdWUpO1xuICAgIH1cbiAgICBpZiAocGFyYW0udHlwZS5zdGFydHNXaXRoKCd1aW50JykgfHwgcGFyYW0udHlwZS5zdGFydHNXaXRoKCdpbnQnKSkge1xuICAgICAgICByZXR1cm4gZW5jb2RlTnVtYmVyKHBhcmFtLCB2YWx1ZSk7XG4gICAgfVxuICAgIHRocm93IG5ldyBFcnJvcignVW5zdXBwb3J0ZWQnKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVQYXJhbUZyb21BYmlQYXJhbWV0ZXIocGFyYW0sIGJ5dGVzKSB7XG4gICAgaWYgKHBhcmFtLnR5cGUgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHJldHVybiBkZWNvZGVTdHJpbmcocGFyYW0sIGJ5dGVzKTtcbiAgICB9XG4gICAgaWYgKHBhcmFtLnR5cGUgPT09ICdib29sJykge1xuICAgICAgICByZXR1cm4gZGVjb2RlQm9vbChwYXJhbSwgYnl0ZXMpO1xuICAgIH1cbiAgICBpZiAocGFyYW0udHlwZSA9PT0gJ2FkZHJlc3MnKSB7XG4gICAgICAgIHJldHVybiBkZWNvZGVBZGRyZXNzKHBhcmFtLCBieXRlcyk7XG4gICAgfVxuICAgIGlmIChwYXJhbS50eXBlID09PSAndHVwbGUnKSB7XG4gICAgICAgIHJldHVybiBkZWNvZGVUdXBsZShwYXJhbSwgYnl0ZXMpO1xuICAgIH1cbiAgICBpZiAocGFyYW0udHlwZS5lbmRzV2l0aCgnXScpKSB7XG4gICAgICAgIHJldHVybiBkZWNvZGVBcnJheShwYXJhbSwgYnl0ZXMpO1xuICAgIH1cbiAgICBpZiAocGFyYW0udHlwZS5zdGFydHNXaXRoKCdieXRlcycpKSB7XG4gICAgICAgIHJldHVybiBkZWNvZGVCeXRlcyhwYXJhbSwgYnl0ZXMpO1xuICAgIH1cbiAgICBpZiAocGFyYW0udHlwZS5zdGFydHNXaXRoKCd1aW50JykgfHwgcGFyYW0udHlwZS5zdGFydHNXaXRoKCdpbnQnKSkge1xuICAgICAgICByZXR1cm4gZGVjb2RlTnVtYmVyKHBhcmFtLCBieXRlcyk7XG4gICAgfVxuICAgIHRocm93IG5ldyBFcnJvcignVW5zdXBwb3J0ZWQnKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6WyJkZWNvZGVBZGRyZXNzIiwiZW5jb2RlQWRkcmVzcyIsImRlY29kZUJvb2wiLCJlbmNvZGVCb29sZWFuIiwiZGVjb2RlQnl0ZXMiLCJlbmNvZGVCeXRlcyIsImRlY29kZU51bWJlciIsImVuY29kZU51bWJlciIsImRlY29kZVN0cmluZyIsImVuY29kZVN0cmluZyIsImRlY29kZVR1cGxlIiwiZW5jb2RlVHVwbGUiLCJkZWNvZGVBcnJheSIsImVuY29kZUFycmF5IiwiZW5jb2RlUGFyYW1Gcm9tQWJpUGFyYW1ldGVyIiwicGFyYW0iLCJ2YWx1ZSIsInR5cGUiLCJlbmRzV2l0aCIsInN0YXJ0c1dpdGgiLCJFcnJvciIsImRlY29kZVBhcmFtRnJvbUFiaVBhcmFtZXRlciIsImJ5dGVzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/base/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/base/number.js":
/*!*****************************************************************!*\
  !*** ./node_modules/web3-eth-abi/lib/esm/coders/base/number.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeNumber: () => (/* binding */ decodeNumber),\n/* harmony export */   encodeNumber: () => (/* binding */ encodeNumber)\n/* harmony export */ });\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-errors */ \"(ssr)/./node_modules/web3-errors/lib/esm/index.js\");\n/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-utils */ \"(ssr)/./node_modules/web3-utils/lib/esm/index.js\");\n/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-validator */ \"(ssr)/./node_modules/web3-validator/lib/esm/index.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils.js */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/utils.js\");\n/* harmony import */ var _numbersLimits_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./numbersLimits.js */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/base/numbersLimits.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ \n\n\n\n\n// eslint-disable-next-line no-bitwise\nconst mask = BigInt(1) << BigInt(256);\nfunction bigIntToUint8Array(value, byteLength = _utils_js__WEBPACK_IMPORTED_MODULE_3__.WORD_SIZE) {\n    let hexValue;\n    if (value < 0) {\n        hexValue = (mask + value).toString(16);\n    } else {\n        hexValue = value.toString(16);\n    }\n    hexValue = (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.padLeft)(hexValue, byteLength * 2);\n    return web3_validator__WEBPACK_IMPORTED_MODULE_2__.utils.hexToUint8Array(hexValue);\n}\nfunction uint8ArrayToBigInt(value, max) {\n    const hexValue = web3_validator__WEBPACK_IMPORTED_MODULE_2__.utils.uint8ArrayToHexString(value);\n    const result = BigInt(hexValue);\n    if (result <= max) return result;\n    return result - mask;\n}\nfunction encodeNumber(param, input) {\n    let value;\n    try {\n        value = (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.toBigInt)(input);\n    } catch (e) {\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.AbiError(\"provided input is not number value\", {\n            type: param.type,\n            value: input,\n            name: param.name\n        });\n    }\n    const limit = _numbersLimits_js__WEBPACK_IMPORTED_MODULE_4__.numberLimits.get(param.type);\n    if (!limit) {\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.AbiError(\"provided abi contains invalid number datatype\", {\n            type: param.type\n        });\n    }\n    if (value < limit.min) {\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.AbiError(\"provided input is less then minimum for given type\", {\n            type: param.type,\n            value: input,\n            name: param.name,\n            minimum: limit.min.toString()\n        });\n    }\n    if (value > limit.max) {\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.AbiError(\"provided input is greater then maximum for given type\", {\n            type: param.type,\n            value: input,\n            name: param.name,\n            maximum: limit.max.toString()\n        });\n    }\n    return {\n        dynamic: false,\n        encoded: bigIntToUint8Array(value)\n    };\n}\nfunction decodeNumber(param, bytes) {\n    if (bytes.length < _utils_js__WEBPACK_IMPORTED_MODULE_3__.WORD_SIZE) {\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.AbiError(\"Not enough bytes left to decode\", {\n            param,\n            bytesLeft: bytes.length\n        });\n    }\n    const boolBytes = bytes.subarray(0, _utils_js__WEBPACK_IMPORTED_MODULE_3__.WORD_SIZE);\n    const limit = _numbersLimits_js__WEBPACK_IMPORTED_MODULE_4__.numberLimits.get(param.type);\n    if (!limit) {\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.AbiError(\"provided abi contains invalid number datatype\", {\n            type: param.type\n        });\n    }\n    const numberResult = uint8ArrayToBigInt(boolBytes, limit.max);\n    if (numberResult < limit.min) {\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.AbiError(\"decoded value is less then minimum for given type\", {\n            type: param.type,\n            value: numberResult,\n            name: param.name,\n            minimum: limit.min.toString()\n        });\n    }\n    if (numberResult > limit.max) {\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.AbiError(\"decoded value is greater then maximum for given type\", {\n            type: param.type,\n            value: numberResult,\n            name: param.name,\n            maximum: limit.max.toString()\n        });\n    }\n    return {\n        result: numberResult,\n        encoded: bytes.subarray(_utils_js__WEBPACK_IMPORTED_MODULE_3__.WORD_SIZE),\n        consumed: _utils_js__WEBPACK_IMPORTED_MODULE_3__.WORD_SIZE\n    };\n} //# sourceMappingURL=number.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/base/number.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/base/numbersLimits.js":
/*!************************************************************************!*\
  !*** ./node_modules/web3-eth-abi/lib/esm/coders/base/numbersLimits.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   numberLimits: () => (/* binding */ numberLimits)\n/* harmony export */ });\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ /*\n * this variable contains the precalculated limits for all the numbers for uint and int types\n*/ const numberLimits = new Map();\nlet base = BigInt(256); // 2 ^ 8 = 256\nfor(let i = 8; i <= 256; i += 8){\n    numberLimits.set(`uint${i}`, {\n        min: BigInt(0),\n        max: base - BigInt(1)\n    });\n    numberLimits.set(`int${i}`, {\n        min: -base / BigInt(2),\n        max: base / BigInt(2) - BigInt(1)\n    });\n    base *= BigInt(256);\n}\n// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\nnumberLimits.set(`int`, numberLimits.get(\"int256\"));\n// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\nnumberLimits.set(`uint`, numberLimits.get(\"uint256\")); //# sourceMappingURL=numbersLimits.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWJpL2xpYi9lc20vY29kZXJzL2Jhc2UvbnVtYmVyc0xpbWl0cy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7Ozs7Ozs7Ozs7Ozs7OztBQWVBLEdBQ0E7O0FBRUEsR0FDTyxNQUFNQSxlQUFlLElBQUlDLE1BQU07QUFDdEMsSUFBSUMsT0FBT0MsT0FBTyxNQUFNLGNBQWM7QUFDdEMsSUFBSyxJQUFJQyxJQUFJLEdBQUdBLEtBQUssS0FBS0EsS0FBSyxFQUFHO0lBQzlCSixhQUFhSyxHQUFHLENBQUMsQ0FBQyxJQUFJLEVBQUVELEVBQUUsQ0FBQyxFQUFFO1FBQ3pCRSxLQUFLSCxPQUFPO1FBQ1pJLEtBQUtMLE9BQU9DLE9BQU87SUFDdkI7SUFDQUgsYUFBYUssR0FBRyxDQUFDLENBQUMsR0FBRyxFQUFFRCxFQUFFLENBQUMsRUFBRTtRQUN4QkUsS0FBSyxDQUFDSixPQUFPQyxPQUFPO1FBQ3BCSSxLQUFLTCxPQUFPQyxPQUFPLEtBQUtBLE9BQU87SUFDbkM7SUFDQUQsUUFBUUMsT0FBTztBQUNuQjtBQUNBLG9FQUFvRTtBQUNwRUgsYUFBYUssR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEVBQUVMLGFBQWFRLEdBQUcsQ0FBQztBQUN6QyxvRUFBb0U7QUFDcEVSLGFBQWFLLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxFQUFFTCxhQUFhUSxHQUFHLENBQUMsYUFDMUMseUNBQXlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWJpL2xpYi9lc20vY29kZXJzL2Jhc2UvbnVtYmVyc0xpbWl0cy5qcz82MmNmIl0sInNvdXJjZXNDb250ZW50IjpbIi8qXG5UaGlzIGZpbGUgaXMgcGFydCBvZiB3ZWIzLmpzLlxuXG53ZWIzLmpzIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnlcbml0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieVxudGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSwgb3JcbihhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uXG5cbndlYjMuanMgaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCxcbmJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mXG5NRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlXG5HTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy5cblxuWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG5hbG9uZyB3aXRoIHdlYjMuanMuICBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uXG4qL1xuLypcbiAqIHRoaXMgdmFyaWFibGUgY29udGFpbnMgdGhlIHByZWNhbGN1bGF0ZWQgbGltaXRzIGZvciBhbGwgdGhlIG51bWJlcnMgZm9yIHVpbnQgYW5kIGludCB0eXBlc1xuKi9cbmV4cG9ydCBjb25zdCBudW1iZXJMaW1pdHMgPSBuZXcgTWFwKCk7XG5sZXQgYmFzZSA9IEJpZ0ludCgyNTYpOyAvLyAyIF4gOCA9IDI1NlxuZm9yIChsZXQgaSA9IDg7IGkgPD0gMjU2OyBpICs9IDgpIHtcbiAgICBudW1iZXJMaW1pdHMuc2V0KGB1aW50JHtpfWAsIHtcbiAgICAgICAgbWluOiBCaWdJbnQoMCksXG4gICAgICAgIG1heDogYmFzZSAtIEJpZ0ludCgxKSxcbiAgICB9KTtcbiAgICBudW1iZXJMaW1pdHMuc2V0KGBpbnQke2l9YCwge1xuICAgICAgICBtaW46IC1iYXNlIC8gQmlnSW50KDIpLFxuICAgICAgICBtYXg6IGJhc2UgLyBCaWdJbnQoMikgLSBCaWdJbnQoMSksXG4gICAgfSk7XG4gICAgYmFzZSAqPSBCaWdJbnQoMjU2KTtcbn1cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tbm9uLW51bGwtYXNzZXJ0aW9uXG5udW1iZXJMaW1pdHMuc2V0KGBpbnRgLCBudW1iZXJMaW1pdHMuZ2V0KCdpbnQyNTYnKSk7XG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLW5vbi1udWxsLWFzc2VydGlvblxubnVtYmVyTGltaXRzLnNldChgdWludGAsIG51bWJlckxpbWl0cy5nZXQoJ3VpbnQyNTYnKSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1udW1iZXJzTGltaXRzLmpzLm1hcCJdLCJuYW1lcyI6WyJudW1iZXJMaW1pdHMiLCJNYXAiLCJiYXNlIiwiQmlnSW50IiwiaSIsInNldCIsIm1pbiIsIm1heCIsImdldCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/base/numbersLimits.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/base/string.js":
/*!*****************************************************************!*\
  !*** ./node_modules/web3-eth-abi/lib/esm/coders/base/string.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeString: () => (/* binding */ decodeString),\n/* harmony export */   encodeString: () => (/* binding */ encodeString)\n/* harmony export */ });\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-errors */ \"(ssr)/./node_modules/web3-errors/lib/esm/index.js\");\n/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-utils */ \"(ssr)/./node_modules/web3-utils/lib/esm/index.js\");\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./bytes.js */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/base/bytes.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ \n\n\nfunction encodeString(_param, input) {\n    if (typeof input !== \"string\") {\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.AbiError(\"invalid input, should be string\", {\n            input\n        });\n    }\n    const bytes = (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.utf8ToBytes)(input);\n    return (0,_bytes_js__WEBPACK_IMPORTED_MODULE_2__.encodeBytes)({\n        type: \"bytes\",\n        name: \"\"\n    }, bytes);\n}\nfunction decodeString(_param, bytes) {\n    const r = (0,_bytes_js__WEBPACK_IMPORTED_MODULE_2__.decodeBytes)({\n        type: \"bytes\",\n        name: \"\"\n    }, bytes);\n    return {\n        result: (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.hexToUtf8)(r.result),\n        encoded: r.encoded,\n        consumed: r.consumed\n    };\n} //# sourceMappingURL=string.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWJpL2xpYi9lc20vY29kZXJzL2Jhc2Uvc3RyaW5nLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7Ozs7Ozs7Ozs7Ozs7OztBQWVBLEdBQ3VDO0FBQ2E7QUFDRTtBQUMvQyxTQUFTSyxhQUFhQyxNQUFNLEVBQUVDLEtBQUs7SUFDdEMsSUFBSSxPQUFPQSxVQUFVLFVBQVU7UUFDM0IsTUFBTSxJQUFJUCxpREFBUUEsQ0FBQyxtQ0FBbUM7WUFBRU87UUFBTTtJQUNsRTtJQUNBLE1BQU1DLFFBQVFOLHVEQUFXQSxDQUFDSztJQUMxQixPQUFPSCxzREFBV0EsQ0FBQztRQUFFSyxNQUFNO1FBQVNDLE1BQU07SUFBRyxHQUFHRjtBQUNwRDtBQUNPLFNBQVNHLGFBQWFMLE1BQU0sRUFBRUUsS0FBSztJQUN0QyxNQUFNSSxJQUFJVCxzREFBV0EsQ0FBQztRQUFFTSxNQUFNO1FBQVNDLE1BQU07SUFBRyxHQUFHRjtJQUNuRCxPQUFPO1FBQ0hLLFFBQVFaLHFEQUFTQSxDQUFDVyxFQUFFQyxNQUFNO1FBQzFCQyxTQUFTRixFQUFFRSxPQUFPO1FBQ2xCQyxVQUFVSCxFQUFFRyxRQUFRO0lBQ3hCO0FBQ0osRUFDQSxrQ0FBa0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mcm9udGVuZC8uL25vZGVfbW9kdWxlcy93ZWIzLWV0aC1hYmkvbGliL2VzbS9jb2RlcnMvYmFzZS9zdHJpbmcuanM/NTY0YiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuVGhpcyBmaWxlIGlzIHBhcnQgb2Ygd2ViMy5qcy5cblxud2ViMy5qcyBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5XG5pdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnlcbnRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yXG4oYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLlxuXG53ZWIzLmpzIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsXG5idXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZlxuTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZVxuR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG5cbllvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZVxuYWxvbmcgd2l0aCB3ZWIzLmpzLiAgSWYgbm90LCBzZWUgPGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LlxuKi9cbmltcG9ydCB7IEFiaUVycm9yIH0gZnJvbSAnd2ViMy1lcnJvcnMnO1xuaW1wb3J0IHsgaGV4VG9VdGY4LCB1dGY4VG9CeXRlcyB9IGZyb20gJ3dlYjMtdXRpbHMnO1xuaW1wb3J0IHsgZGVjb2RlQnl0ZXMsIGVuY29kZUJ5dGVzIH0gZnJvbSAnLi9ieXRlcy5qcyc7XG5leHBvcnQgZnVuY3Rpb24gZW5jb2RlU3RyaW5nKF9wYXJhbSwgaW5wdXQpIHtcbiAgICBpZiAodHlwZW9mIGlucHV0ICE9PSAnc3RyaW5nJykge1xuICAgICAgICB0aHJvdyBuZXcgQWJpRXJyb3IoJ2ludmFsaWQgaW5wdXQsIHNob3VsZCBiZSBzdHJpbmcnLCB7IGlucHV0IH0pO1xuICAgIH1cbiAgICBjb25zdCBieXRlcyA9IHV0ZjhUb0J5dGVzKGlucHV0KTtcbiAgICByZXR1cm4gZW5jb2RlQnl0ZXMoeyB0eXBlOiAnYnl0ZXMnLCBuYW1lOiAnJyB9LCBieXRlcyk7XG59XG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlU3RyaW5nKF9wYXJhbSwgYnl0ZXMpIHtcbiAgICBjb25zdCByID0gZGVjb2RlQnl0ZXMoeyB0eXBlOiAnYnl0ZXMnLCBuYW1lOiAnJyB9LCBieXRlcyk7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgcmVzdWx0OiBoZXhUb1V0Zjgoci5yZXN1bHQpLFxuICAgICAgICBlbmNvZGVkOiByLmVuY29kZWQsXG4gICAgICAgIGNvbnN1bWVkOiByLmNvbnN1bWVkLFxuICAgIH07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zdHJpbmcuanMubWFwIl0sIm5hbWVzIjpbIkFiaUVycm9yIiwiaGV4VG9VdGY4IiwidXRmOFRvQnl0ZXMiLCJkZWNvZGVCeXRlcyIsImVuY29kZUJ5dGVzIiwiZW5jb2RlU3RyaW5nIiwiX3BhcmFtIiwiaW5wdXQiLCJieXRlcyIsInR5cGUiLCJuYW1lIiwiZGVjb2RlU3RyaW5nIiwiciIsInJlc3VsdCIsImVuY29kZWQiLCJjb25zdW1lZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/base/string.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/base/tuple.js":
/*!****************************************************************!*\
  !*** ./node_modules/web3-eth-abi/lib/esm/coders/base/tuple.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeTuple: () => (/* binding */ decodeTuple),\n/* harmony export */   encodeTuple: () => (/* binding */ encodeTuple)\n/* harmony export */ });\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-errors */ \"(ssr)/./node_modules/web3-errors/lib/esm/index.js\");\n/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-utils */ \"(ssr)/./node_modules/web3-utils/lib/esm/index.js\");\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./index.js */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/base/index.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/base/utils.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils.js */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/utils.js\");\n/* harmony import */ var _number_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./number.js */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/base/number.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ \n\n// eslint-disable-next-line import/no-cycle\n\n\n\n\nfunction encodeTuple(param, input) {\n    var _a, _b, _c;\n    let dynamic = false;\n    if (!Array.isArray(input) && typeof input !== \"object\") {\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.AbiError(\"param must be either Array or Object\", {\n            param,\n            input\n        });\n    }\n    const narrowedInput = input;\n    const encoded = [];\n    for(let i = 0; i < ((_b = (_a = param.components) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0); i += 1){\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const paramComponent = param.components[i];\n        let result;\n        if (Array.isArray(narrowedInput)) {\n            if (i >= narrowedInput.length) {\n                throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.AbiError(\"input param length missmatch\", {\n                    param,\n                    input\n                });\n            }\n            result = (0,_index_js__WEBPACK_IMPORTED_MODULE_2__.encodeParamFromAbiParameter)(paramComponent, narrowedInput[i]);\n        } else {\n            const paramInput = narrowedInput[(_c = paramComponent.name) !== null && _c !== void 0 ? _c : \"\"];\n            // eslint-disable-next-line no-null/no-null\n            if (paramInput === undefined || paramInput === null) {\n                throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.AbiError(\"missing input defined in abi\", {\n                    param,\n                    input,\n                    paramName: paramComponent.name\n                });\n            }\n            result = (0,_index_js__WEBPACK_IMPORTED_MODULE_2__.encodeParamFromAbiParameter)(paramComponent, paramInput);\n        }\n        if (result.dynamic) {\n            dynamic = true;\n        }\n        encoded.push(result);\n    }\n    if (dynamic) {\n        return {\n            dynamic: true,\n            encoded: (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.encodeDynamicParams)(encoded)\n        };\n    }\n    return {\n        dynamic: false,\n        encoded: (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.uint8ArrayConcat)(...encoded.map((e)=>e.encoded))\n    };\n}\nfunction decodeTuple(param, bytes) {\n    const result = {\n        __length__: 0\n    };\n    // tracks how much static params consumed bytes\n    let consumed = 0;\n    if (!param.components) {\n        return {\n            result,\n            encoded: bytes,\n            consumed\n        };\n    }\n    // track how much dynamic params consumed bytes\n    let dynamicConsumed = 0;\n    for (const [index, childParam] of param.components.entries()){\n        let decodedResult;\n        if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isDynamic)(childParam)) {\n            // if dynamic, we will have offset encoded\n            const offsetResult = (0,_number_js__WEBPACK_IMPORTED_MODULE_5__.decodeNumber)({\n                type: \"uint32\",\n                name: \"\"\n            }, bytes.subarray(consumed));\n            // offset counts from start of original byte sequence\n            decodedResult = (0,_index_js__WEBPACK_IMPORTED_MODULE_2__.decodeParamFromAbiParameter)(childParam, bytes.subarray(Number(offsetResult.result)));\n            consumed += offsetResult.consumed;\n            dynamicConsumed += decodedResult.consumed;\n        } else {\n            // static param, just decode\n            decodedResult = (0,_index_js__WEBPACK_IMPORTED_MODULE_2__.decodeParamFromAbiParameter)(childParam, bytes.subarray(consumed));\n            consumed += decodedResult.consumed;\n        }\n        result.__length__ += 1;\n        result[index] = decodedResult.result;\n        if (childParam.name && childParam.name !== \"\") {\n            result[childParam.name] = decodedResult.result;\n        }\n    }\n    return {\n        encoded: bytes.subarray(consumed + dynamicConsumed),\n        result,\n        consumed: consumed + dynamicConsumed\n    };\n} //# sourceMappingURL=tuple.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/base/tuple.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/base/utils.js":
/*!****************************************************************!*\
  !*** ./node_modules/web3-eth-abi/lib/esm/coders/base/utils.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   encodeDynamicParams: () => (/* binding */ encodeDynamicParams)\n/* harmony export */ });\n/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-utils */ \"(ssr)/./node_modules/web3-utils/lib/esm/index.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils.js */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/utils.js\");\n/* harmony import */ var _number_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./number.js */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/base/number.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ \n\n\nfunction encodeDynamicParams(encodedParams) {\n    let staticSize = 0;\n    let dynamicSize = 0;\n    const staticParams = [];\n    const dynamicParams = [];\n    // figure out static size\n    for (const encodedParam of encodedParams){\n        if (encodedParam.dynamic) {\n            staticSize += _utils_js__WEBPACK_IMPORTED_MODULE_1__.WORD_SIZE;\n        } else {\n            staticSize += encodedParam.encoded.length;\n        }\n    }\n    for (const encodedParam of encodedParams){\n        if (encodedParam.dynamic) {\n            staticParams.push((0,_number_js__WEBPACK_IMPORTED_MODULE_2__.encodeNumber)({\n                type: \"uint256\",\n                name: \"\"\n            }, staticSize + dynamicSize));\n            dynamicParams.push(encodedParam);\n            dynamicSize += encodedParam.encoded.length;\n        } else {\n            staticParams.push(encodedParam);\n        }\n    }\n    return (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.uint8ArrayConcat)(...staticParams.map((p)=>p.encoded), ...dynamicParams.map((p)=>p.encoded));\n} //# sourceMappingURL=utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWJpL2xpYi9lc20vY29kZXJzL2Jhc2UvdXRpbHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7Ozs7Ozs7Ozs7Ozs7QUFlQSxHQUM4QztBQUNOO0FBQ0c7QUFDcEMsU0FBU0csb0JBQW9CQyxhQUFhO0lBQzdDLElBQUlDLGFBQWE7SUFDakIsSUFBSUMsY0FBYztJQUNsQixNQUFNQyxlQUFlLEVBQUU7SUFDdkIsTUFBTUMsZ0JBQWdCLEVBQUU7SUFDeEIseUJBQXlCO0lBQ3pCLEtBQUssTUFBTUMsZ0JBQWdCTCxjQUFlO1FBQ3RDLElBQUlLLGFBQWFDLE9BQU8sRUFBRTtZQUN0QkwsY0FBY0osZ0RBQVNBO1FBQzNCLE9BQ0s7WUFDREksY0FBY0ksYUFBYUUsT0FBTyxDQUFDQyxNQUFNO1FBQzdDO0lBQ0o7SUFDQSxLQUFLLE1BQU1ILGdCQUFnQkwsY0FBZTtRQUN0QyxJQUFJSyxhQUFhQyxPQUFPLEVBQUU7WUFDdEJILGFBQWFNLElBQUksQ0FBQ1gsd0RBQVlBLENBQUM7Z0JBQUVZLE1BQU07Z0JBQVdDLE1BQU07WUFBRyxHQUFHVixhQUFhQztZQUMzRUUsY0FBY0ssSUFBSSxDQUFDSjtZQUNuQkgsZUFBZUcsYUFBYUUsT0FBTyxDQUFDQyxNQUFNO1FBQzlDLE9BQ0s7WUFDREwsYUFBYU0sSUFBSSxDQUFDSjtRQUN0QjtJQUNKO0lBQ0EsT0FBT1QsNERBQWdCQSxJQUFJTyxhQUFhUyxHQUFHLENBQUNDLENBQUFBLElBQUtBLEVBQUVOLE9BQU8sTUFBTUgsY0FBY1EsR0FBRyxDQUFDQyxDQUFBQSxJQUFLQSxFQUFFTixPQUFPO0FBQ3BHLEVBQ0EsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWJpL2xpYi9lc20vY29kZXJzL2Jhc2UvdXRpbHMuanM/MGJhZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuVGhpcyBmaWxlIGlzIHBhcnQgb2Ygd2ViMy5qcy5cblxud2ViMy5qcyBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5XG5pdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnlcbnRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yXG4oYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLlxuXG53ZWIzLmpzIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsXG5idXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZlxuTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZVxuR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG5cbllvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZVxuYWxvbmcgd2l0aCB3ZWIzLmpzLiAgSWYgbm90LCBzZWUgPGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LlxuKi9cbmltcG9ydCB7IHVpbnQ4QXJyYXlDb25jYXQgfSBmcm9tICd3ZWIzLXV0aWxzJztcbmltcG9ydCB7IFdPUkRfU0laRSB9IGZyb20gJy4uL3V0aWxzLmpzJztcbmltcG9ydCB7IGVuY29kZU51bWJlciB9IGZyb20gJy4vbnVtYmVyLmpzJztcbmV4cG9ydCBmdW5jdGlvbiBlbmNvZGVEeW5hbWljUGFyYW1zKGVuY29kZWRQYXJhbXMpIHtcbiAgICBsZXQgc3RhdGljU2l6ZSA9IDA7XG4gICAgbGV0IGR5bmFtaWNTaXplID0gMDtcbiAgICBjb25zdCBzdGF0aWNQYXJhbXMgPSBbXTtcbiAgICBjb25zdCBkeW5hbWljUGFyYW1zID0gW107XG4gICAgLy8gZmlndXJlIG91dCBzdGF0aWMgc2l6ZVxuICAgIGZvciAoY29uc3QgZW5jb2RlZFBhcmFtIG9mIGVuY29kZWRQYXJhbXMpIHtcbiAgICAgICAgaWYgKGVuY29kZWRQYXJhbS5keW5hbWljKSB7XG4gICAgICAgICAgICBzdGF0aWNTaXplICs9IFdPUkRfU0laRTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHN0YXRpY1NpemUgKz0gZW5jb2RlZFBhcmFtLmVuY29kZWQubGVuZ3RoO1xuICAgICAgICB9XG4gICAgfVxuICAgIGZvciAoY29uc3QgZW5jb2RlZFBhcmFtIG9mIGVuY29kZWRQYXJhbXMpIHtcbiAgICAgICAgaWYgKGVuY29kZWRQYXJhbS5keW5hbWljKSB7XG4gICAgICAgICAgICBzdGF0aWNQYXJhbXMucHVzaChlbmNvZGVOdW1iZXIoeyB0eXBlOiAndWludDI1NicsIG5hbWU6ICcnIH0sIHN0YXRpY1NpemUgKyBkeW5hbWljU2l6ZSkpO1xuICAgICAgICAgICAgZHluYW1pY1BhcmFtcy5wdXNoKGVuY29kZWRQYXJhbSk7XG4gICAgICAgICAgICBkeW5hbWljU2l6ZSArPSBlbmNvZGVkUGFyYW0uZW5jb2RlZC5sZW5ndGg7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBzdGF0aWNQYXJhbXMucHVzaChlbmNvZGVkUGFyYW0pO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiB1aW50OEFycmF5Q29uY2F0KC4uLnN0YXRpY1BhcmFtcy5tYXAocCA9PiBwLmVuY29kZWQpLCAuLi5keW5hbWljUGFyYW1zLm1hcChwID0+IHAuZW5jb2RlZCkpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXRpbHMuanMubWFwIl0sIm5hbWVzIjpbInVpbnQ4QXJyYXlDb25jYXQiLCJXT1JEX1NJWkUiLCJlbmNvZGVOdW1iZXIiLCJlbmNvZGVEeW5hbWljUGFyYW1zIiwiZW5jb2RlZFBhcmFtcyIsInN0YXRpY1NpemUiLCJkeW5hbWljU2l6ZSIsInN0YXRpY1BhcmFtcyIsImR5bmFtaWNQYXJhbXMiLCJlbmNvZGVkUGFyYW0iLCJkeW5hbWljIiwiZW5jb2RlZCIsImxlbmd0aCIsInB1c2giLCJ0eXBlIiwibmFtZSIsIm1hcCIsInAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/base/utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/decode.js":
/*!************************************************************!*\
  !*** ./node_modules/web3-eth-abi/lib/esm/coders/decode.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeParameters: () => (/* binding */ decodeParameters)\n/* harmony export */ });\n/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-validator */ \"(ssr)/./node_modules/web3-validator/lib/esm/index.js\");\n/* harmony import */ var _base_tuple_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./base/tuple.js */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/base/tuple.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/utils.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ \n\n\nfunction decodeParameters(abis, bytes, _loose) {\n    const abiParams = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.toAbiParams)(abis);\n    const bytesArray = web3_validator__WEBPACK_IMPORTED_MODULE_0__.utils.hexToUint8Array(bytes);\n    return (0,_base_tuple_js__WEBPACK_IMPORTED_MODULE_1__.decodeTuple)({\n        type: \"tuple\",\n        name: \"\",\n        components: abiParams\n    }, bytesArray).result;\n} //# sourceMappingURL=decode.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWJpL2xpYi9lc20vY29kZXJzL2RlY29kZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7Ozs7Ozs7Ozs7OztBQWVBLEdBQ3VDO0FBQ087QUFDTDtBQUNsQyxTQUFTRyxpQkFBaUJDLElBQUksRUFBRUMsS0FBSyxFQUFFQyxNQUFNO0lBQ2hELE1BQU1DLFlBQVlMLHNEQUFXQSxDQUFDRTtJQUM5QixNQUFNSSxhQUFhUixpRUFBcUIsQ0FBQ0s7SUFDekMsT0FBT0osMkRBQVdBLENBQUM7UUFBRVMsTUFBTTtRQUFTQyxNQUFNO1FBQUlDLFlBQVlMO0lBQVUsR0FBR0MsWUFBWUssTUFBTTtBQUM3RixFQUNBLGtDQUFrQyIsInNvdXJjZXMiOlsid2VicGFjazovL2Zyb250ZW5kLy4vbm9kZV9tb2R1bGVzL3dlYjMtZXRoLWFiaS9saWIvZXNtL2NvZGVycy9kZWNvZGUuanM/OGQ3YiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuVGhpcyBmaWxlIGlzIHBhcnQgb2Ygd2ViMy5qcy5cblxud2ViMy5qcyBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5XG5pdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnlcbnRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yXG4oYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLlxuXG53ZWIzLmpzIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsXG5idXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZlxuTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZVxuR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG5cbllvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZVxuYWxvbmcgd2l0aCB3ZWIzLmpzLiAgSWYgbm90LCBzZWUgPGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LlxuKi9cbmltcG9ydCB7IHV0aWxzIH0gZnJvbSAnd2ViMy12YWxpZGF0b3InO1xuaW1wb3J0IHsgZGVjb2RlVHVwbGUgfSBmcm9tICcuL2Jhc2UvdHVwbGUuanMnO1xuaW1wb3J0IHsgdG9BYmlQYXJhbXMgfSBmcm9tICcuL3V0aWxzLmpzJztcbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVQYXJhbWV0ZXJzKGFiaXMsIGJ5dGVzLCBfbG9vc2UpIHtcbiAgICBjb25zdCBhYmlQYXJhbXMgPSB0b0FiaVBhcmFtcyhhYmlzKTtcbiAgICBjb25zdCBieXRlc0FycmF5ID0gdXRpbHMuaGV4VG9VaW50OEFycmF5KGJ5dGVzKTtcbiAgICByZXR1cm4gZGVjb2RlVHVwbGUoeyB0eXBlOiAndHVwbGUnLCBuYW1lOiAnJywgY29tcG9uZW50czogYWJpUGFyYW1zIH0sIGJ5dGVzQXJyYXkpLnJlc3VsdDtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRlY29kZS5qcy5tYXAiXSwibmFtZXMiOlsidXRpbHMiLCJkZWNvZGVUdXBsZSIsInRvQWJpUGFyYW1zIiwiZGVjb2RlUGFyYW1ldGVycyIsImFiaXMiLCJieXRlcyIsIl9sb29zZSIsImFiaVBhcmFtcyIsImJ5dGVzQXJyYXkiLCJoZXhUb1VpbnQ4QXJyYXkiLCJ0eXBlIiwibmFtZSIsImNvbXBvbmVudHMiLCJyZXN1bHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/decode.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/encode.js":
/*!************************************************************!*\
  !*** ./node_modules/web3-eth-abi/lib/esm/coders/encode.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   encodeParameters: () => (/* binding */ encodeParameters)\n/* harmony export */ });\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-errors */ \"(ssr)/./node_modules/web3-errors/lib/esm/index.js\");\n/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-validator */ \"(ssr)/./node_modules/web3-validator/lib/esm/index.js\");\n/* harmony import */ var _base_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./base/index.js */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/base/index.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/utils.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ \n\n\n\nfunction encodeParameters(abi, params) {\n    if (abi.length !== params.length) {\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.AbiError(\"Invalid number of values received for given ABI\", {\n            expected: abi.length,\n            received: params.length\n        });\n    }\n    const abiParams = (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.toAbiParams)(abi);\n    return web3_validator__WEBPACK_IMPORTED_MODULE_1__.utils.uint8ArrayToHexString((0,_base_index_js__WEBPACK_IMPORTED_MODULE_2__.encodeTuple)({\n        type: \"tuple\",\n        name: \"\",\n        components: abiParams\n    }, params).encoded);\n} //# sourceMappingURL=encode.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWJpL2xpYi9lc20vY29kZXJzL2VuY29kZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBOzs7Ozs7Ozs7Ozs7Ozs7QUFlQSxHQUN1QztBQUNBO0FBQ087QUFDTDtBQUNsQyxTQUFTSSxpQkFBaUJDLEdBQUcsRUFBRUMsTUFBTTtJQUN4QyxJQUFJRCxJQUFJRSxNQUFNLEtBQUtELE9BQU9DLE1BQU0sRUFBRTtRQUM5QixNQUFNLElBQUlQLGlEQUFRQSxDQUFDLG1EQUFtRDtZQUNsRVEsVUFBVUgsSUFBSUUsTUFBTTtZQUNwQkUsVUFBVUgsT0FBT0MsTUFBTTtRQUMzQjtJQUNKO0lBQ0EsTUFBTUcsWUFBWVAsc0RBQVdBLENBQUNFO0lBQzlCLE9BQU9KLHVFQUEyQixDQUFDQywyREFBV0EsQ0FBQztRQUFFVSxNQUFNO1FBQVNDLE1BQU07UUFBSUMsWUFBWUo7SUFBVSxHQUFHSixRQUFRUyxPQUFPO0FBQ3RILEVBQ0Esa0NBQWtDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWJpL2xpYi9lc20vY29kZXJzL2VuY29kZS5qcz8zMmY0Il0sInNvdXJjZXNDb250ZW50IjpbIi8qXG5UaGlzIGZpbGUgaXMgcGFydCBvZiB3ZWIzLmpzLlxuXG53ZWIzLmpzIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnlcbml0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieVxudGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSwgb3JcbihhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uXG5cbndlYjMuanMgaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCxcbmJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mXG5NRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlXG5HTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy5cblxuWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG5hbG9uZyB3aXRoIHdlYjMuanMuICBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uXG4qL1xuaW1wb3J0IHsgQWJpRXJyb3IgfSBmcm9tICd3ZWIzLWVycm9ycyc7XG5pbXBvcnQgeyB1dGlscyB9IGZyb20gJ3dlYjMtdmFsaWRhdG9yJztcbmltcG9ydCB7IGVuY29kZVR1cGxlIH0gZnJvbSAnLi9iYXNlL2luZGV4LmpzJztcbmltcG9ydCB7IHRvQWJpUGFyYW1zIH0gZnJvbSAnLi91dGlscy5qcyc7XG5leHBvcnQgZnVuY3Rpb24gZW5jb2RlUGFyYW1ldGVycyhhYmksIHBhcmFtcykge1xuICAgIGlmIChhYmkubGVuZ3RoICE9PSBwYXJhbXMubGVuZ3RoKSB7XG4gICAgICAgIHRocm93IG5ldyBBYmlFcnJvcignSW52YWxpZCBudW1iZXIgb2YgdmFsdWVzIHJlY2VpdmVkIGZvciBnaXZlbiBBQkknLCB7XG4gICAgICAgICAgICBleHBlY3RlZDogYWJpLmxlbmd0aCxcbiAgICAgICAgICAgIHJlY2VpdmVkOiBwYXJhbXMubGVuZ3RoLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgY29uc3QgYWJpUGFyYW1zID0gdG9BYmlQYXJhbXMoYWJpKTtcbiAgICByZXR1cm4gdXRpbHMudWludDhBcnJheVRvSGV4U3RyaW5nKGVuY29kZVR1cGxlKHsgdHlwZTogJ3R1cGxlJywgbmFtZTogJycsIGNvbXBvbmVudHM6IGFiaVBhcmFtcyB9LCBwYXJhbXMpLmVuY29kZWQpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZW5jb2RlLmpzLm1hcCJdLCJuYW1lcyI6WyJBYmlFcnJvciIsInV0aWxzIiwiZW5jb2RlVHVwbGUiLCJ0b0FiaVBhcmFtcyIsImVuY29kZVBhcmFtZXRlcnMiLCJhYmkiLCJwYXJhbXMiLCJsZW5ndGgiLCJleHBlY3RlZCIsInJlY2VpdmVkIiwiYWJpUGFyYW1zIiwidWludDhBcnJheVRvSGV4U3RyaW5nIiwidHlwZSIsIm5hbWUiLCJjb21wb25lbnRzIiwiZW5jb2RlZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/encode.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/utils.js":
/*!***********************************************************!*\
  !*** ./node_modules/web3-eth-abi/lib/esm/coders/utils.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WORD_SIZE: () => (/* binding */ WORD_SIZE),\n/* harmony export */   alloc: () => (/* binding */ alloc),\n/* harmony export */   allocUnsafe: () => (/* binding */ allocUnsafe),\n/* harmony export */   convertExternalAbiParameter: () => (/* binding */ convertExternalAbiParameter),\n/* harmony export */   extractArrayType: () => (/* binding */ extractArrayType),\n/* harmony export */   isAbiParameter: () => (/* binding */ isAbiParameter),\n/* harmony export */   isDynamic: () => (/* binding */ isDynamic),\n/* harmony export */   toAbiParams: () => (/* binding */ toAbiParams)\n/* harmony export */ });\n/* harmony import */ var abitype__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! abitype */ \"(ssr)/./node_modules/abitype/dist/index.mjs\");\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-errors */ \"(ssr)/./node_modules/web3-errors/lib/esm/index.js\");\n/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-utils */ \"(ssr)/./node_modules/web3-utils/lib/esm/index.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils.js */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/utils.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ \n\n\n\nconst WORD_SIZE = 32;\nfunction alloc(size = 0) {\n    var _a;\n    if (((_a = globalThis.Buffer) === null || _a === void 0 ? void 0 : _a.alloc) !== undefined) {\n        const buf = globalThis.Buffer.alloc(size);\n        return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);\n    }\n    return new Uint8Array(size);\n}\n/**\n * Where possible returns a Uint8Array of the requested size that references\n * uninitialized memory. Only use if you are certain you will immediately\n * overwrite every value in the returned `Uint8Array`.\n */ function allocUnsafe(size = 0) {\n    var _a;\n    if (((_a = globalThis.Buffer) === null || _a === void 0 ? void 0 : _a.allocUnsafe) !== undefined) {\n        const buf = globalThis.Buffer.allocUnsafe(size);\n        return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);\n    }\n    return new Uint8Array(size);\n}\nfunction convertExternalAbiParameter(abiParam) {\n    var _a, _b;\n    return Object.assign(Object.assign({}, abiParam), {\n        name: (_a = abiParam.name) !== null && _a !== void 0 ? _a : \"\",\n        components: (_b = abiParam.components) === null || _b === void 0 ? void 0 : _b.map((c)=>convertExternalAbiParameter(c))\n    });\n}\nfunction isAbiParameter(param) {\n    return !(0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.isNullish)(param) && typeof param === \"object\" && !(0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.isNullish)(param.type) && typeof param.type === \"string\";\n}\nfunction toAbiParams(abi) {\n    return abi.map((input)=>{\n        var _a;\n        if (isAbiParameter(input)) {\n            return input;\n        }\n        if (typeof input === \"string\") {\n            return convertExternalAbiParameter((0,abitype__WEBPACK_IMPORTED_MODULE_3__.parseAbiParameter)(input.replace(/tuple/, \"\")));\n        }\n        if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.isSimplifiedStructFormat)(input)) {\n            const structName = Object.keys(input)[0];\n            const structInfo = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.mapStructNameAndType)(structName);\n            structInfo.name = (_a = structInfo.name) !== null && _a !== void 0 ? _a : \"\";\n            return Object.assign(Object.assign({}, structInfo), {\n                components: (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.mapStructToCoderFormat)(input[structName])\n            });\n        }\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.AbiError(\"Invalid abi\");\n    });\n}\nfunction extractArrayType(param) {\n    const arrayParenthesisStart = param.type.lastIndexOf(\"[\");\n    const arrayParamType = param.type.substring(0, arrayParenthesisStart);\n    const sizeString = param.type.substring(arrayParenthesisStart);\n    let size = -1;\n    if (sizeString !== \"[]\") {\n        size = Number(sizeString.slice(1, -1));\n        // eslint-disable-next-line no-restricted-globals\n        if (isNaN(size)) {\n            throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.AbiError(\"Invalid fixed array size\", {\n                size: sizeString\n            });\n        }\n    }\n    return {\n        param: {\n            type: arrayParamType,\n            name: \"\",\n            components: param.components\n        },\n        size\n    };\n}\n/**\n * Param is dynamic if it's dynamic base type or if some of his children (components, array items)\n * is of dynamic type\n * @param param\n */ function isDynamic(param) {\n    var _a, _b;\n    if (param.type === \"string\" || param.type === \"bytes\" || param.type.endsWith(\"[]\")) return true;\n    if (param.type === \"tuple\") {\n        return (_b = (_a = param.components) === null || _a === void 0 ? void 0 : _a.some(isDynamic)) !== null && _b !== void 0 ? _b : false;\n    }\n    if (param.type.endsWith(\"]\")) {\n        return isDynamic(extractArrayType(param).param);\n    }\n    return false;\n} //# sourceMappingURL=utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWJpL2xpYi9lc20vY29kZXJzL3V0aWxzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFBOzs7Ozs7Ozs7Ozs7Ozs7QUFlQSxHQUM0QztBQUNMO0FBQ0E7QUFDK0Q7QUFDL0YsTUFBTU0sWUFBWSxHQUFHO0FBQ3JCLFNBQVNDLE1BQU1DLE9BQU8sQ0FBQztJQUMxQixJQUFJQztJQUNKLElBQUksQ0FBQyxDQUFDQSxLQUFLQyxXQUFXQyxNQUFNLE1BQU0sUUFBUUYsT0FBTyxLQUFLLElBQUksS0FBSyxJQUFJQSxHQUFHRixLQUFLLE1BQU1LLFdBQVc7UUFDeEYsTUFBTUMsTUFBTUgsV0FBV0MsTUFBTSxDQUFDSixLQUFLLENBQUNDO1FBQ3BDLE9BQU8sSUFBSU0sV0FBV0QsSUFBSUUsTUFBTSxFQUFFRixJQUFJRyxVQUFVLEVBQUVILElBQUlJLFVBQVU7SUFDcEU7SUFDQSxPQUFPLElBQUlILFdBQVdOO0FBQzFCO0FBQ0E7Ozs7Q0FJQyxHQUNNLFNBQVNVLFlBQVlWLE9BQU8sQ0FBQztJQUNoQyxJQUFJQztJQUNKLElBQUksQ0FBQyxDQUFDQSxLQUFLQyxXQUFXQyxNQUFNLE1BQU0sUUFBUUYsT0FBTyxLQUFLLElBQUksS0FBSyxJQUFJQSxHQUFHUyxXQUFXLE1BQU1OLFdBQVc7UUFDOUYsTUFBTUMsTUFBTUgsV0FBV0MsTUFBTSxDQUFDTyxXQUFXLENBQUNWO1FBQzFDLE9BQU8sSUFBSU0sV0FBV0QsSUFBSUUsTUFBTSxFQUFFRixJQUFJRyxVQUFVLEVBQUVILElBQUlJLFVBQVU7SUFDcEU7SUFDQSxPQUFPLElBQUlILFdBQVdOO0FBQzFCO0FBQ08sU0FBU1csNEJBQTRCQyxRQUFRO0lBQ2hELElBQUlYLElBQUlZO0lBQ1IsT0FBT0MsT0FBT0MsTUFBTSxDQUFDRCxPQUFPQyxNQUFNLENBQUMsQ0FBQyxHQUFHSCxXQUFXO1FBQUVJLE1BQU0sQ0FBQ2YsS0FBS1csU0FBU0ksSUFBSSxNQUFNLFFBQVFmLE9BQU8sS0FBSyxJQUFJQSxLQUFLO1FBQUlnQixZQUFZLENBQUNKLEtBQUtELFNBQVNLLFVBQVUsTUFBTSxRQUFRSixPQUFPLEtBQUssSUFBSSxLQUFLLElBQUlBLEdBQUdLLEdBQUcsQ0FBQ0MsQ0FBQUEsSUFBS1IsNEJBQTRCUTtJQUFJO0FBQ2hQO0FBQ08sU0FBU0MsZUFBZUMsS0FBSztJQUNoQyxPQUFRLENBQUMzQixxREFBU0EsQ0FBQzJCLFVBQ2YsT0FBT0EsVUFBVSxZQUNqQixDQUFDM0IscURBQVNBLENBQUMyQixNQUFNQyxJQUFJLEtBQ3JCLE9BQU9ELE1BQU1DLElBQUksS0FBSztBQUM5QjtBQUNPLFNBQVNDLFlBQVlDLEdBQUc7SUFDM0IsT0FBT0EsSUFBSU4sR0FBRyxDQUFDTyxDQUFBQTtRQUNYLElBQUl4QjtRQUNKLElBQUltQixlQUFlSyxRQUFRO1lBQ3ZCLE9BQU9BO1FBQ1g7UUFDQSxJQUFJLE9BQU9BLFVBQVUsVUFBVTtZQUMzQixPQUFPZCw0QkFBNEJuQiwwREFBaUJBLENBQUNpQyxNQUFNQyxPQUFPLENBQUMsU0FBUztRQUNoRjtRQUNBLElBQUkvQixtRUFBd0JBLENBQUM4QixRQUFRO1lBQ2pDLE1BQU1FLGFBQWFiLE9BQU9jLElBQUksQ0FBQ0gsTUFBTSxDQUFDLEVBQUU7WUFDeEMsTUFBTUksYUFBYWpDLCtEQUFvQkEsQ0FBQytCO1lBQ3hDRSxXQUFXYixJQUFJLEdBQUcsQ0FBQ2YsS0FBSzRCLFdBQVdiLElBQUksTUFBTSxRQUFRZixPQUFPLEtBQUssSUFBSUEsS0FBSztZQUMxRSxPQUFPYSxPQUFPQyxNQUFNLENBQUNELE9BQU9DLE1BQU0sQ0FBQyxDQUFDLEdBQUdjLGFBQWE7Z0JBQUVaLFlBQVlwQixpRUFBc0JBLENBQUM0QixLQUFLLENBQUNFLFdBQVc7WUFBRTtRQUNoSDtRQUNBLE1BQU0sSUFBSWxDLGlEQUFRQSxDQUFDO0lBQ3ZCO0FBQ0o7QUFDTyxTQUFTcUMsaUJBQWlCVCxLQUFLO0lBQ2xDLE1BQU1VLHdCQUF3QlYsTUFBTUMsSUFBSSxDQUFDVSxXQUFXLENBQUM7SUFDckQsTUFBTUMsaUJBQWlCWixNQUFNQyxJQUFJLENBQUNZLFNBQVMsQ0FBQyxHQUFHSDtJQUMvQyxNQUFNSSxhQUFhZCxNQUFNQyxJQUFJLENBQUNZLFNBQVMsQ0FBQ0g7SUFDeEMsSUFBSS9CLE9BQU8sQ0FBQztJQUNaLElBQUltQyxlQUFlLE1BQU07UUFDckJuQyxPQUFPb0MsT0FBT0QsV0FBV0UsS0FBSyxDQUFDLEdBQUcsQ0FBQztRQUNuQyxpREFBaUQ7UUFDakQsSUFBSUMsTUFBTXRDLE9BQU87WUFDYixNQUFNLElBQUlQLGlEQUFRQSxDQUFDLDRCQUE0QjtnQkFBRU8sTUFBTW1DO1lBQVc7UUFDdEU7SUFDSjtJQUNBLE9BQU87UUFDSGQsT0FBTztZQUFFQyxNQUFNVztZQUFnQmpCLE1BQU07WUFBSUMsWUFBWUksTUFBTUosVUFBVTtRQUFDO1FBQ3RFakI7SUFDSjtBQUNKO0FBQ0E7Ozs7Q0FJQyxHQUNNLFNBQVN1QyxVQUFVbEIsS0FBSztJQUMzQixJQUFJcEIsSUFBSVk7SUFDUixJQUFJUSxNQUFNQyxJQUFJLEtBQUssWUFBWUQsTUFBTUMsSUFBSSxLQUFLLFdBQVdELE1BQU1DLElBQUksQ0FBQ2tCLFFBQVEsQ0FBQyxPQUN6RSxPQUFPO0lBQ1gsSUFBSW5CLE1BQU1DLElBQUksS0FBSyxTQUFTO1FBQ3hCLE9BQU8sQ0FBQ1QsS0FBSyxDQUFDWixLQUFLb0IsTUFBTUosVUFBVSxNQUFNLFFBQVFoQixPQUFPLEtBQUssSUFBSSxLQUFLLElBQUlBLEdBQUd3QyxJQUFJLENBQUNGLFVBQVMsTUFBTyxRQUFRMUIsT0FBTyxLQUFLLElBQUlBLEtBQUs7SUFDbkk7SUFDQSxJQUFJUSxNQUFNQyxJQUFJLENBQUNrQixRQUFRLENBQUMsTUFBTTtRQUMxQixPQUFPRCxVQUFVVCxpQkFBaUJULE9BQU9BLEtBQUs7SUFDbEQ7SUFDQSxPQUFPO0FBQ1gsRUFDQSxpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mcm9udGVuZC8uL25vZGVfbW9kdWxlcy93ZWIzLWV0aC1hYmkvbGliL2VzbS9jb2RlcnMvdXRpbHMuanM/ZDkxYSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuVGhpcyBmaWxlIGlzIHBhcnQgb2Ygd2ViMy5qcy5cblxud2ViMy5qcyBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5XG5pdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnlcbnRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yXG4oYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLlxuXG53ZWIzLmpzIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsXG5idXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZlxuTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZVxuR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG5cbllvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZVxuYWxvbmcgd2l0aCB3ZWIzLmpzLiAgSWYgbm90LCBzZWUgPGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LlxuKi9cbmltcG9ydCB7IHBhcnNlQWJpUGFyYW1ldGVyIH0gZnJvbSAnYWJpdHlwZSc7XG5pbXBvcnQgeyBBYmlFcnJvciB9IGZyb20gJ3dlYjMtZXJyb3JzJztcbmltcG9ydCB7IGlzTnVsbGlzaCB9IGZyb20gJ3dlYjMtdXRpbHMnO1xuaW1wb3J0IHsgaXNTaW1wbGlmaWVkU3RydWN0Rm9ybWF0LCBtYXBTdHJ1Y3ROYW1lQW5kVHlwZSwgbWFwU3RydWN0VG9Db2RlckZvcm1hdCwgfSBmcm9tICcuLi91dGlscy5qcyc7XG5leHBvcnQgY29uc3QgV09SRF9TSVpFID0gMzI7XG5leHBvcnQgZnVuY3Rpb24gYWxsb2Moc2l6ZSA9IDApIHtcbiAgICB2YXIgX2E7XG4gICAgaWYgKCgoX2EgPSBnbG9iYWxUaGlzLkJ1ZmZlcikgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLmFsbG9jKSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIGNvbnN0IGJ1ZiA9IGdsb2JhbFRoaXMuQnVmZmVyLmFsbG9jKHNpemUpO1xuICAgICAgICByZXR1cm4gbmV3IFVpbnQ4QXJyYXkoYnVmLmJ1ZmZlciwgYnVmLmJ5dGVPZmZzZXQsIGJ1Zi5ieXRlTGVuZ3RoKTtcbiAgICB9XG4gICAgcmV0dXJuIG5ldyBVaW50OEFycmF5KHNpemUpO1xufVxuLyoqXG4gKiBXaGVyZSBwb3NzaWJsZSByZXR1cm5zIGEgVWludDhBcnJheSBvZiB0aGUgcmVxdWVzdGVkIHNpemUgdGhhdCByZWZlcmVuY2VzXG4gKiB1bmluaXRpYWxpemVkIG1lbW9yeS4gT25seSB1c2UgaWYgeW91IGFyZSBjZXJ0YWluIHlvdSB3aWxsIGltbWVkaWF0ZWx5XG4gKiBvdmVyd3JpdGUgZXZlcnkgdmFsdWUgaW4gdGhlIHJldHVybmVkIGBVaW50OEFycmF5YC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGFsbG9jVW5zYWZlKHNpemUgPSAwKSB7XG4gICAgdmFyIF9hO1xuICAgIGlmICgoKF9hID0gZ2xvYmFsVGhpcy5CdWZmZXIpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5hbGxvY1Vuc2FmZSkgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICBjb25zdCBidWYgPSBnbG9iYWxUaGlzLkJ1ZmZlci5hbGxvY1Vuc2FmZShzaXplKTtcbiAgICAgICAgcmV0dXJuIG5ldyBVaW50OEFycmF5KGJ1Zi5idWZmZXIsIGJ1Zi5ieXRlT2Zmc2V0LCBidWYuYnl0ZUxlbmd0aCk7XG4gICAgfVxuICAgIHJldHVybiBuZXcgVWludDhBcnJheShzaXplKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBjb252ZXJ0RXh0ZXJuYWxBYmlQYXJhbWV0ZXIoYWJpUGFyYW0pIHtcbiAgICB2YXIgX2EsIF9iO1xuICAgIHJldHVybiBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIGFiaVBhcmFtKSwgeyBuYW1lOiAoX2EgPSBhYmlQYXJhbS5uYW1lKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiAnJywgY29tcG9uZW50czogKF9iID0gYWJpUGFyYW0uY29tcG9uZW50cykgPT09IG51bGwgfHwgX2IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9iLm1hcChjID0+IGNvbnZlcnRFeHRlcm5hbEFiaVBhcmFtZXRlcihjKSkgfSk7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNBYmlQYXJhbWV0ZXIocGFyYW0pIHtcbiAgICByZXR1cm4gKCFpc051bGxpc2gocGFyYW0pICYmXG4gICAgICAgIHR5cGVvZiBwYXJhbSA9PT0gJ29iamVjdCcgJiZcbiAgICAgICAgIWlzTnVsbGlzaChwYXJhbS50eXBlKSAmJlxuICAgICAgICB0eXBlb2YgcGFyYW0udHlwZSA9PT0gJ3N0cmluZycpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHRvQWJpUGFyYW1zKGFiaSkge1xuICAgIHJldHVybiBhYmkubWFwKGlucHV0ID0+IHtcbiAgICAgICAgdmFyIF9hO1xuICAgICAgICBpZiAoaXNBYmlQYXJhbWV0ZXIoaW5wdXQpKSB7XG4gICAgICAgICAgICByZXR1cm4gaW5wdXQ7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHR5cGVvZiBpbnB1dCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgIHJldHVybiBjb252ZXJ0RXh0ZXJuYWxBYmlQYXJhbWV0ZXIocGFyc2VBYmlQYXJhbWV0ZXIoaW5wdXQucmVwbGFjZSgvdHVwbGUvLCAnJykpKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoaXNTaW1wbGlmaWVkU3RydWN0Rm9ybWF0KGlucHV0KSkge1xuICAgICAgICAgICAgY29uc3Qgc3RydWN0TmFtZSA9IE9iamVjdC5rZXlzKGlucHV0KVswXTtcbiAgICAgICAgICAgIGNvbnN0IHN0cnVjdEluZm8gPSBtYXBTdHJ1Y3ROYW1lQW5kVHlwZShzdHJ1Y3ROYW1lKTtcbiAgICAgICAgICAgIHN0cnVjdEluZm8ubmFtZSA9IChfYSA9IHN0cnVjdEluZm8ubmFtZSkgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogJyc7XG4gICAgICAgICAgICByZXR1cm4gT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCBzdHJ1Y3RJbmZvKSwgeyBjb21wb25lbnRzOiBtYXBTdHJ1Y3RUb0NvZGVyRm9ybWF0KGlucHV0W3N0cnVjdE5hbWVdKSB9KTtcbiAgICAgICAgfVxuICAgICAgICB0aHJvdyBuZXcgQWJpRXJyb3IoJ0ludmFsaWQgYWJpJyk7XG4gICAgfSk7XG59XG5leHBvcnQgZnVuY3Rpb24gZXh0cmFjdEFycmF5VHlwZShwYXJhbSkge1xuICAgIGNvbnN0IGFycmF5UGFyZW50aGVzaXNTdGFydCA9IHBhcmFtLnR5cGUubGFzdEluZGV4T2YoJ1snKTtcbiAgICBjb25zdCBhcnJheVBhcmFtVHlwZSA9IHBhcmFtLnR5cGUuc3Vic3RyaW5nKDAsIGFycmF5UGFyZW50aGVzaXNTdGFydCk7XG4gICAgY29uc3Qgc2l6ZVN0cmluZyA9IHBhcmFtLnR5cGUuc3Vic3RyaW5nKGFycmF5UGFyZW50aGVzaXNTdGFydCk7XG4gICAgbGV0IHNpemUgPSAtMTtcbiAgICBpZiAoc2l6ZVN0cmluZyAhPT0gJ1tdJykge1xuICAgICAgICBzaXplID0gTnVtYmVyKHNpemVTdHJpbmcuc2xpY2UoMSwgLTEpKTtcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXJlc3RyaWN0ZWQtZ2xvYmFsc1xuICAgICAgICBpZiAoaXNOYU4oc2l6ZSkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBBYmlFcnJvcignSW52YWxpZCBmaXhlZCBhcnJheSBzaXplJywgeyBzaXplOiBzaXplU3RyaW5nIH0pO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgIHBhcmFtOiB7IHR5cGU6IGFycmF5UGFyYW1UeXBlLCBuYW1lOiAnJywgY29tcG9uZW50czogcGFyYW0uY29tcG9uZW50cyB9LFxuICAgICAgICBzaXplLFxuICAgIH07XG59XG4vKipcbiAqIFBhcmFtIGlzIGR5bmFtaWMgaWYgaXQncyBkeW5hbWljIGJhc2UgdHlwZSBvciBpZiBzb21lIG9mIGhpcyBjaGlsZHJlbiAoY29tcG9uZW50cywgYXJyYXkgaXRlbXMpXG4gKiBpcyBvZiBkeW5hbWljIHR5cGVcbiAqIEBwYXJhbSBwYXJhbVxuICovXG5leHBvcnQgZnVuY3Rpb24gaXNEeW5hbWljKHBhcmFtKSB7XG4gICAgdmFyIF9hLCBfYjtcbiAgICBpZiAocGFyYW0udHlwZSA9PT0gJ3N0cmluZycgfHwgcGFyYW0udHlwZSA9PT0gJ2J5dGVzJyB8fCBwYXJhbS50eXBlLmVuZHNXaXRoKCdbXScpKVxuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICBpZiAocGFyYW0udHlwZSA9PT0gJ3R1cGxlJykge1xuICAgICAgICByZXR1cm4gKF9iID0gKF9hID0gcGFyYW0uY29tcG9uZW50cykgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLnNvbWUoaXNEeW5hbWljKSkgIT09IG51bGwgJiYgX2IgIT09IHZvaWQgMCA/IF9iIDogZmFsc2U7XG4gICAgfVxuICAgIGlmIChwYXJhbS50eXBlLmVuZHNXaXRoKCddJykpIHtcbiAgICAgICAgcmV0dXJuIGlzRHluYW1pYyhleHRyYWN0QXJyYXlUeXBlKHBhcmFtKS5wYXJhbSk7XG4gICAgfVxuICAgIHJldHVybiBmYWxzZTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXV0aWxzLmpzLm1hcCJdLCJuYW1lcyI6WyJwYXJzZUFiaVBhcmFtZXRlciIsIkFiaUVycm9yIiwiaXNOdWxsaXNoIiwiaXNTaW1wbGlmaWVkU3RydWN0Rm9ybWF0IiwibWFwU3RydWN0TmFtZUFuZFR5cGUiLCJtYXBTdHJ1Y3RUb0NvZGVyRm9ybWF0IiwiV09SRF9TSVpFIiwiYWxsb2MiLCJzaXplIiwiX2EiLCJnbG9iYWxUaGlzIiwiQnVmZmVyIiwidW5kZWZpbmVkIiwiYnVmIiwiVWludDhBcnJheSIsImJ1ZmZlciIsImJ5dGVPZmZzZXQiLCJieXRlTGVuZ3RoIiwiYWxsb2NVbnNhZmUiLCJjb252ZXJ0RXh0ZXJuYWxBYmlQYXJhbWV0ZXIiLCJhYmlQYXJhbSIsIl9iIiwiT2JqZWN0IiwiYXNzaWduIiwibmFtZSIsImNvbXBvbmVudHMiLCJtYXAiLCJjIiwiaXNBYmlQYXJhbWV0ZXIiLCJwYXJhbSIsInR5cGUiLCJ0b0FiaVBhcmFtcyIsImFiaSIsImlucHV0IiwicmVwbGFjZSIsInN0cnVjdE5hbWUiLCJrZXlzIiwic3RydWN0SW5mbyIsImV4dHJhY3RBcnJheVR5cGUiLCJhcnJheVBhcmVudGhlc2lzU3RhcnQiLCJsYXN0SW5kZXhPZiIsImFycmF5UGFyYW1UeXBlIiwic3Vic3RyaW5nIiwic2l6ZVN0cmluZyIsIk51bWJlciIsInNsaWNlIiwiaXNOYU4iLCJpc0R5bmFtaWMiLCJlbmRzV2l0aCIsInNvbWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-abi/lib/esm/decode_contract_error_data.js":
/*!*************************************************************************!*\
  !*** ./node_modules/web3-eth-abi/lib/esm/decode_contract_error_data.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeContractErrorData: () => (/* binding */ decodeContractErrorData)\n/* harmony export */ });\n/* harmony import */ var _api_errors_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api/errors_api.js */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/api/errors_api.js\");\n/* harmony import */ var _api_parameters_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./api/parameters_api.js */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/api/parameters_api.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/utils.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ \n\n\nconst decodeContractErrorData = (errorsAbi, error)=>{\n    if (error === null || error === void 0 ? void 0 : error.data) {\n        let errorName;\n        let errorSignature;\n        let errorArgs;\n        try {\n            const errorSha = error.data.slice(0, 10);\n            const errorAbi = errorsAbi.find((abi)=>(0,_api_errors_api_js__WEBPACK_IMPORTED_MODULE_0__.encodeErrorSignature)(abi).startsWith(errorSha));\n            if (errorAbi === null || errorAbi === void 0 ? void 0 : errorAbi.inputs) {\n                errorName = errorAbi.name;\n                errorSignature = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.jsonInterfaceMethodToString)(errorAbi);\n                // decode abi.inputs according to EIP-838\n                errorArgs = (0,_api_parameters_api_js__WEBPACK_IMPORTED_MODULE_1__.decodeParameters)([\n                    ...errorAbi.inputs\n                ], error.data.substring(10));\n            }\n        } catch (err) {\n            console.error(err);\n        }\n        if (errorName) {\n            error.setDecodedProperties(errorName, errorSignature, errorArgs);\n        }\n    }\n}; //# sourceMappingURL=decode_contract_error_data.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWJpL2xpYi9lc20vZGVjb2RlX2NvbnRyYWN0X2Vycm9yX2RhdGEuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7Ozs7Ozs7Ozs7Ozs7QUFlQSxHQUMyRDtBQUNBO0FBQ0Y7QUFDbEQsTUFBTUcsMEJBQTBCLENBQUNDLFdBQVdDO0lBQy9DLElBQUlBLFVBQVUsUUFBUUEsVUFBVSxLQUFLLElBQUksS0FBSyxJQUFJQSxNQUFNQyxJQUFJLEVBQUU7UUFDMUQsSUFBSUM7UUFDSixJQUFJQztRQUNKLElBQUlDO1FBQ0osSUFBSTtZQUNBLE1BQU1DLFdBQVdMLE1BQU1DLElBQUksQ0FBQ0ssS0FBSyxDQUFDLEdBQUc7WUFDckMsTUFBTUMsV0FBV1IsVUFBVVMsSUFBSSxDQUFDQyxDQUFBQSxNQUFPZCx3RUFBb0JBLENBQUNjLEtBQUtDLFVBQVUsQ0FBQ0w7WUFDNUUsSUFBSUUsYUFBYSxRQUFRQSxhQUFhLEtBQUssSUFBSSxLQUFLLElBQUlBLFNBQVNJLE1BQU0sRUFBRTtnQkFDckVULFlBQVlLLFNBQVNLLElBQUk7Z0JBQ3pCVCxpQkFBaUJOLHNFQUEyQkEsQ0FBQ1U7Z0JBQzdDLHlDQUF5QztnQkFDekNILFlBQVlSLHdFQUFnQkEsQ0FBQzt1QkFBSVcsU0FBU0ksTUFBTTtpQkFBQyxFQUFFWCxNQUFNQyxJQUFJLENBQUNZLFNBQVMsQ0FBQztZQUM1RTtRQUNKLEVBQ0EsT0FBT0MsS0FBSztZQUNSQyxRQUFRZixLQUFLLENBQUNjO1FBQ2xCO1FBQ0EsSUFBSVosV0FBVztZQUNYRixNQUFNZ0Isb0JBQW9CLENBQUNkLFdBQVdDLGdCQUFnQkM7UUFDMUQ7SUFDSjtBQUNKLEVBQUUsQ0FDRixzREFBc0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mcm9udGVuZC8uL25vZGVfbW9kdWxlcy93ZWIzLWV0aC1hYmkvbGliL2VzbS9kZWNvZGVfY29udHJhY3RfZXJyb3JfZGF0YS5qcz8zNTQ4Il0sInNvdXJjZXNDb250ZW50IjpbIi8qXG5UaGlzIGZpbGUgaXMgcGFydCBvZiB3ZWIzLmpzLlxuXG53ZWIzLmpzIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnlcbml0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieVxudGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSwgb3JcbihhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uXG5cbndlYjMuanMgaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCxcbmJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mXG5NRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlXG5HTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy5cblxuWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG5hbG9uZyB3aXRoIHdlYjMuanMuICBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uXG4qL1xuaW1wb3J0IHsgZW5jb2RlRXJyb3JTaWduYXR1cmUgfSBmcm9tICcuL2FwaS9lcnJvcnNfYXBpLmpzJztcbmltcG9ydCB7IGRlY29kZVBhcmFtZXRlcnMgfSBmcm9tICcuL2FwaS9wYXJhbWV0ZXJzX2FwaS5qcyc7XG5pbXBvcnQgeyBqc29uSW50ZXJmYWNlTWV0aG9kVG9TdHJpbmcgfSBmcm9tICcuL3V0aWxzLmpzJztcbmV4cG9ydCBjb25zdCBkZWNvZGVDb250cmFjdEVycm9yRGF0YSA9IChlcnJvcnNBYmksIGVycm9yKSA9PiB7XG4gICAgaWYgKGVycm9yID09PSBudWxsIHx8IGVycm9yID09PSB2b2lkIDAgPyB2b2lkIDAgOiBlcnJvci5kYXRhKSB7XG4gICAgICAgIGxldCBlcnJvck5hbWU7XG4gICAgICAgIGxldCBlcnJvclNpZ25hdHVyZTtcbiAgICAgICAgbGV0IGVycm9yQXJncztcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGNvbnN0IGVycm9yU2hhID0gZXJyb3IuZGF0YS5zbGljZSgwLCAxMCk7XG4gICAgICAgICAgICBjb25zdCBlcnJvckFiaSA9IGVycm9yc0FiaS5maW5kKGFiaSA9PiBlbmNvZGVFcnJvclNpZ25hdHVyZShhYmkpLnN0YXJ0c1dpdGgoZXJyb3JTaGEpKTtcbiAgICAgICAgICAgIGlmIChlcnJvckFiaSA9PT0gbnVsbCB8fCBlcnJvckFiaSA9PT0gdm9pZCAwID8gdm9pZCAwIDogZXJyb3JBYmkuaW5wdXRzKSB7XG4gICAgICAgICAgICAgICAgZXJyb3JOYW1lID0gZXJyb3JBYmkubmFtZTtcbiAgICAgICAgICAgICAgICBlcnJvclNpZ25hdHVyZSA9IGpzb25JbnRlcmZhY2VNZXRob2RUb1N0cmluZyhlcnJvckFiaSk7XG4gICAgICAgICAgICAgICAgLy8gZGVjb2RlIGFiaS5pbnB1dHMgYWNjb3JkaW5nIHRvIEVJUC04MzhcbiAgICAgICAgICAgICAgICBlcnJvckFyZ3MgPSBkZWNvZGVQYXJhbWV0ZXJzKFsuLi5lcnJvckFiaS5pbnB1dHNdLCBlcnJvci5kYXRhLnN1YnN0cmluZygxMCkpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlcnIpIHtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoZXJyb3JOYW1lKSB7XG4gICAgICAgICAgICBlcnJvci5zZXREZWNvZGVkUHJvcGVydGllcyhlcnJvck5hbWUsIGVycm9yU2lnbmF0dXJlLCBlcnJvckFyZ3MpO1xuICAgICAgICB9XG4gICAgfVxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRlY29kZV9jb250cmFjdF9lcnJvcl9kYXRhLmpzLm1hcCJdLCJuYW1lcyI6WyJlbmNvZGVFcnJvclNpZ25hdHVyZSIsImRlY29kZVBhcmFtZXRlcnMiLCJqc29uSW50ZXJmYWNlTWV0aG9kVG9TdHJpbmciLCJkZWNvZGVDb250cmFjdEVycm9yRGF0YSIsImVycm9yc0FiaSIsImVycm9yIiwiZGF0YSIsImVycm9yTmFtZSIsImVycm9yU2lnbmF0dXJlIiwiZXJyb3JBcmdzIiwiZXJyb3JTaGEiLCJzbGljZSIsImVycm9yQWJpIiwiZmluZCIsImFiaSIsInN0YXJ0c1dpdGgiLCJpbnB1dHMiLCJuYW1lIiwic3Vic3RyaW5nIiwiZXJyIiwiY29uc29sZSIsInNldERlY29kZWRQcm9wZXJ0aWVzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-abi/lib/esm/decode_contract_error_data.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-abi/lib/esm/eip_712.js":
/*!******************************************************!*\
  !*** ./node_modules/web3-eth-abi/lib/esm/eip_712.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getMessage: () => (/* binding */ getMessage)\n/* harmony export */ });\n/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-utils */ \"(ssr)/./node_modules/web3-utils/lib/esm/index.js\");\n/* harmony import */ var _coders_encode_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./coders/encode.js */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/encode.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ \n\nconst TYPE_REGEX = /^\\w+/;\nconst ARRAY_REGEX = /^(.*)\\[([0-9]*?)]$/;\n/**\n * Get the dependencies of a struct type. If a struct has the same dependency multiple times, it's only included once\n * in the resulting array.\n */ const getDependencies = (typedData, type, dependencies = [])=>{\n    const match = type.match(TYPE_REGEX);\n    const actualType = match[0];\n    if (dependencies.includes(actualType)) {\n        return dependencies;\n    }\n    if (!typedData.types[actualType]) {\n        return dependencies;\n    }\n    return [\n        actualType,\n        ...typedData.types[actualType].reduce((previous, _type)=>[\n                ...previous,\n                ...getDependencies(typedData, _type.type, previous).filter((dependency)=>!previous.includes(dependency))\n            ], [])\n    ];\n};\n/**\n * Encode a type to a string. All dependant types are alphabetically sorted.\n *\n * @param {TypedData} typedData\n * @param {string} type\n * @param {Options} [options]\n * @return {string}\n */ const encodeType = (typedData, type)=>{\n    const [primary, ...dependencies] = getDependencies(typedData, type);\n    // eslint-disable-next-line @typescript-eslint/require-array-sort-compare\n    const types = [\n        primary,\n        ...dependencies.sort()\n    ];\n    return types.map((dependency)=>// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n        `${dependency}(${typedData.types[dependency].map((_type)=>`${_type.type} ${_type.name}`)})`).join(\"\");\n};\n/**\n * Get a type string as hash.\n */ const getTypeHash = (typedData, type)=>(0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.keccak256)(encodeType(typedData, type));\n/**\n * Get encoded data as a hash. The data should be a key -> value object with all the required values. All dependant\n * types are automatically encoded.\n */ const getStructHash = (typedData, type, data)=>(0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.keccak256)(encodeData(typedData, type, data));\n/**\n * Get the EIP-191 encoded message to sign, from the typedData object. If `hash` is enabled, the message will be hashed\n * with Keccak256.\n */ const getMessage = (typedData, hash)=>{\n    const EIP_191_PREFIX = \"1901\";\n    const message = `0x${EIP_191_PREFIX}${getStructHash(typedData, \"EIP712Domain\", typedData.domain).substring(2)}${getStructHash(typedData, typedData.primaryType, typedData.message).substring(2)}`;\n    if (hash) {\n        return (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.keccak256)(message);\n    }\n    return message;\n};\n/**\n * Encodes a single value to an ABI serialisable string, number or Buffer. Returns the data as tuple, which consists of\n * an array of ABI compatible types, and an array of corresponding values.\n */ const encodeValue = (typedData, type, data)=>{\n    const match = type.match(ARRAY_REGEX);\n    // Checks for array types\n    if (match) {\n        const arrayType = match[1];\n        const length = Number(match[2]) || undefined;\n        if (!Array.isArray(data)) {\n            throw new Error(\"Cannot encode data: value is not of array type\");\n        }\n        if (length && data.length !== length) {\n            throw new Error(`Cannot encode data: expected length of ${length}, but got ${data.length}`);\n        }\n        const encodedData = data.map((item)=>encodeValue(typedData, arrayType, item));\n        const types = encodedData.map((item)=>item[0]);\n        const values = encodedData.map((item)=>item[1]);\n        return [\n            \"bytes32\",\n            (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.keccak256)((0,_coders_encode_js__WEBPACK_IMPORTED_MODULE_1__.encodeParameters)(types, values))\n        ];\n    }\n    if (typedData.types[type]) {\n        return [\n            \"bytes32\",\n            getStructHash(typedData, type, data)\n        ];\n    }\n    // Strings and arbitrary byte arrays are hashed to bytes32\n    if (type === \"string\") {\n        return [\n            \"bytes32\",\n            (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.keccak256)(data)\n        ];\n    }\n    if (type === \"bytes\") {\n        return [\n            \"bytes32\",\n            (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.keccak256)(data)\n        ];\n    }\n    return [\n        type,\n        data\n    ];\n};\n/**\n * Encode the data to an ABI encoded Buffer. The data should be a key -> value object with all the required values. All\n * dependant types are automatically encoded.\n */ const encodeData = (typedData, type, data)=>{\n    const [types, values] = typedData.types[type].reduce(([_types, _values], field)=>{\n        if ((0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.isNullish)(data[field.name]) || (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.isNullish)(data[field.name])) {\n            throw new Error(`Cannot encode data: missing data for '${field.name}'`);\n        }\n        const value = data[field.name];\n        const [_type, encodedValue] = encodeValue(typedData, field.type, value);\n        return [\n            [\n                ..._types,\n                _type\n            ],\n            [\n                ..._values,\n                encodedValue\n            ]\n        ];\n    }, [\n        [\n            \"bytes32\"\n        ],\n        [\n            getTypeHash(typedData, type)\n        ]\n    ]);\n    return (0,_coders_encode_js__WEBPACK_IMPORTED_MODULE_1__.encodeParameters)(types, values);\n}; //# sourceMappingURL=eip_712.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-abi/lib/esm/eip_712.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-abi/lib/esm/index.js":
/*!****************************************************!*\
  !*** ./node_modules/web3-eth-abi/lib/esm/index.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeContractErrorData: () => (/* reexport safe */ _decode_contract_error_data_js__WEBPACK_IMPORTED_MODULE_6__.decodeContractErrorData),\n/* harmony export */   decodeLog: () => (/* reexport safe */ _api_logs_api_js__WEBPACK_IMPORTED_MODULE_3__.decodeLog),\n/* harmony export */   decodeParameter: () => (/* reexport safe */ _api_parameters_api_js__WEBPACK_IMPORTED_MODULE_4__.decodeParameter),\n/* harmony export */   decodeParameters: () => (/* reexport safe */ _api_parameters_api_js__WEBPACK_IMPORTED_MODULE_4__.decodeParameters),\n/* harmony export */   decodeParametersWith: () => (/* reexport safe */ _api_parameters_api_js__WEBPACK_IMPORTED_MODULE_4__.decodeParametersWith),\n/* harmony export */   encodeErrorSignature: () => (/* reexport safe */ _api_errors_api_js__WEBPACK_IMPORTED_MODULE_0__.encodeErrorSignature),\n/* harmony export */   encodeEventSignature: () => (/* reexport safe */ _api_events_api_js__WEBPACK_IMPORTED_MODULE_1__.encodeEventSignature),\n/* harmony export */   encodeFunctionCall: () => (/* reexport safe */ _api_functions_api_js__WEBPACK_IMPORTED_MODULE_2__.encodeFunctionCall),\n/* harmony export */   encodeFunctionSignature: () => (/* reexport safe */ _api_functions_api_js__WEBPACK_IMPORTED_MODULE_2__.encodeFunctionSignature),\n/* harmony export */   encodeParameter: () => (/* reexport safe */ _api_parameters_api_js__WEBPACK_IMPORTED_MODULE_4__.encodeParameter),\n/* harmony export */   encodeParameters: () => (/* reexport safe */ _api_parameters_api_js__WEBPACK_IMPORTED_MODULE_4__.encodeParameters),\n/* harmony export */   flattenTypes: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_5__.flattenTypes),\n/* harmony export */   formatOddHexstrings: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_5__.formatOddHexstrings),\n/* harmony export */   formatParam: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_5__.formatParam),\n/* harmony export */   getEncodedEip712Data: () => (/* reexport safe */ _eip_712_js__WEBPACK_IMPORTED_MODULE_7__.getMessage),\n/* harmony export */   isAbiConstructorFragment: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_5__.isAbiConstructorFragment),\n/* harmony export */   isAbiErrorFragment: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_5__.isAbiErrorFragment),\n/* harmony export */   isAbiEventFragment: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_5__.isAbiEventFragment),\n/* harmony export */   isAbiFragment: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_5__.isAbiFragment),\n/* harmony export */   isAbiFunctionFragment: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_5__.isAbiFunctionFragment),\n/* harmony export */   isOddHexstring: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_5__.isOddHexstring),\n/* harmony export */   isSimplifiedStructFormat: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_5__.isSimplifiedStructFormat),\n/* harmony export */   jsonInterfaceMethodToString: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_5__.jsonInterfaceMethodToString),\n/* harmony export */   mapStructNameAndType: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_5__.mapStructNameAndType),\n/* harmony export */   mapStructToCoderFormat: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_5__.mapStructToCoderFormat),\n/* harmony export */   mapTypes: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_5__.mapTypes)\n/* harmony export */ });\n/* harmony import */ var _api_errors_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api/errors_api.js */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/api/errors_api.js\");\n/* harmony import */ var _api_events_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./api/events_api.js */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/api/events_api.js\");\n/* harmony import */ var _api_functions_api_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./api/functions_api.js */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/api/functions_api.js\");\n/* harmony import */ var _api_logs_api_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./api/logs_api.js */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/api/logs_api.js\");\n/* harmony import */ var _api_parameters_api_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./api/parameters_api.js */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/api/parameters_api.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/utils.js\");\n/* harmony import */ var _decode_contract_error_data_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./decode_contract_error_data.js */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/decode_contract_error_data.js\");\n/* harmony import */ var _eip_712_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./eip_712.js */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/eip_712.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ /**\n * The web3.eth.abi functions let you encode and decode parameters to ABI (Application Binary Interface) for function calls to the EVM (Ethereum Virtual Machine).\n */ \n\n\n\n\n\n\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWJpL2xpYi9lc20vaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBOzs7Ozs7Ozs7Ozs7Ozs7QUFlQSxHQUNBOztDQUVDLEdBQ21DO0FBQ0E7QUFDRztBQUNMO0FBQ007QUFDYjtBQUNxQjtBQUNrQixDQUNsRSxpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mcm9udGVuZC8uL25vZGVfbW9kdWxlcy93ZWIzLWV0aC1hYmkvbGliL2VzbS9pbmRleC5qcz8xMDY2Il0sInNvdXJjZXNDb250ZW50IjpbIi8qXG5UaGlzIGZpbGUgaXMgcGFydCBvZiB3ZWIzLmpzLlxuXG53ZWIzLmpzIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnlcbml0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieVxudGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSwgb3JcbihhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uXG5cbndlYjMuanMgaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCxcbmJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mXG5NRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlXG5HTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy5cblxuWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG5hbG9uZyB3aXRoIHdlYjMuanMuICBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uXG4qL1xuLyoqXG4gKiBUaGUgd2ViMy5ldGguYWJpIGZ1bmN0aW9ucyBsZXQgeW91IGVuY29kZSBhbmQgZGVjb2RlIHBhcmFtZXRlcnMgdG8gQUJJIChBcHBsaWNhdGlvbiBCaW5hcnkgSW50ZXJmYWNlKSBmb3IgZnVuY3Rpb24gY2FsbHMgdG8gdGhlIEVWTSAoRXRoZXJldW0gVmlydHVhbCBNYWNoaW5lKS5cbiAqL1xuZXhwb3J0ICogZnJvbSAnLi9hcGkvZXJyb3JzX2FwaS5qcyc7XG5leHBvcnQgKiBmcm9tICcuL2FwaS9ldmVudHNfYXBpLmpzJztcbmV4cG9ydCAqIGZyb20gJy4vYXBpL2Z1bmN0aW9uc19hcGkuanMnO1xuZXhwb3J0ICogZnJvbSAnLi9hcGkvbG9nc19hcGkuanMnO1xuZXhwb3J0ICogZnJvbSAnLi9hcGkvcGFyYW1ldGVyc19hcGkuanMnO1xuZXhwb3J0ICogZnJvbSAnLi91dGlscy5qcyc7XG5leHBvcnQgKiBmcm9tICcuL2RlY29kZV9jb250cmFjdF9lcnJvcl9kYXRhLmpzJztcbmV4cG9ydCB7IGdldE1lc3NhZ2UgYXMgZ2V0RW5jb2RlZEVpcDcxMkRhdGEgfSBmcm9tICcuL2VpcF83MTIuanMnO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbImdldE1lc3NhZ2UiLCJnZXRFbmNvZGVkRWlwNzEyRGF0YSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-abi/lib/esm/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-abi/lib/esm/utils.js":
/*!****************************************************!*\
  !*** ./node_modules/web3-eth-abi/lib/esm/utils.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   flattenTypes: () => (/* binding */ flattenTypes),\n/* harmony export */   formatOddHexstrings: () => (/* binding */ formatOddHexstrings),\n/* harmony export */   formatParam: () => (/* binding */ formatParam),\n/* harmony export */   isAbiConstructorFragment: () => (/* binding */ isAbiConstructorFragment),\n/* harmony export */   isAbiErrorFragment: () => (/* binding */ isAbiErrorFragment),\n/* harmony export */   isAbiEventFragment: () => (/* binding */ isAbiEventFragment),\n/* harmony export */   isAbiFragment: () => (/* binding */ isAbiFragment),\n/* harmony export */   isAbiFunctionFragment: () => (/* binding */ isAbiFunctionFragment),\n/* harmony export */   isOddHexstring: () => (/* binding */ isOddHexstring),\n/* harmony export */   isSimplifiedStructFormat: () => (/* binding */ isSimplifiedStructFormat),\n/* harmony export */   jsonInterfaceMethodToString: () => (/* binding */ jsonInterfaceMethodToString),\n/* harmony export */   mapStructNameAndType: () => (/* binding */ mapStructNameAndType),\n/* harmony export */   mapStructToCoderFormat: () => (/* binding */ mapStructToCoderFormat),\n/* harmony export */   mapTypes: () => (/* binding */ mapTypes)\n/* harmony export */ });\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-errors */ \"(ssr)/./node_modules/web3-errors/lib/esm/index.js\");\n/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-utils */ \"(ssr)/./node_modules/web3-utils/lib/esm/index.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ \n\nconst isAbiFragment = (item)=>!(0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.isNullish)(item) && typeof item === \"object\" && !(0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.isNullish)(item.type) && [\n        \"function\",\n        \"event\",\n        \"constructor\",\n        \"error\"\n    ].includes(item.type);\nconst isAbiErrorFragment = (item)=>!(0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.isNullish)(item) && typeof item === \"object\" && !(0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.isNullish)(item.type) && item.type === \"error\";\nconst isAbiEventFragment = (item)=>!(0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.isNullish)(item) && typeof item === \"object\" && !(0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.isNullish)(item.type) && item.type === \"event\";\nconst isAbiFunctionFragment = (item)=>!(0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.isNullish)(item) && typeof item === \"object\" && !(0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.isNullish)(item.type) && item.type === \"function\";\nconst isAbiConstructorFragment = (item)=>!(0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.isNullish)(item) && typeof item === \"object\" && !(0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.isNullish)(item.type) && item.type === \"constructor\";\n/**\n * Check if type is simplified struct format\n */ const isSimplifiedStructFormat = (type)=>typeof type === \"object\" && typeof type.components === \"undefined\" && typeof type.name === \"undefined\";\n/**\n * Maps the correct tuple type and name when the simplified format in encode/decodeParameter is used\n */ const mapStructNameAndType = (structName)=>structName.includes(\"[]\") ? {\n        type: \"tuple[]\",\n        name: structName.slice(0, -2)\n    } : {\n        type: \"tuple\",\n        name: structName\n    };\n/**\n * Maps the simplified format in to the expected format of the ABICoder\n */ const mapStructToCoderFormat = (struct)=>{\n    const components = [];\n    for (const key of Object.keys(struct)){\n        const item = struct[key];\n        if (typeof item === \"object\") {\n            components.push(Object.assign(Object.assign({}, mapStructNameAndType(key)), {\n                components: mapStructToCoderFormat(item)\n            }));\n        } else {\n            components.push({\n                name: key,\n                type: struct[key]\n            });\n        }\n    }\n    return components;\n};\n/**\n * Map types if simplified format is used\n */ const mapTypes = (types)=>{\n    const mappedTypes = [];\n    for (const type of types){\n        let modifiedType = type;\n        // Clone object\n        if (typeof type === \"object\") {\n            modifiedType = Object.assign({}, type);\n        }\n        // Remap `function` type params to bytes24 since Ethers does not\n        // recognize former type. Solidity docs say `Function` is a bytes24\n        // encoding the contract address followed by the function selector hash.\n        if (typeof type === \"object\" && type.type === \"function\") {\n            modifiedType = Object.assign(Object.assign({}, type), {\n                type: \"bytes24\"\n            });\n        }\n        if (isSimplifiedStructFormat(modifiedType)) {\n            const structName = Object.keys(modifiedType)[0];\n            mappedTypes.push(Object.assign(Object.assign({}, mapStructNameAndType(structName)), {\n                components: mapStructToCoderFormat(modifiedType[structName])\n            }));\n        } else {\n            mappedTypes.push(modifiedType);\n        }\n    }\n    return mappedTypes;\n};\n/**\n * returns true if input is a hexstring and is odd-lengthed\n */ const isOddHexstring = (param)=>typeof param === \"string\" && /^(-)?0x[0-9a-f]*$/i.test(param) && param.length % 2 === 1;\n/**\n * format odd-length bytes to even-length\n */ const formatOddHexstrings = (param)=>isOddHexstring(param) ? `0x0${param.substring(2)}` : param;\n/**\n * Handle some formatting of params for backwards compatibility with Ethers V4\n */ const formatParam = (type, _param)=>{\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    var _a;\n    // clone if _param is an object\n    const param = typeof _param === \"object\" && !Array.isArray(_param) ? Object.assign({}, _param) : _param;\n    const paramTypeBytes = /^bytes([0-9]*)$/;\n    const paramTypeBytesArray = /^bytes([0-9]*)\\[\\]$/;\n    const paramTypeNumber = /^(u?int)([0-9]*)$/;\n    const paramTypeNumberArray = /^(u?int)([0-9]*)\\[\\]$/;\n    // Format BN to string\n    if (param instanceof BigInt) {\n        return param.toString(10);\n    }\n    if (paramTypeBytesArray.exec(type) || paramTypeNumberArray.exec(type)) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        const paramClone = [\n            ...param\n        ];\n        return paramClone.map((p)=>formatParam(type.replace(\"[]\", \"\"), p));\n    }\n    // Format correct width for u?int[0-9]*\n    let match = paramTypeNumber.exec(type);\n    if (match) {\n        const size = parseInt((_a = match[2]) !== null && _a !== void 0 ? _a : \"256\", 10);\n        if (size / 8 < param.length) {\n            // pad to correct bit width\n            return (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.leftPad)(param, size);\n        }\n    }\n    // Format correct length for bytes[0-9]+\n    match = paramTypeBytes.exec(type);\n    if (match) {\n        const hexParam = param instanceof Uint8Array ? (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.toHex)(param) : param;\n        // format to correct length\n        const size = parseInt(match[1], 10);\n        if (size) {\n            let maxSize = size * 2;\n            if (param.startsWith(\"0x\")) {\n                maxSize += 2;\n            }\n            // pad to correct length\n            const paddedParam = hexParam.length < maxSize ? (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.rightPad)(param, size * 2) : hexParam;\n            return formatOddHexstrings(paddedParam);\n        }\n        return formatOddHexstrings(hexParam);\n    }\n    return param;\n};\n/**\n *  used to flatten json abi inputs/outputs into an array of type-representing-strings\n */ const flattenTypes = (includeTuple, puts)=>{\n    const types = [];\n    puts.forEach((param)=>{\n        if (typeof param.components === \"object\") {\n            if (!param.type.startsWith(\"tuple\")) {\n                throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.AbiError(`Invalid value given \"${param.type}\". Error: components found but type is not tuple.`);\n            }\n            const arrayBracket = param.type.indexOf(\"[\");\n            const suffix = arrayBracket >= 0 ? param.type.substring(arrayBracket) : \"\";\n            const result = flattenTypes(includeTuple, param.components);\n            if (Array.isArray(result) && includeTuple) {\n                types.push(`tuple(${result.join(\",\")})${suffix}`);\n            } else if (!includeTuple) {\n                types.push(`(${result.join(\",\")})${suffix}`);\n            } else {\n                types.push(`(${result.join()})`);\n            }\n        } else {\n            types.push(param.type);\n        }\n    });\n    return types;\n};\n/**\n * Should be used to create full function/event name from json abi\n * returns a string\n */ const jsonInterfaceMethodToString = (json)=>{\n    var _a, _b, _c, _d;\n    if (isAbiErrorFragment(json) || isAbiEventFragment(json) || isAbiFunctionFragment(json)) {\n        if ((_a = json.name) === null || _a === void 0 ? void 0 : _a.includes(\"(\")) {\n            return json.name;\n        }\n        return `${(_b = json.name) !== null && _b !== void 0 ? _b : \"\"}(${flattenTypes(false, (_c = json.inputs) !== null && _c !== void 0 ? _c : []).join(\",\")})`;\n    }\n    // Constructor fragment\n    return `(${flattenTypes(false, (_d = json.inputs) !== null && _d !== void 0 ? _d : []).join(\",\")})`;\n}; //# sourceMappingURL=utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-abi/lib/esm/utils.js\n");

/***/ })

};
;