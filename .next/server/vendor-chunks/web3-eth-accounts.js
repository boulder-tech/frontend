"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/web3-eth-accounts";
exports.ids = ["vendor-chunks/web3-eth-accounts"];
exports.modules = {

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/account.js":
/*!***********************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/account.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   create: () => (/* binding */ create),\n/* harmony export */   decrypt: () => (/* binding */ decrypt),\n/* harmony export */   encrypt: () => (/* binding */ encrypt),\n/* harmony export */   hashMessage: () => (/* binding */ hashMessage),\n/* harmony export */   parseAndValidatePrivateKey: () => (/* binding */ parseAndValidatePrivateKey),\n/* harmony export */   privateKeyToAccount: () => (/* binding */ privateKeyToAccount),\n/* harmony export */   privateKeyToAddress: () => (/* binding */ privateKeyToAddress),\n/* harmony export */   privateKeyToPublicKey: () => (/* binding */ privateKeyToPublicKey),\n/* harmony export */   recover: () => (/* binding */ recover),\n/* harmony export */   recoverTransaction: () => (/* binding */ recoverTransaction),\n/* harmony export */   sign: () => (/* binding */ sign),\n/* harmony export */   signTransaction: () => (/* binding */ signTransaction)\n/* harmony export */ });\n/* harmony import */ var ethereum_cryptography_aes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ethereum-cryptography/aes.js */ \"(ssr)/./node_modules/ethereum-cryptography/esm/aes.js\");\n/* harmony import */ var ethereum_cryptography_pbkdf2_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ethereum-cryptography/pbkdf2.js */ \"(ssr)/./node_modules/ethereum-cryptography/esm/pbkdf2.js\");\n/* harmony import */ var ethereum_cryptography_scrypt_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ethereum-cryptography/scrypt.js */ \"(ssr)/./node_modules/ethereum-cryptography/esm/scrypt.js\");\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! web3-errors */ \"(ssr)/./node_modules/web3-errors/lib/esm/index.js\");\n/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! web3-utils */ \"(ssr)/./node_modules/web3-utils/lib/esm/index.js\");\n/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! web3-validator */ \"(ssr)/./node_modules/web3-validator/lib/esm/index.js\");\n/* harmony import */ var _tx_constants_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./tx/constants.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/tx/constants.js\");\n/* harmony import */ var _schemas_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./schemas.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/schemas.js\");\n/* harmony import */ var _tx_transactionFactory_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./tx/transactionFactory.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/tx/transactionFactory.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ var __awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n\n\n\n\n\n\n\n/**\n * Get the private key Uint8Array after the validation\n */ const parseAndValidatePrivateKey = (data, ignoreLength)=>{\n    let privateKeyUint8Array;\n    // To avoid the case of 1 character less in a hex string which is prefixed with '0' by using 'bytesToUint8Array'\n    if (!ignoreLength && typeof data === \"string\" && (0,web3_validator__WEBPACK_IMPORTED_MODULE_5__.isHexStrict)(data) && data.length !== 66) {\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_3__.PrivateKeyLengthError();\n    }\n    try {\n        privateKeyUint8Array = data instanceof Uint8Array ? data : (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.bytesToUint8Array)(data);\n    } catch (_a) {\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_3__.InvalidPrivateKeyError();\n    }\n    if (!ignoreLength && privateKeyUint8Array.byteLength !== 32) {\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_3__.PrivateKeyLengthError();\n    }\n    return privateKeyUint8Array;\n};\n/**\n *\n * Hashes the given message. The data will be UTF-8 HEX decoded and enveloped as follows: \"\\\\x19Ethereum Signed Message:\\\\n\" + message.length + message and hashed using keccak256.\n *\n * @param message - A message to hash, if its HEX it will be UTF8 decoded.\n * @returns The hashed message\n *\n * ```ts\n * hashMessage(\"Hello world\")\n * > \"0x8144a6fa26be252b86456491fbcd43c1de7e022241845ffea1c3df066f7cfede\"\n * hashMessage(utf8ToHex(\"Hello world\")) // Will be hex decoded in hashMessage\n * > \"0x8144a6fa26be252b86456491fbcd43c1de7e022241845ffea1c3df066f7cfede\"\n * ```\n */ const hashMessage = (message)=>{\n    const messageHex = (0,web3_validator__WEBPACK_IMPORTED_MODULE_5__.isHexStrict)(message) ? message : (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.utf8ToHex)(message);\n    const messageBytes = (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.hexToBytes)(messageHex);\n    const preamble = (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.hexToBytes)((0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.fromUtf8)(`\\x19Ethereum Signed Message:\\n${messageBytes.byteLength}`));\n    const ethMessage = (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.uint8ArrayConcat)(preamble, messageBytes);\n    return (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.sha3Raw)(ethMessage); // using keccak in web3-utils.sha3Raw instead of SHA3 (NIST Standard) as both are different\n};\n/**\n * Signs arbitrary data with a given private key.\n * **_NOTE:_** The value passed as the data parameter will be UTF-8 HEX decoded and wrapped as follows: \"\\\\x19Ethereum Signed Message:\\\\n\" + message.length + message\n *\n * @param data - The data to sign\n * @param privateKey - The 32 byte private key to sign with\n * @returns The signature Object containing the message, messageHash, signature r, s, v\n *\n * ```ts\n * web3.eth.accounts.sign('Some data', '0x4c0883a69102937d6231471b5dbb6204fe5129617082792ae468d01a3f362318')\n * > {\n * message: 'Some data',\n * messageHash: '0x1da44b586eb0729ff70a73c326926f6ed5a25f5b056e7f47fbc6e58d86871655',\n * v: '0x1c',\n * r: '0xb91467e570a6466aa9e9876cbcd013baba02900b8979d43fe208a4a4f339f5fd',\n * s: '0x6007e74cd82e037b800186422fc2da167c747ef045e5d18a5f5d4300f8e1a029',\n * signature: '0xb91467e570a6466aa9e9876cbcd013baba02900b8979d43fe208a4a4f339f5fd6007e74cd82e037b800186422fc2da167c747ef045e5d18a5f5d4300f8e1a0291c'\n * }\n * ```\n */ const sign = (data, privateKey)=>{\n    const privateKeyUint8Array = parseAndValidatePrivateKey(privateKey);\n    const hash = hashMessage(data);\n    const signature = _tx_constants_js__WEBPACK_IMPORTED_MODULE_6__.secp256k1.sign(hash.substring(2), privateKeyUint8Array);\n    const signatureBytes = signature.toCompactRawBytes();\n    const r = signature.r.toString(16).padStart(64, \"0\");\n    const s = signature.s.toString(16).padStart(64, \"0\");\n    const v = signature.recovery + 27;\n    return {\n        message: data,\n        messageHash: hash,\n        v: (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.numberToHex)(v),\n        r: `0x${r}`,\n        s: `0x${s}`,\n        signature: `${(0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.bytesToHex)(signatureBytes)}${v.toString(16)}`\n    };\n};\n/**\n * Signs an Ethereum transaction with a given private key.\n *\n * @param transaction - The transaction, must be a legacy, EIP2930 or EIP 1559 transaction type\n * @param privateKey -  The private key to import. This is 32 bytes of random data.\n * @returns A signTransactionResult object that contains message hash, r, s, v, transaction hash and raw transaction.\n *\n * This function is not stateful here. We need network access to get the account `nonce` and `chainId` to sign the transaction.\n * This function will rely on user to provide the full transaction to be signed. If you want to sign a partial transaction object\n * Use {@link Web3.eth.accounts.sign} instead.\n *\n * Signing a legacy transaction\n * ```ts\n * signTransaction({\n *\tto: '0x118C2E5F57FD62C2B5b46a5ae9216F4FF4011a07',\n *\tvalue: '0x186A0',\n *\tgasLimit: '0x520812',\n *\tgasPrice: '0x09184e72a000',\n *\tdata: '',\n *\tchainId: 1,\n *\tnonce: 0,\n * }, '0x4c0883a69102937d6231471b5dbb6204fe5129617082792ae468d01a3f362318'))\n * }\n * > {\n * messageHash: '0x28b7b75f7ba48d588a902c1ff4d5d13cc0ca9ac0aaa39562368146923fb853bf',\n * v: '0x25',\n * r: '0x601b0017b0e20dd0eeda4b895fbc1a9e8968990953482214f880bae593e71b5',\n * s: '0x690d984493560552e3ebdcc19a65b9c301ea9ddc82d3ab8cfde60485fd5722ce',\n * rawTransaction: '0xf869808609184e72a0008352081294118c2e5f57fd62c2b5b46a5ae9216f4ff4011a07830186a08025a00601b0017b0e20dd0eeda4b895fbc1a9e8968990953482214f880bae593e71b5a0690d984493560552e3ebdcc19a65b9c301ea9ddc82d3ab8cfde60485fd5722ce',\n * transactionHash: '0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470'\n * ```\n * Signing an eip 1559 transaction\n * ```ts\n * signTransaction({\n *\tto: '0xF0109fC8DF283027b6285cc889F5aA624EaC1F55',\n *\tmaxPriorityFeePerGas: '0x3B9ACA00',\n *\tmaxFeePerGas: '0xB2D05E00',\n *\tgasLimit: '0x6A4012',\n *\tvalue: '0x186A0',\n *\tdata: '',\n *\tchainId: 1,\n *\tnonce: 0,\n * },\"0x4c0883a69102937d6231471b5dbb6204fe5129617082792ae468d01a3f362318\")\n * > {\n *  messageHash: '0x5744f24d5f0aff6c70487c8e85adf07d8564e50b08558788f00479611d7bae5f',\n * v: '0x25',\n * r: '0x78a5a6b2876c3985f90f82073d18d57ac299b608cc76a4ba697b8bb085048347',\n * s: '0x9cfcb40cc7d505ed17ff2d3337b51b066648f10c6b7e746117de69b2eb6358d',\n * rawTransaction: '0xf8638080836a401294f0109fc8df283027b6285cc889f5aa624eac1f55830186a08025a078a5a6b2876c3985f90f82073d18d57ac299b608cc76a4ba697b8bb085048347a009cfcb40cc7d505ed17ff2d3337b51b066648f10c6b7e746117de69b2eb6358d',\n * transactionHash: '0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470'\n * }\n * ```\n * Signing an eip 2930 transaction\n * ```ts\n * signTransaction({\n *\tchainId: 1,\n *\tnonce: 0,\n *\tgasPrice: '0x09184e72a000',\n *\tgasLimit: '0x2710321',\n *\tto: '0xF0109fC8DF283027b6285cc889F5aA624EaC1F55',\n *\tvalue: '0x186A0',\n *\tdata: '',\n *\taccessList: [\n *\t\t{\n *\t\t\taddress: '0x0000000000000000000000000000000000000101',\n *\t\t\tstorageKeys: [\n *\t\t\t\t'0x0000000000000000000000000000000000000000000000000000000000000000',\n *\t\t\t\t'0x00000000000000000000000000000000000000000000000000000000000060a7',\n *\t\t\t],\n *\t\t},\n *\t],\n * },\"0x4c0883a69102937d6231471b5dbb6204fe5129617082792ae468d01a3f362318\")\n * > {\n * messageHash: '0xc55ea24bdb4c379550a7c9a6818ac39ca33e75bc78ddb862bd82c31cc1c7a073',\n * v: '0x26',\n * r: '0x27344e77871c8b2068bc998bf28e0b5f9920867a69c455b2ed0c1c150fec098e',\n * s: '0x519f0130a1d662841d4a28082e9c9bb0a15e0e59bb46cfc39a52f0e285dec6b9',\n * rawTransaction: '0xf86a808609184e72a000840271032194f0109fc8df283027b6285cc889f5aa624eac1f55830186a08026a027344e77871c8b2068bc998bf28e0b5f9920867a69c455b2ed0c1c150fec098ea0519f0130a1d662841d4a28082e9c9bb0a15e0e59bb46cfc39a52f0e285dec6b9',\n * transactionHash: '0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470'\n * }\n * ```\n */ const signTransaction = (transaction, privateKey)=>__awaiter(void 0, void 0, void 0, function*() {\n        const signedTx = transaction.sign((0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.hexToBytes)(privateKey));\n        if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_5__.isNullish)(signedTx.v) || (0,web3_validator__WEBPACK_IMPORTED_MODULE_5__.isNullish)(signedTx.r) || (0,web3_validator__WEBPACK_IMPORTED_MODULE_5__.isNullish)(signedTx.s)) throw new web3_errors__WEBPACK_IMPORTED_MODULE_3__.TransactionSigningError(\"Signer Error\");\n        const validationErrors = signedTx.validate(true);\n        if (validationErrors.length > 0) {\n            let errorString = \"Signer Error \";\n            for (const validationError of validationErrors){\n                errorString += `${errorString} ${validationError}.`;\n            }\n            throw new web3_errors__WEBPACK_IMPORTED_MODULE_3__.TransactionSigningError(errorString);\n        }\n        const rawTx = (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.bytesToHex)(signedTx.serialize());\n        const txHash = (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.sha3Raw)(rawTx); // using keccak in web3-utils.sha3Raw instead of SHA3 (NIST Standard) as both are different\n        return {\n            messageHash: (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.bytesToHex)(signedTx.getMessageToSign(true)),\n            v: `0x${signedTx.v.toString(16)}`,\n            r: `0x${signedTx.r.toString(16).padStart(64, \"0\")}`,\n            s: `0x${signedTx.s.toString(16).padStart(64, \"0\")}`,\n            rawTransaction: rawTx,\n            transactionHash: (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.bytesToHex)(txHash)\n        };\n    });\n/**\n * Recovers the Ethereum address which was used to sign the given RLP encoded transaction.\n *\n * @param rawTransaction - The hex string having RLP encoded transaction\n * @returns The Ethereum address used to sign this transaction\n * ```ts\n * recoverTransaction('0xf869808504e3b29200831e848094f0109fc8df283027b6285cc889f5aa624eac1f55843b9aca008025a0c9cf86333bcb065d140032ecaab5d9281bde80f21b9687b3e94161de42d51895a0727a108a0b8d101465414033c3f705a9c7b826e596766046ee1183dbc8aeaa68');\n * > \"0x2c7536E3605D9C16a7a3D7b1898e529396a65c23\"\n * ```\n */ const recoverTransaction = (rawTransaction)=>{\n    if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_5__.isNullish)(rawTransaction)) throw new web3_errors__WEBPACK_IMPORTED_MODULE_3__.UndefinedRawTransactionError();\n    const tx = _tx_transactionFactory_js__WEBPACK_IMPORTED_MODULE_8__.TransactionFactory.fromSerializedData((0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.hexToBytes)(rawTransaction));\n    return (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.toChecksumAddress)(tx.getSenderAddress().toString());\n};\n/**\n * Recovers the Ethereum address which was used to sign the given data\n *\n * @param data - Either a signed message, hash, or the {@link signatureObject}\n * @param signature - The raw RLP encoded signature\n * @param signatureOrV - signatureOrV\n * @param prefixedOrR - prefixedOrR\n * @param s - s\n * @param prefixed - (default: false) If the last parameter is true, the given message will NOT automatically be prefixed with \"\\\\x19Ethereum Signed Message:\\\\n\" + message.length + message, and assumed to be already prefixed.\n * @returns The Ethereum address used to sign this data\n * ```ts\n * sign('Some data', '0xbe6383dad004f233317e46ddb46ad31b16064d14447a95cc1d8c8d4bc61c3728');\n * > {\n * message: 'Some data',\n * messageHash: '0x1da44b586eb0729ff70a73c326926f6ed5a25f5b056e7f47fbc6e58d86871655',\n * v: '0x1b',\n * r: '0xa8037a6116c176a25e6fc224947fde9e79a2deaa0dd8b67b366fbdfdbffc01f9',\n * s: '0x53e41351267b20d4a89ebfe9c8f03c04de9b345add4a52f15bd026b63c8fb150',\n * signature: '0xa8037a6116c176a25e6fc224947fde9e79a2deaa0dd8b67b366fbdfdbffc01f953e41351267b20d4a89ebfe9c8f03c04de9b345add4a52f15bd026b63c8fb1501b'\n * }\n * recover('0xa8037a6116c176a25e6fc224947fde9e79a2deaa0dd8b67b366fbdfdbffc01f953e41351267b20d4a89ebfe9c8f03c04de9b345add4a52f15bd026b63c8fb1501b');\n * > '0xEB014f8c8B418Db6b45774c326A0E64C78914dC0'\n * ```\n */ const recover = (data, signatureOrV, prefixedOrR, s, prefixed)=>{\n    if (typeof data === \"object\") {\n        const signatureStr = `${data.r}${data.s.slice(2)}${data.v.slice(2)}`;\n        return recover(data.messageHash, signatureStr, prefixedOrR);\n    }\n    if (typeof signatureOrV === \"string\" && typeof prefixedOrR === \"string\" && !(0,web3_validator__WEBPACK_IMPORTED_MODULE_5__.isNullish)(s)) {\n        const signatureStr = `${prefixedOrR}${s.slice(2)}${signatureOrV.slice(2)}`;\n        return recover(data, signatureStr, prefixed);\n    }\n    if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_5__.isNullish)(signatureOrV)) throw new web3_errors__WEBPACK_IMPORTED_MODULE_3__.InvalidSignatureError(\"signature string undefined\");\n    const V_INDEX = 130; // r = first 32 bytes, s = second 32 bytes, v = last byte of signature\n    const hashedMessage = prefixedOrR ? data : hashMessage(data);\n    let v = parseInt(signatureOrV.substring(V_INDEX), 16); // 0x + r + s + v\n    if (v > 26) {\n        v -= 27;\n    }\n    const ecPublicKey = _tx_constants_js__WEBPACK_IMPORTED_MODULE_6__.secp256k1.Signature.fromCompact(signatureOrV.slice(2, V_INDEX)).addRecoveryBit(v).recoverPublicKey(hashedMessage.replace(\"0x\", \"\")).toRawBytes(false);\n    const publicHash = (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.sha3Raw)(ecPublicKey.subarray(1));\n    const address = (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.toChecksumAddress)(`0x${publicHash.slice(-40)}`);\n    return address;\n};\n/**\n * Get the ethereum Address from a private key\n *\n * @param privateKey - String or Uint8Array of 32 bytes\n * @param ignoreLength - if true, will not error check length\n * @returns The Ethereum address\n * @example\n * ```ts\n * privateKeyToAddress(\"0xbe6383dad004f233317e46ddb46ad31b16064d14447a95cc1d8c8d4bc61c3728\")\n * > \"0xEB014f8c8B418Db6b45774c326A0E64C78914dC0\"\n * ```\n */ const privateKeyToAddress = (privateKey)=>{\n    const privateKeyUint8Array = parseAndValidatePrivateKey(privateKey);\n    // Get public key from private key in compressed format\n    const publicKey = _tx_constants_js__WEBPACK_IMPORTED_MODULE_6__.secp256k1.getPublicKey(privateKeyUint8Array, false);\n    // Uncompressed ECDSA public key contains the prefix `0x04` which is not used in the Ethereum public key\n    const publicKeyHash = (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.sha3Raw)(publicKey.slice(1));\n    // The hash is returned as 256 bits (32 bytes) or 64 hex characters\n    // To get the address, take the last 20 bytes of the public hash\n    const address = publicKeyHash.slice(-40);\n    return (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.toChecksumAddress)(`0x${address}`);\n};\n/**\n * Get the public key from a private key\n *\n * @param privateKey - String or Uint8Array of 32 bytes\n * @param isCompressed - if true, will generate a 33 byte compressed public key instead of a 65 byte public key\n * @returns The public key\n * @example\n * ```ts\n * privateKeyToAddress(\"0x1e046a882bb38236b646c9f135cf90ad90a140810f439875f2a6dd8e50fa261f\", true)\n * > \"0x42beb65f179720abaa3ec9a70a539629cbbc5ec65bb57e7fc78977796837e537662dd17042e6449dc843c281067a4d6d8d1a1775a13c41901670d5de7ee6503a\" // uncompressed public key\n * ```\n */ const privateKeyToPublicKey = (privateKey, isCompressed)=>{\n    const privateKeyUint8Array = parseAndValidatePrivateKey(privateKey);\n    // Get public key from private key in compressed format\n    return `0x${(0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.bytesToHex)(_tx_constants_js__WEBPACK_IMPORTED_MODULE_6__.secp256k1.getPublicKey(privateKeyUint8Array, isCompressed)).slice(4)}`; // 0x and removing compression byte\n};\n/**\n * encrypt a private key with a password, returns a V3 JSON Keystore\n *\n * Read more: https://github.com/ethereum/wiki/wiki/Web3-Secret-Storage-Definition\n *\n * @param privateKey - The private key to encrypt, 32 bytes.\n * @param password - The password used for encryption.\n * @param options - Options to configure to encrypt the keystore either scrypt or pbkdf2\n * @returns Returns a V3 JSON Keystore\n *\n *\n * Encrypt using scrypt options\n * ```ts\n * encrypt('0x67f476289210e3bef3c1c75e4de993ff0a00663df00def84e73aa7411eac18a6',\n * '123',\n * {\n *   n: 8192,\n *\t iv: web3.utils.hexToBytes('0xbfb43120ae00e9de110f8325143a2709'),\n *\t salt: web3.utils.hexToBytes('0x210d0ec956787d865358ac45716e6dd42e68d48e346d795746509523aeb477dd'),\n *\t),\n * }).then(console.log)\n * > {\n * version: 3,\n * id: 'c0cb0a94-4702-4492-b6e6-eb2ac404344a',\n * address: 'cda9a91875fc35c8ac1320e098e584495d66e47c',\n * crypto: {\n *   ciphertext: 'cb3e13e3281ff3861a3f0257fad4c9a51b0eb046f9c7821825c46b210f040b8f',\n *   cipherparams: { iv: 'bfb43120ae00e9de110f8325143a2709' },\n *   cipher: 'aes-128-ctr',\n *   kdf: 'scrypt',\n *   kdfparams: {\n *     n: 8192,\n *     r: 8,\n *     p: 1,\n *     dklen: 32,\n *     salt: '210d0ec956787d865358ac45716e6dd42e68d48e346d795746509523aeb477dd'\n *   },\n *   mac: 'efbf6d3409f37c0084a79d5fdf9a6f5d97d11447517ef1ea8374f51e581b7efd'\n * }\n *}\n *```\n * Encrypting using pbkdf2 options\n * ```ts\n * encrypt('0x348ce564d427a3311b6536bbcff9390d69395b06ed6c486954e971d960fe8709',\n *'123',\n *{\n *\tiv: 'bfb43120ae00e9de110f8325143a2709',\n *\tsalt: '210d0ec956787d865358ac45716e6dd42e68d48e346d795746509523aeb477dd',\n *\tc: 262144,\n *\tkdf: 'pbkdf2',\n *}).then(console.log)\n * >\n * {\n *   version: 3,\n *   id: '77381417-0973-4e4b-b590-8eb3ace0fe2d',\n *   address: 'b8ce9ab6943e0eced004cde8e3bbed6568b2fa01',\n *   crypto: {\n *     ciphertext: '76512156a34105fa6473ad040c666ae7b917d14c06543accc0d2dc28e6073b12',\n *     cipherparams: { iv: 'bfb43120ae00e9de110f8325143a2709' },\n *     cipher: 'aes-128-ctr',\n *     kdf: 'pbkdf2',\n *     kdfparams: {\n *       dklen: 32,\n *       salt: '210d0ec956787d865358ac45716e6dd42e68d48e346d795746509523aeb477dd',\n *       c: 262144,\n *       prf: 'hmac-sha256'\n *     },\n *   mac: '46eb4884e82dc43b5aa415faba53cc653b7038e9d61cc32fd643cf8c396189b7'\n *   }\n * }\n *```\n */ const encrypt = (privateKey, password, options)=>__awaiter(void 0, void 0, void 0, function*() {\n        var _a, _b, _c, _d, _e, _f, _g;\n        const privateKeyUint8Array = parseAndValidatePrivateKey(privateKey);\n        // if given salt or iv is a string, convert it to a Uint8Array\n        let salt;\n        if (options === null || options === void 0 ? void 0 : options.salt) {\n            salt = typeof options.salt === \"string\" ? (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.hexToBytes)(options.salt) : options.salt;\n        } else {\n            salt = (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.randomBytes)(32);\n        }\n        if (!((0,web3_validator__WEBPACK_IMPORTED_MODULE_5__.isString)(password) || password instanceof Uint8Array)) {\n            throw new web3_errors__WEBPACK_IMPORTED_MODULE_3__.InvalidPasswordError();\n        }\n        const uint8ArrayPassword = typeof password === \"string\" ? (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.hexToBytes)((0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.utf8ToHex)(password)) : password;\n        let initializationVector;\n        if (options === null || options === void 0 ? void 0 : options.iv) {\n            initializationVector = typeof options.iv === \"string\" ? (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.hexToBytes)(options.iv) : options.iv;\n            if (initializationVector.length !== 16) {\n                throw new web3_errors__WEBPACK_IMPORTED_MODULE_3__.IVLengthError();\n            }\n        } else {\n            initializationVector = (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.randomBytes)(16);\n        }\n        const kdf = (_a = options === null || options === void 0 ? void 0 : options.kdf) !== null && _a !== void 0 ? _a : \"scrypt\";\n        let derivedKey;\n        let kdfparams;\n        // derive key from key derivation function\n        if (kdf === \"pbkdf2\") {\n            kdfparams = {\n                dklen: (_b = options === null || options === void 0 ? void 0 : options.dklen) !== null && _b !== void 0 ? _b : 32,\n                salt: (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.bytesToHex)(salt).replace(\"0x\", \"\"),\n                c: (_c = options === null || options === void 0 ? void 0 : options.c) !== null && _c !== void 0 ? _c : 262144,\n                prf: \"hmac-sha256\"\n            };\n            if (kdfparams.c < 1000) {\n                // error when c < 1000, pbkdf2 is less secure with less iterations\n                throw new web3_errors__WEBPACK_IMPORTED_MODULE_3__.PBKDF2IterationsError();\n            }\n            derivedKey = (0,ethereum_cryptography_pbkdf2_js__WEBPACK_IMPORTED_MODULE_1__.pbkdf2Sync)(uint8ArrayPassword, salt, kdfparams.c, kdfparams.dklen, \"sha256\");\n        } else if (kdf === \"scrypt\") {\n            kdfparams = {\n                n: (_d = options === null || options === void 0 ? void 0 : options.n) !== null && _d !== void 0 ? _d : 8192,\n                r: (_e = options === null || options === void 0 ? void 0 : options.r) !== null && _e !== void 0 ? _e : 8,\n                p: (_f = options === null || options === void 0 ? void 0 : options.p) !== null && _f !== void 0 ? _f : 1,\n                dklen: (_g = options === null || options === void 0 ? void 0 : options.dklen) !== null && _g !== void 0 ? _g : 32,\n                salt: (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.bytesToHex)(salt).replace(\"0x\", \"\")\n            };\n            derivedKey = (0,ethereum_cryptography_scrypt_js__WEBPACK_IMPORTED_MODULE_2__.scryptSync)(uint8ArrayPassword, salt, kdfparams.n, kdfparams.p, kdfparams.r, kdfparams.dklen);\n        } else {\n            throw new web3_errors__WEBPACK_IMPORTED_MODULE_3__.InvalidKdfError();\n        }\n        const cipher = yield (0,ethereum_cryptography_aes_js__WEBPACK_IMPORTED_MODULE_0__.encrypt)(privateKeyUint8Array, derivedKey.slice(0, 16), initializationVector, \"aes-128-ctr\");\n        const ciphertext = (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.bytesToHex)(cipher).slice(2);\n        const mac = (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.sha3Raw)((0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.uint8ArrayConcat)(derivedKey.slice(16, 32), cipher)).replace(\"0x\", \"\");\n        return {\n            version: 3,\n            id: (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.uuidV4)(),\n            address: privateKeyToAddress(privateKeyUint8Array).toLowerCase().replace(\"0x\", \"\"),\n            crypto: {\n                ciphertext,\n                cipherparams: {\n                    iv: (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.bytesToHex)(initializationVector).replace(\"0x\", \"\")\n                },\n                cipher: \"aes-128-ctr\",\n                kdf,\n                kdfparams,\n                mac\n            }\n        };\n    });\n/**\n * Get an Account object from the privateKey\n *\n * @param privateKey - String or Uint8Array of 32 bytes\n * @param ignoreLength - if true, will not error check length\n * @returns A Web3Account object\n *\n * The `Web3Account.signTransaction` is not stateful here. We need network access to get the account `nonce` and `chainId` to sign the transaction.\n * Use {@link Web3.eth.accounts.signTransaction} instead.\n *\n * ```ts\n * privateKeyToAccount(\"0x348ce564d427a3311b6536bbcff9390d69395b06ed6c486954e971d960fe8709\");\n * >    {\n * \t\t\taddress: '0xb8CE9ab6943e0eCED004cDe8e3bBed6568B2Fa01',\n * \t\t\tprivateKey: '0x348ce564d427a3311b6536bbcff9390d69395b06ed6c486954e971d960fe8709',\n * \t\t\tsign,\n * \t\t\tsignTransaction,\n * \t\t\tencrypt,\n * \t}\n * ```\n */ const privateKeyToAccount = (privateKey, ignoreLength)=>{\n    const privateKeyUint8Array = parseAndValidatePrivateKey(privateKey, ignoreLength);\n    return {\n        address: privateKeyToAddress(privateKeyUint8Array),\n        privateKey: (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.bytesToHex)(privateKeyUint8Array),\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        signTransaction: (_tx)=>{\n            throw new web3_errors__WEBPACK_IMPORTED_MODULE_3__.TransactionSigningError(\"Do not have network access to sign the transaction\");\n        },\n        sign: (data)=>sign(typeof data === \"string\" ? data : JSON.stringify(data), privateKeyUint8Array),\n        encrypt: (password, options)=>__awaiter(void 0, void 0, void 0, function*() {\n                return encrypt(privateKeyUint8Array, password, options);\n            })\n    };\n};\n/**\n *\n * Generates and returns a Web3Account object that includes the private and public key\n * For creation of private key, it uses an audited package ethereum-cryptography/secp256k1\n * that is cryptographically secure random number with certain characteristics.\n * Read more: https://www.npmjs.com/package/ethereum-cryptography#secp256k1-curve\n *\n * @returns A Web3Account object\n * ```ts\n * web3.eth.accounts.create();\n * {\n * address: '0xbD504f977021b5E5DdccD8741A368b147B3B38bB',\n * privateKey: '0x964ced1c69ad27a311c432fdc0d8211e987595f7eb34ab405a5f16bdc9563ec5',\n * signTransaction: [Function: signTransaction],\n * sign: [Function: sign],\n * encrypt: [AsyncFunction: encrypt]\n * }\n * ```\n */ const create = ()=>{\n    const privateKey = _tx_constants_js__WEBPACK_IMPORTED_MODULE_6__.secp256k1.utils.randomPrivateKey();\n    return privateKeyToAccount(`${(0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.bytesToHex)(privateKey)}`);\n};\n/**\n * Decrypts a v3 keystore JSON, and creates the account.\n *\n * @param keystore - the encrypted Keystore object or string to decrypt\n * @param password - The password that was used for encryption\n * @param nonStrict - if true and given a json string, the keystore will be parsed as lowercase.\n * @returns Returns the decrypted Web3Account object\n * Decrypting scrypt\n *\n * ```ts\n * decrypt({\n *   version: 3,\n *   id: 'c0cb0a94-4702-4492-b6e6-eb2ac404344a',\n *   address: 'cda9a91875fc35c8ac1320e098e584495d66e47c',\n *   crypto: {\n *   ciphertext: 'cb3e13e3281ff3861a3f0257fad4c9a51b0eb046f9c7821825c46b210f040b8f',\n *      cipherparams: { iv: 'bfb43120ae00e9de110f8325143a2709' },\n *      cipher: 'aes-128-ctr',\n *      kdf: 'scrypt',\n *      kdfparams: {\n *        n: 8192,\n *        r: 8,\n *        p: 1,\n *        dklen: 32,\n *        salt: '210d0ec956787d865358ac45716e6dd42e68d48e346d795746509523aeb477dd'\n *      },\n *      mac: 'efbf6d3409f37c0084a79d5fdf9a6f5d97d11447517ef1ea8374f51e581b7efd'\n *    }\n *   }, '123').then(console.log)\n * > {\n * address: '0xcdA9A91875fc35c8Ac1320E098e584495d66e47c',\n * privateKey: '67f476289210e3bef3c1c75e4de993ff0a00663df00def84e73aa7411eac18a6',\n * signTransaction: [Function: signTransaction],\n * sign: [Function: sign],\n * encrypt: [AsyncFunction: encrypt]\n * }\n * ```\n */ const decrypt = (keystore, password, nonStrict)=>__awaiter(void 0, void 0, void 0, function*() {\n        const json = typeof keystore === \"object\" ? keystore : JSON.parse(nonStrict ? keystore.toLowerCase() : keystore);\n        web3_validator__WEBPACK_IMPORTED_MODULE_5__.validator.validateJSONSchema(_schemas_js__WEBPACK_IMPORTED_MODULE_7__.keyStoreSchema, json);\n        if (json.version !== 3) throw new web3_errors__WEBPACK_IMPORTED_MODULE_3__.KeyStoreVersionError();\n        const uint8ArrayPassword = typeof password === \"string\" ? (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.hexToBytes)((0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.utf8ToHex)(password)) : password;\n        web3_validator__WEBPACK_IMPORTED_MODULE_5__.validator.validate([\n            \"bytes\"\n        ], [\n            uint8ArrayPassword\n        ]);\n        let derivedKey;\n        if (json.crypto.kdf === \"scrypt\") {\n            const kdfparams = json.crypto.kdfparams;\n            const uint8ArraySalt = typeof kdfparams.salt === \"string\" ? (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.hexToBytes)(kdfparams.salt) : kdfparams.salt;\n            derivedKey = (0,ethereum_cryptography_scrypt_js__WEBPACK_IMPORTED_MODULE_2__.scryptSync)(uint8ArrayPassword, uint8ArraySalt, kdfparams.n, kdfparams.p, kdfparams.r, kdfparams.dklen);\n        } else if (json.crypto.kdf === \"pbkdf2\") {\n            const kdfparams = json.crypto.kdfparams;\n            const uint8ArraySalt = typeof kdfparams.salt === \"string\" ? (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.hexToBytes)(kdfparams.salt) : kdfparams.salt;\n            derivedKey = (0,ethereum_cryptography_pbkdf2_js__WEBPACK_IMPORTED_MODULE_1__.pbkdf2Sync)(uint8ArrayPassword, uint8ArraySalt, kdfparams.c, kdfparams.dklen, \"sha256\");\n        } else {\n            throw new web3_errors__WEBPACK_IMPORTED_MODULE_3__.InvalidKdfError();\n        }\n        const ciphertext = (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.hexToBytes)(json.crypto.ciphertext);\n        const mac = (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.sha3Raw)((0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.uint8ArrayConcat)(derivedKey.slice(16, 32), ciphertext)).replace(\"0x\", \"\");\n        if (mac !== json.crypto.mac) {\n            throw new web3_errors__WEBPACK_IMPORTED_MODULE_3__.KeyDerivationError();\n        }\n        const seed = yield (0,ethereum_cryptography_aes_js__WEBPACK_IMPORTED_MODULE_0__.decrypt)((0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.hexToBytes)(json.crypto.ciphertext), derivedKey.slice(0, 16), (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.hexToBytes)(json.crypto.cipherparams.iv));\n        return privateKeyToAccount(seed);\n    }); //# sourceMappingURL=account.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/account.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/chains/goerli.js":
/*!************************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/chains/goerli.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    \"name\": \"goerli\",\n    \"chainId\": 5,\n    \"networkId\": 5,\n    \"defaultHardfork\": \"merge\",\n    \"consensus\": {\n        \"type\": \"poa\",\n        \"algorithm\": \"clique\",\n        \"clique\": {\n            \"period\": 15,\n            \"epoch\": 30000\n        }\n    },\n    \"comment\": \"Cross-client PoA test network\",\n    \"url\": \"https://github.com/goerli/testnet\",\n    \"genesis\": {\n        \"timestamp\": \"0x5c51a607\",\n        \"gasLimit\": 10485760,\n        \"difficulty\": 1,\n        \"nonce\": \"0x0000000000000000\",\n        \"extraData\": \"0x22466c6578692069732061207468696e6722202d204166726900000000000000e0a2bd4258d2768837baa26a28fe71dc079f84c70000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\"\n    },\n    \"hardforks\": [\n        {\n            \"name\": \"chainstart\",\n            \"block\": 0,\n            \"forkHash\": \"0xa3f5ab08\"\n        },\n        {\n            \"name\": \"homestead\",\n            \"block\": 0,\n            \"forkHash\": \"0xa3f5ab08\"\n        },\n        {\n            \"name\": \"tangerineWhistle\",\n            \"block\": 0,\n            \"forkHash\": \"0xa3f5ab08\"\n        },\n        {\n            \"name\": \"spuriousDragon\",\n            \"block\": 0,\n            \"forkHash\": \"0xa3f5ab08\"\n        },\n        {\n            \"name\": \"byzantium\",\n            \"block\": 0,\n            \"forkHash\": \"0xa3f5ab08\"\n        },\n        {\n            \"name\": \"constantinople\",\n            \"block\": 0,\n            \"forkHash\": \"0xa3f5ab08\"\n        },\n        {\n            \"name\": \"petersburg\",\n            \"block\": 0,\n            \"forkHash\": \"0xa3f5ab08\"\n        },\n        {\n            \"name\": \"istanbul\",\n            \"block\": 1561651,\n            \"forkHash\": \"0xc25efa5c\"\n        },\n        {\n            \"name\": \"berlin\",\n            \"block\": 4460644,\n            \"forkHash\": \"0x757a1c47\"\n        },\n        {\n            \"name\": \"london\",\n            \"block\": 5062605,\n            \"forkHash\": \"0xb8c6299d\"\n        },\n        {\n            \"//_comment\": \"The forkHash will remain same as mergeForkIdTransition is post merge, terminal block: https://goerli.etherscan.io/block/7382818\",\n            \"name\": \"merge\",\n            \"ttd\": \"10790000\",\n            \"block\": 7382819,\n            \"forkHash\": \"0xb8c6299d\"\n        },\n        {\n            \"name\": \"mergeForkIdTransition\",\n            \"block\": null,\n            \"forkHash\": null\n        },\n        {\n            \"name\": \"shanghai\",\n            \"block\": null,\n            \"forkHash\": null\n        }\n    ],\n    \"bootstrapNodes\": [],\n    \"dnsNetworks\": [\n        \"enrtree://AKA3AM6LPBYEUDMVNU3BSVQJ5AD45Y7YPOHJLEF6W26QOE4VTUDPE@all.goerli.ethdisco.net\"\n    ]\n}); //# sourceMappingURL=goerli.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vY2hhaW5zL2dvZXJsaS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsaUVBQWU7SUFDWCxRQUFRO0lBQ1IsV0FBVztJQUNYLGFBQWE7SUFDYixtQkFBbUI7SUFDbkIsYUFBYTtRQUNULFFBQVE7UUFDUixhQUFhO1FBQ2IsVUFBVTtZQUNOLFVBQVU7WUFDVixTQUFTO1FBQ2I7SUFDSjtJQUNBLFdBQVc7SUFDWCxPQUFPO0lBQ1AsV0FBVztRQUNQLGFBQWE7UUFDYixZQUFZO1FBQ1osY0FBYztRQUNkLFNBQVM7UUFDVCxhQUFhO0lBQ2pCO0lBQ0EsYUFBYTtRQUNUO1lBQ0ksUUFBUTtZQUNSLFNBQVM7WUFDVCxZQUFZO1FBQ2hCO1FBQ0E7WUFDSSxRQUFRO1lBQ1IsU0FBUztZQUNULFlBQVk7UUFDaEI7UUFDQTtZQUNJLFFBQVE7WUFDUixTQUFTO1lBQ1QsWUFBWTtRQUNoQjtRQUNBO1lBQ0ksUUFBUTtZQUNSLFNBQVM7WUFDVCxZQUFZO1FBQ2hCO1FBQ0E7WUFDSSxRQUFRO1lBQ1IsU0FBUztZQUNULFlBQVk7UUFDaEI7UUFDQTtZQUNJLFFBQVE7WUFDUixTQUFTO1lBQ1QsWUFBWTtRQUNoQjtRQUNBO1lBQ0ksUUFBUTtZQUNSLFNBQVM7WUFDVCxZQUFZO1FBQ2hCO1FBQ0E7WUFDSSxRQUFRO1lBQ1IsU0FBUztZQUNULFlBQVk7UUFDaEI7UUFDQTtZQUNJLFFBQVE7WUFDUixTQUFTO1lBQ1QsWUFBWTtRQUNoQjtRQUNBO1lBQ0ksUUFBUTtZQUNSLFNBQVM7WUFDVCxZQUFZO1FBQ2hCO1FBQ0E7WUFDSSxjQUFjO1lBQ2QsUUFBUTtZQUNSLE9BQU87WUFDUCxTQUFTO1lBQ1QsWUFBWTtRQUNoQjtRQUNBO1lBQ0ksUUFBUTtZQUNSLFNBQVM7WUFDVCxZQUFZO1FBQ2hCO1FBQ0E7WUFDSSxRQUFRO1lBQ1IsU0FBUztZQUNULFlBQVk7UUFDaEI7S0FDSDtJQUNELGtCQUFrQixFQUFFO0lBQ3BCLGVBQWU7UUFDWDtLQUNIO0FBQ0wsQ0FBQyxFQUFDLENBQ0Ysa0NBQWtDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vY2hhaW5zL2dvZXJsaS5qcz8zYjE2Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IHtcbiAgICBcIm5hbWVcIjogXCJnb2VybGlcIixcbiAgICBcImNoYWluSWRcIjogNSxcbiAgICBcIm5ldHdvcmtJZFwiOiA1LFxuICAgIFwiZGVmYXVsdEhhcmRmb3JrXCI6IFwibWVyZ2VcIixcbiAgICBcImNvbnNlbnN1c1wiOiB7XG4gICAgICAgIFwidHlwZVwiOiBcInBvYVwiLFxuICAgICAgICBcImFsZ29yaXRobVwiOiBcImNsaXF1ZVwiLFxuICAgICAgICBcImNsaXF1ZVwiOiB7XG4gICAgICAgICAgICBcInBlcmlvZFwiOiAxNSxcbiAgICAgICAgICAgIFwiZXBvY2hcIjogMzAwMDBcbiAgICAgICAgfVxuICAgIH0sXG4gICAgXCJjb21tZW50XCI6IFwiQ3Jvc3MtY2xpZW50IFBvQSB0ZXN0IG5ldHdvcmtcIixcbiAgICBcInVybFwiOiBcImh0dHBzOi8vZ2l0aHViLmNvbS9nb2VybGkvdGVzdG5ldFwiLFxuICAgIFwiZ2VuZXNpc1wiOiB7XG4gICAgICAgIFwidGltZXN0YW1wXCI6IFwiMHg1YzUxYTYwN1wiLFxuICAgICAgICBcImdhc0xpbWl0XCI6IDEwNDg1NzYwLFxuICAgICAgICBcImRpZmZpY3VsdHlcIjogMSxcbiAgICAgICAgXCJub25jZVwiOiBcIjB4MDAwMDAwMDAwMDAwMDAwMFwiLFxuICAgICAgICBcImV4dHJhRGF0YVwiOiBcIjB4MjI0NjZjNjU3ODY5MjA2OTczMjA2MTIwNzQ2ODY5NmU2NzIyMjAyZDIwNDE2NjcyNjkwMDAwMDAwMDAwMDAwMGUwYTJiZDQyNThkMjc2ODgzN2JhYTI2YTI4ZmU3MWRjMDc5Zjg0YzcwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCJcbiAgICB9LFxuICAgIFwiaGFyZGZvcmtzXCI6IFtcbiAgICAgICAge1xuICAgICAgICAgICAgXCJuYW1lXCI6IFwiY2hhaW5zdGFydFwiLFxuICAgICAgICAgICAgXCJibG9ja1wiOiAwLFxuICAgICAgICAgICAgXCJmb3JrSGFzaFwiOiBcIjB4YTNmNWFiMDhcIlxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBcIm5hbWVcIjogXCJob21lc3RlYWRcIixcbiAgICAgICAgICAgIFwiYmxvY2tcIjogMCxcbiAgICAgICAgICAgIFwiZm9ya0hhc2hcIjogXCIweGEzZjVhYjA4XCJcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgXCJuYW1lXCI6IFwidGFuZ2VyaW5lV2hpc3RsZVwiLFxuICAgICAgICAgICAgXCJibG9ja1wiOiAwLFxuICAgICAgICAgICAgXCJmb3JrSGFzaFwiOiBcIjB4YTNmNWFiMDhcIlxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBcIm5hbWVcIjogXCJzcHVyaW91c0RyYWdvblwiLFxuICAgICAgICAgICAgXCJibG9ja1wiOiAwLFxuICAgICAgICAgICAgXCJmb3JrSGFzaFwiOiBcIjB4YTNmNWFiMDhcIlxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBcIm5hbWVcIjogXCJieXphbnRpdW1cIixcbiAgICAgICAgICAgIFwiYmxvY2tcIjogMCxcbiAgICAgICAgICAgIFwiZm9ya0hhc2hcIjogXCIweGEzZjVhYjA4XCJcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgXCJuYW1lXCI6IFwiY29uc3RhbnRpbm9wbGVcIixcbiAgICAgICAgICAgIFwiYmxvY2tcIjogMCxcbiAgICAgICAgICAgIFwiZm9ya0hhc2hcIjogXCIweGEzZjVhYjA4XCJcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgXCJuYW1lXCI6IFwicGV0ZXJzYnVyZ1wiLFxuICAgICAgICAgICAgXCJibG9ja1wiOiAwLFxuICAgICAgICAgICAgXCJmb3JrSGFzaFwiOiBcIjB4YTNmNWFiMDhcIlxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBcIm5hbWVcIjogXCJpc3RhbmJ1bFwiLFxuICAgICAgICAgICAgXCJibG9ja1wiOiAxNTYxNjUxLFxuICAgICAgICAgICAgXCJmb3JrSGFzaFwiOiBcIjB4YzI1ZWZhNWNcIlxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBcIm5hbWVcIjogXCJiZXJsaW5cIixcbiAgICAgICAgICAgIFwiYmxvY2tcIjogNDQ2MDY0NCxcbiAgICAgICAgICAgIFwiZm9ya0hhc2hcIjogXCIweDc1N2ExYzQ3XCJcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgXCJuYW1lXCI6IFwibG9uZG9uXCIsXG4gICAgICAgICAgICBcImJsb2NrXCI6IDUwNjI2MDUsXG4gICAgICAgICAgICBcImZvcmtIYXNoXCI6IFwiMHhiOGM2Mjk5ZFwiXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIFwiLy9fY29tbWVudFwiOiBcIlRoZSBmb3JrSGFzaCB3aWxsIHJlbWFpbiBzYW1lIGFzIG1lcmdlRm9ya0lkVHJhbnNpdGlvbiBpcyBwb3N0IG1lcmdlLCB0ZXJtaW5hbCBibG9jazogaHR0cHM6Ly9nb2VybGkuZXRoZXJzY2FuLmlvL2Jsb2NrLzczODI4MThcIixcbiAgICAgICAgICAgIFwibmFtZVwiOiBcIm1lcmdlXCIsXG4gICAgICAgICAgICBcInR0ZFwiOiBcIjEwNzkwMDAwXCIsXG4gICAgICAgICAgICBcImJsb2NrXCI6IDczODI4MTksXG4gICAgICAgICAgICBcImZvcmtIYXNoXCI6IFwiMHhiOGM2Mjk5ZFwiXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIFwibmFtZVwiOiBcIm1lcmdlRm9ya0lkVHJhbnNpdGlvblwiLFxuICAgICAgICAgICAgXCJibG9ja1wiOiBudWxsLFxuICAgICAgICAgICAgXCJmb3JrSGFzaFwiOiBudWxsXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIFwibmFtZVwiOiBcInNoYW5naGFpXCIsXG4gICAgICAgICAgICBcImJsb2NrXCI6IG51bGwsXG4gICAgICAgICAgICBcImZvcmtIYXNoXCI6IG51bGxcbiAgICAgICAgfVxuICAgIF0sXG4gICAgXCJib290c3RyYXBOb2Rlc1wiOiBbXSxcbiAgICBcImRuc05ldHdvcmtzXCI6IFtcbiAgICAgICAgXCJlbnJ0cmVlOi8vQUtBM0FNNkxQQllFVURNVk5VM0JTVlFKNUFENDVZN1lQT0hKTEVGNlcyNlFPRTRWVFVEUEVAYWxsLmdvZXJsaS5ldGhkaXNjby5uZXRcIlxuICAgIF1cbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1nb2VybGkuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/chains/goerli.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/chains/mainnet.js":
/*!*************************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/chains/mainnet.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    \"name\": \"mainnet\",\n    \"chainId\": 1,\n    \"networkId\": 1,\n    \"defaultHardfork\": \"merge\",\n    \"consensus\": {\n        \"type\": \"pow\",\n        \"algorithm\": \"ethash\",\n        \"ethash\": {}\n    },\n    \"comment\": \"The Ethereum main chain\",\n    \"url\": \"https://ethstats.net/\",\n    \"genesis\": {\n        \"gasLimit\": 5000,\n        \"difficulty\": 17179869184,\n        \"nonce\": \"0x0000000000000042\",\n        \"extraData\": \"0x11bbe8db4e347b4e8c937c1c8370e4b5ed33adb3db69cbdb7a38e1e50b1b82fa\"\n    },\n    \"hardforks\": [\n        {\n            \"name\": \"chainstart\",\n            \"block\": 0,\n            \"forkHash\": \"0xfc64ec04\"\n        },\n        {\n            \"name\": \"homestead\",\n            \"block\": 1150000,\n            \"forkHash\": \"0x97c2c34c\"\n        },\n        {\n            \"name\": \"dao\",\n            \"block\": 1920000,\n            \"forkHash\": \"0x91d1f948\"\n        },\n        {\n            \"name\": \"tangerineWhistle\",\n            \"block\": 2463000,\n            \"forkHash\": \"0x7a64da13\"\n        },\n        {\n            \"name\": \"spuriousDragon\",\n            \"block\": 2675000,\n            \"forkHash\": \"0x3edd5b10\"\n        },\n        {\n            \"name\": \"byzantium\",\n            \"block\": 4370000,\n            \"forkHash\": \"0xa00bc324\"\n        },\n        {\n            \"name\": \"constantinople\",\n            \"block\": 7280000,\n            \"forkHash\": \"0x668db0af\"\n        },\n        {\n            \"name\": \"petersburg\",\n            \"block\": 7280000,\n            \"forkHash\": \"0x668db0af\"\n        },\n        {\n            \"name\": \"istanbul\",\n            \"block\": 9069000,\n            \"forkHash\": \"0x879d6e30\"\n        },\n        {\n            \"name\": \"muirGlacier\",\n            \"block\": 9200000,\n            \"forkHash\": \"0xe029e991\"\n        },\n        {\n            \"name\": \"berlin\",\n            \"block\": 12244000,\n            \"forkHash\": \"0x0eb440f6\"\n        },\n        {\n            \"name\": \"london\",\n            \"block\": 12965000,\n            \"forkHash\": \"0xb715077d\"\n        },\n        {\n            \"name\": \"arrowGlacier\",\n            \"block\": 13773000,\n            \"forkHash\": \"0x20c327fc\"\n        },\n        {\n            \"name\": \"grayGlacier\",\n            \"block\": 15050000,\n            \"forkHash\": \"0xf0afd0e3\"\n        },\n        {\n            \"//_comment\": \"The forkHash will remain same as mergeForkIdTransition is post merge, terminal block: https://etherscan.io/block/15537393\",\n            \"name\": \"merge\",\n            \"ttd\": \"58750000000000000000000\",\n            \"block\": 15537394,\n            \"forkHash\": \"0xf0afd0e3\"\n        },\n        {\n            \"name\": \"mergeForkIdTransition\",\n            \"block\": null,\n            \"forkHash\": null\n        },\n        {\n            \"name\": \"shanghai\",\n            \"block\": null,\n            \"forkHash\": null\n        }\n    ],\n    \"bootstrapNodes\": [],\n    \"dnsNetworks\": [\n        \"enrtree://AKA3AM6LPBYEUDMVNU3BSVQJ5AD45Y7YPOHJLEF6W26QOE4VTUDPE@all.mainnet.ethdisco.net\"\n    ]\n}); //# sourceMappingURL=mainnet.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vY2hhaW5zL21haW5uZXQuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGlFQUFlO0lBQ1gsUUFBUTtJQUNSLFdBQVc7SUFDWCxhQUFhO0lBQ2IsbUJBQW1CO0lBQ25CLGFBQWE7UUFDVCxRQUFRO1FBQ1IsYUFBYTtRQUNiLFVBQVUsQ0FBQztJQUNmO0lBQ0EsV0FBVztJQUNYLE9BQU87SUFDUCxXQUFXO1FBQ1AsWUFBWTtRQUNaLGNBQWM7UUFDZCxTQUFTO1FBQ1QsYUFBYTtJQUNqQjtJQUNBLGFBQWE7UUFDVDtZQUNJLFFBQVE7WUFDUixTQUFTO1lBQ1QsWUFBWTtRQUNoQjtRQUNBO1lBQ0ksUUFBUTtZQUNSLFNBQVM7WUFDVCxZQUFZO1FBQ2hCO1FBQ0E7WUFDSSxRQUFRO1lBQ1IsU0FBUztZQUNULFlBQVk7UUFDaEI7UUFDQTtZQUNJLFFBQVE7WUFDUixTQUFTO1lBQ1QsWUFBWTtRQUNoQjtRQUNBO1lBQ0ksUUFBUTtZQUNSLFNBQVM7WUFDVCxZQUFZO1FBQ2hCO1FBQ0E7WUFDSSxRQUFRO1lBQ1IsU0FBUztZQUNULFlBQVk7UUFDaEI7UUFDQTtZQUNJLFFBQVE7WUFDUixTQUFTO1lBQ1QsWUFBWTtRQUNoQjtRQUNBO1lBQ0ksUUFBUTtZQUNSLFNBQVM7WUFDVCxZQUFZO1FBQ2hCO1FBQ0E7WUFDSSxRQUFRO1lBQ1IsU0FBUztZQUNULFlBQVk7UUFDaEI7UUFDQTtZQUNJLFFBQVE7WUFDUixTQUFTO1lBQ1QsWUFBWTtRQUNoQjtRQUNBO1lBQ0ksUUFBUTtZQUNSLFNBQVM7WUFDVCxZQUFZO1FBQ2hCO1FBQ0E7WUFDSSxRQUFRO1lBQ1IsU0FBUztZQUNULFlBQVk7UUFDaEI7UUFDQTtZQUNJLFFBQVE7WUFDUixTQUFTO1lBQ1QsWUFBWTtRQUNoQjtRQUNBO1lBQ0ksUUFBUTtZQUNSLFNBQVM7WUFDVCxZQUFZO1FBQ2hCO1FBQ0E7WUFDSSxjQUFjO1lBQ2QsUUFBUTtZQUNSLE9BQU87WUFDUCxTQUFTO1lBQ1QsWUFBWTtRQUNoQjtRQUNBO1lBQ0ksUUFBUTtZQUNSLFNBQVM7WUFDVCxZQUFZO1FBQ2hCO1FBQ0E7WUFDSSxRQUFRO1lBQ1IsU0FBUztZQUNULFlBQVk7UUFDaEI7S0FDSDtJQUNELGtCQUFrQixFQUFFO0lBQ3BCLGVBQWU7UUFDWDtLQUNIO0FBQ0wsQ0FBQyxFQUFDLENBQ0YsbUNBQW1DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vY2hhaW5zL21haW5uZXQuanM/NmRiNyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCB7XG4gICAgXCJuYW1lXCI6IFwibWFpbm5ldFwiLFxuICAgIFwiY2hhaW5JZFwiOiAxLFxuICAgIFwibmV0d29ya0lkXCI6IDEsXG4gICAgXCJkZWZhdWx0SGFyZGZvcmtcIjogXCJtZXJnZVwiLFxuICAgIFwiY29uc2Vuc3VzXCI6IHtcbiAgICAgICAgXCJ0eXBlXCI6IFwicG93XCIsXG4gICAgICAgIFwiYWxnb3JpdGhtXCI6IFwiZXRoYXNoXCIsXG4gICAgICAgIFwiZXRoYXNoXCI6IHt9XG4gICAgfSxcbiAgICBcImNvbW1lbnRcIjogXCJUaGUgRXRoZXJldW0gbWFpbiBjaGFpblwiLFxuICAgIFwidXJsXCI6IFwiaHR0cHM6Ly9ldGhzdGF0cy5uZXQvXCIsXG4gICAgXCJnZW5lc2lzXCI6IHtcbiAgICAgICAgXCJnYXNMaW1pdFwiOiA1MDAwLFxuICAgICAgICBcImRpZmZpY3VsdHlcIjogMTcxNzk4NjkxODQsXG4gICAgICAgIFwibm9uY2VcIjogXCIweDAwMDAwMDAwMDAwMDAwNDJcIixcbiAgICAgICAgXCJleHRyYURhdGFcIjogXCIweDExYmJlOGRiNGUzNDdiNGU4YzkzN2MxYzgzNzBlNGI1ZWQzM2FkYjNkYjY5Y2JkYjdhMzhlMWU1MGIxYjgyZmFcIlxuICAgIH0sXG4gICAgXCJoYXJkZm9ya3NcIjogW1xuICAgICAgICB7XG4gICAgICAgICAgICBcIm5hbWVcIjogXCJjaGFpbnN0YXJ0XCIsXG4gICAgICAgICAgICBcImJsb2NrXCI6IDAsXG4gICAgICAgICAgICBcImZvcmtIYXNoXCI6IFwiMHhmYzY0ZWMwNFwiXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIFwibmFtZVwiOiBcImhvbWVzdGVhZFwiLFxuICAgICAgICAgICAgXCJibG9ja1wiOiAxMTUwMDAwLFxuICAgICAgICAgICAgXCJmb3JrSGFzaFwiOiBcIjB4OTdjMmMzNGNcIlxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBcIm5hbWVcIjogXCJkYW9cIixcbiAgICAgICAgICAgIFwiYmxvY2tcIjogMTkyMDAwMCxcbiAgICAgICAgICAgIFwiZm9ya0hhc2hcIjogXCIweDkxZDFmOTQ4XCJcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgXCJuYW1lXCI6IFwidGFuZ2VyaW5lV2hpc3RsZVwiLFxuICAgICAgICAgICAgXCJibG9ja1wiOiAyNDYzMDAwLFxuICAgICAgICAgICAgXCJmb3JrSGFzaFwiOiBcIjB4N2E2NGRhMTNcIlxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBcIm5hbWVcIjogXCJzcHVyaW91c0RyYWdvblwiLFxuICAgICAgICAgICAgXCJibG9ja1wiOiAyNjc1MDAwLFxuICAgICAgICAgICAgXCJmb3JrSGFzaFwiOiBcIjB4M2VkZDViMTBcIlxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBcIm5hbWVcIjogXCJieXphbnRpdW1cIixcbiAgICAgICAgICAgIFwiYmxvY2tcIjogNDM3MDAwMCxcbiAgICAgICAgICAgIFwiZm9ya0hhc2hcIjogXCIweGEwMGJjMzI0XCJcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgXCJuYW1lXCI6IFwiY29uc3RhbnRpbm9wbGVcIixcbiAgICAgICAgICAgIFwiYmxvY2tcIjogNzI4MDAwMCxcbiAgICAgICAgICAgIFwiZm9ya0hhc2hcIjogXCIweDY2OGRiMGFmXCJcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgXCJuYW1lXCI6IFwicGV0ZXJzYnVyZ1wiLFxuICAgICAgICAgICAgXCJibG9ja1wiOiA3MjgwMDAwLFxuICAgICAgICAgICAgXCJmb3JrSGFzaFwiOiBcIjB4NjY4ZGIwYWZcIlxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBcIm5hbWVcIjogXCJpc3RhbmJ1bFwiLFxuICAgICAgICAgICAgXCJibG9ja1wiOiA5MDY5MDAwLFxuICAgICAgICAgICAgXCJmb3JrSGFzaFwiOiBcIjB4ODc5ZDZlMzBcIlxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBcIm5hbWVcIjogXCJtdWlyR2xhY2llclwiLFxuICAgICAgICAgICAgXCJibG9ja1wiOiA5MjAwMDAwLFxuICAgICAgICAgICAgXCJmb3JrSGFzaFwiOiBcIjB4ZTAyOWU5OTFcIlxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBcIm5hbWVcIjogXCJiZXJsaW5cIixcbiAgICAgICAgICAgIFwiYmxvY2tcIjogMTIyNDQwMDAsXG4gICAgICAgICAgICBcImZvcmtIYXNoXCI6IFwiMHgwZWI0NDBmNlwiXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIFwibmFtZVwiOiBcImxvbmRvblwiLFxuICAgICAgICAgICAgXCJibG9ja1wiOiAxMjk2NTAwMCxcbiAgICAgICAgICAgIFwiZm9ya0hhc2hcIjogXCIweGI3MTUwNzdkXCJcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgXCJuYW1lXCI6IFwiYXJyb3dHbGFjaWVyXCIsXG4gICAgICAgICAgICBcImJsb2NrXCI6IDEzNzczMDAwLFxuICAgICAgICAgICAgXCJmb3JrSGFzaFwiOiBcIjB4MjBjMzI3ZmNcIlxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBcIm5hbWVcIjogXCJncmF5R2xhY2llclwiLFxuICAgICAgICAgICAgXCJibG9ja1wiOiAxNTA1MDAwMCxcbiAgICAgICAgICAgIFwiZm9ya0hhc2hcIjogXCIweGYwYWZkMGUzXCJcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgXCIvL19jb21tZW50XCI6IFwiVGhlIGZvcmtIYXNoIHdpbGwgcmVtYWluIHNhbWUgYXMgbWVyZ2VGb3JrSWRUcmFuc2l0aW9uIGlzIHBvc3QgbWVyZ2UsIHRlcm1pbmFsIGJsb2NrOiBodHRwczovL2V0aGVyc2Nhbi5pby9ibG9jay8xNTUzNzM5M1wiLFxuICAgICAgICAgICAgXCJuYW1lXCI6IFwibWVyZ2VcIixcbiAgICAgICAgICAgIFwidHRkXCI6IFwiNTg3NTAwMDAwMDAwMDAwMDAwMDAwMDBcIixcbiAgICAgICAgICAgIFwiYmxvY2tcIjogMTU1MzczOTQsXG4gICAgICAgICAgICBcImZvcmtIYXNoXCI6IFwiMHhmMGFmZDBlM1wiXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIFwibmFtZVwiOiBcIm1lcmdlRm9ya0lkVHJhbnNpdGlvblwiLFxuICAgICAgICAgICAgXCJibG9ja1wiOiBudWxsLFxuICAgICAgICAgICAgXCJmb3JrSGFzaFwiOiBudWxsXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIFwibmFtZVwiOiBcInNoYW5naGFpXCIsXG4gICAgICAgICAgICBcImJsb2NrXCI6IG51bGwsXG4gICAgICAgICAgICBcImZvcmtIYXNoXCI6IG51bGxcbiAgICAgICAgfVxuICAgIF0sXG4gICAgXCJib290c3RyYXBOb2Rlc1wiOiBbXSxcbiAgICBcImRuc05ldHdvcmtzXCI6IFtcbiAgICAgICAgXCJlbnJ0cmVlOi8vQUtBM0FNNkxQQllFVURNVk5VM0JTVlFKNUFENDVZN1lQT0hKTEVGNlcyNlFPRTRWVFVEUEVAYWxsLm1haW5uZXQuZXRoZGlzY28ubmV0XCJcbiAgICBdXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bWFpbm5ldC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/chains/mainnet.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/chains/sepolia.js":
/*!*************************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/chains/sepolia.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    \"name\": \"sepolia\",\n    \"chainId\": 11155111,\n    \"networkId\": 11155111,\n    \"defaultHardfork\": \"merge\",\n    \"consensus\": {\n        \"type\": \"pow\",\n        \"algorithm\": \"ethash\",\n        \"ethash\": {}\n    },\n    \"comment\": \"PoW test network to replace Ropsten\",\n    \"url\": \"https://github.com/ethereum/go-ethereum/pull/23730\",\n    \"genesis\": {\n        \"timestamp\": \"0x6159af19\",\n        \"gasLimit\": 30000000,\n        \"difficulty\": 131072,\n        \"nonce\": \"0x0000000000000000\",\n        \"extraData\": \"0x5365706f6c69612c20417468656e732c204174746963612c2047726565636521\"\n    },\n    \"hardforks\": [\n        {\n            \"name\": \"chainstart\",\n            \"block\": 0,\n            \"forkHash\": \"0xfe3366e7\"\n        },\n        {\n            \"name\": \"homestead\",\n            \"block\": 0,\n            \"forkHash\": \"0xfe3366e7\"\n        },\n        {\n            \"name\": \"tangerineWhistle\",\n            \"block\": 0,\n            \"forkHash\": \"0xfe3366e7\"\n        },\n        {\n            \"name\": \"spuriousDragon\",\n            \"block\": 0,\n            \"forkHash\": \"0xfe3366e7\"\n        },\n        {\n            \"name\": \"byzantium\",\n            \"block\": 0,\n            \"forkHash\": \"0xfe3366e7\"\n        },\n        {\n            \"name\": \"constantinople\",\n            \"block\": 0,\n            \"forkHash\": \"0xfe3366e7\"\n        },\n        {\n            \"name\": \"petersburg\",\n            \"block\": 0,\n            \"forkHash\": \"0xfe3366e7\"\n        },\n        {\n            \"name\": \"istanbul\",\n            \"block\": 0,\n            \"forkHash\": \"0xfe3366e7\"\n        },\n        {\n            \"name\": \"muirGlacier\",\n            \"block\": 0,\n            \"forkHash\": \"0xfe3366e7\"\n        },\n        {\n            \"name\": \"berlin\",\n            \"block\": 0,\n            \"forkHash\": \"0xfe3366e7\"\n        },\n        {\n            \"name\": \"london\",\n            \"block\": 0,\n            \"forkHash\": \"0xfe3366e7\"\n        },\n        {\n            \"//_comment\": \"The forkHash will remain same as mergeForkIdTransition is post merge, terminal block: https://sepolia.etherscan.io/block/1450408\",\n            \"name\": \"merge\",\n            \"ttd\": \"17000000000000000\",\n            \"block\": 1450409,\n            \"forkHash\": \"0xfe3366e7\"\n        },\n        {\n            \"name\": \"mergeForkIdTransition\",\n            \"block\": 1735371,\n            \"forkHash\": \"0xb96cbd13\"\n        },\n        {\n            \"name\": \"shanghai\",\n            \"block\": null,\n            \"timestamp\": \"1677557088\",\n            \"forkHash\": \"0xf7f9bc08\"\n        }\n    ],\n    \"bootstrapNodes\": [],\n    \"dnsNetworks\": [\n        \"enrtree://AKA3AM6LPBYEUDMVNU3BSVQJ5AD45Y7YPOHJLEF6W26QOE4VTUDPE@all.sepolia.ethdisco.net\"\n    ]\n}); //# sourceMappingURL=sepolia.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vY2hhaW5zL3NlcG9saWEuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGlFQUFlO0lBQ1gsUUFBUTtJQUNSLFdBQVc7SUFDWCxhQUFhO0lBQ2IsbUJBQW1CO0lBQ25CLGFBQWE7UUFDVCxRQUFRO1FBQ1IsYUFBYTtRQUNiLFVBQVUsQ0FBQztJQUNmO0lBQ0EsV0FBVztJQUNYLE9BQU87SUFDUCxXQUFXO1FBQ1AsYUFBYTtRQUNiLFlBQVk7UUFDWixjQUFjO1FBQ2QsU0FBUztRQUNULGFBQWE7SUFDakI7SUFDQSxhQUFhO1FBQ1Q7WUFDSSxRQUFRO1lBQ1IsU0FBUztZQUNULFlBQVk7UUFDaEI7UUFDQTtZQUNJLFFBQVE7WUFDUixTQUFTO1lBQ1QsWUFBWTtRQUNoQjtRQUNBO1lBQ0ksUUFBUTtZQUNSLFNBQVM7WUFDVCxZQUFZO1FBQ2hCO1FBQ0E7WUFDSSxRQUFRO1lBQ1IsU0FBUztZQUNULFlBQVk7UUFDaEI7UUFDQTtZQUNJLFFBQVE7WUFDUixTQUFTO1lBQ1QsWUFBWTtRQUNoQjtRQUNBO1lBQ0ksUUFBUTtZQUNSLFNBQVM7WUFDVCxZQUFZO1FBQ2hCO1FBQ0E7WUFDSSxRQUFRO1lBQ1IsU0FBUztZQUNULFlBQVk7UUFDaEI7UUFDQTtZQUNJLFFBQVE7WUFDUixTQUFTO1lBQ1QsWUFBWTtRQUNoQjtRQUNBO1lBQ0ksUUFBUTtZQUNSLFNBQVM7WUFDVCxZQUFZO1FBQ2hCO1FBQ0E7WUFDSSxRQUFRO1lBQ1IsU0FBUztZQUNULFlBQVk7UUFDaEI7UUFDQTtZQUNJLFFBQVE7WUFDUixTQUFTO1lBQ1QsWUFBWTtRQUNoQjtRQUNBO1lBQ0ksY0FBYztZQUNkLFFBQVE7WUFDUixPQUFPO1lBQ1AsU0FBUztZQUNULFlBQVk7UUFDaEI7UUFDQTtZQUNJLFFBQVE7WUFDUixTQUFTO1lBQ1QsWUFBWTtRQUNoQjtRQUNBO1lBQ0ksUUFBUTtZQUNSLFNBQVM7WUFDVCxhQUFhO1lBQ2IsWUFBWTtRQUNoQjtLQUNIO0lBQ0Qsa0JBQWtCLEVBQUU7SUFDcEIsZUFBZTtRQUNYO0tBQ0g7QUFDTCxDQUFDLEVBQUMsQ0FDRixtQ0FBbUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mcm9udGVuZC8uL25vZGVfbW9kdWxlcy93ZWIzLWV0aC1hY2NvdW50cy9saWIvZXNtL2NvbW1vbi9jaGFpbnMvc2Vwb2xpYS5qcz84MjY1Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IHtcbiAgICBcIm5hbWVcIjogXCJzZXBvbGlhXCIsXG4gICAgXCJjaGFpbklkXCI6IDExMTU1MTExLFxuICAgIFwibmV0d29ya0lkXCI6IDExMTU1MTExLFxuICAgIFwiZGVmYXVsdEhhcmRmb3JrXCI6IFwibWVyZ2VcIixcbiAgICBcImNvbnNlbnN1c1wiOiB7XG4gICAgICAgIFwidHlwZVwiOiBcInBvd1wiLFxuICAgICAgICBcImFsZ29yaXRobVwiOiBcImV0aGFzaFwiLFxuICAgICAgICBcImV0aGFzaFwiOiB7fVxuICAgIH0sXG4gICAgXCJjb21tZW50XCI6IFwiUG9XIHRlc3QgbmV0d29yayB0byByZXBsYWNlIFJvcHN0ZW5cIixcbiAgICBcInVybFwiOiBcImh0dHBzOi8vZ2l0aHViLmNvbS9ldGhlcmV1bS9nby1ldGhlcmV1bS9wdWxsLzIzNzMwXCIsXG4gICAgXCJnZW5lc2lzXCI6IHtcbiAgICAgICAgXCJ0aW1lc3RhbXBcIjogXCIweDYxNTlhZjE5XCIsXG4gICAgICAgIFwiZ2FzTGltaXRcIjogMzAwMDAwMDAsXG4gICAgICAgIFwiZGlmZmljdWx0eVwiOiAxMzEwNzIsXG4gICAgICAgIFwibm9uY2VcIjogXCIweDAwMDAwMDAwMDAwMDAwMDBcIixcbiAgICAgICAgXCJleHRyYURhdGFcIjogXCIweDUzNjU3MDZmNmM2OTYxMmMyMDQxNzQ2ODY1NmU3MzJjMjA0MTc0NzQ2OTYzNjEyYzIwNDc3MjY1NjU2MzY1MjFcIlxuICAgIH0sXG4gICAgXCJoYXJkZm9ya3NcIjogW1xuICAgICAgICB7XG4gICAgICAgICAgICBcIm5hbWVcIjogXCJjaGFpbnN0YXJ0XCIsXG4gICAgICAgICAgICBcImJsb2NrXCI6IDAsXG4gICAgICAgICAgICBcImZvcmtIYXNoXCI6IFwiMHhmZTMzNjZlN1wiXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIFwibmFtZVwiOiBcImhvbWVzdGVhZFwiLFxuICAgICAgICAgICAgXCJibG9ja1wiOiAwLFxuICAgICAgICAgICAgXCJmb3JrSGFzaFwiOiBcIjB4ZmUzMzY2ZTdcIlxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBcIm5hbWVcIjogXCJ0YW5nZXJpbmVXaGlzdGxlXCIsXG4gICAgICAgICAgICBcImJsb2NrXCI6IDAsXG4gICAgICAgICAgICBcImZvcmtIYXNoXCI6IFwiMHhmZTMzNjZlN1wiXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIFwibmFtZVwiOiBcInNwdXJpb3VzRHJhZ29uXCIsXG4gICAgICAgICAgICBcImJsb2NrXCI6IDAsXG4gICAgICAgICAgICBcImZvcmtIYXNoXCI6IFwiMHhmZTMzNjZlN1wiXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIFwibmFtZVwiOiBcImJ5emFudGl1bVwiLFxuICAgICAgICAgICAgXCJibG9ja1wiOiAwLFxuICAgICAgICAgICAgXCJmb3JrSGFzaFwiOiBcIjB4ZmUzMzY2ZTdcIlxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBcIm5hbWVcIjogXCJjb25zdGFudGlub3BsZVwiLFxuICAgICAgICAgICAgXCJibG9ja1wiOiAwLFxuICAgICAgICAgICAgXCJmb3JrSGFzaFwiOiBcIjB4ZmUzMzY2ZTdcIlxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBcIm5hbWVcIjogXCJwZXRlcnNidXJnXCIsXG4gICAgICAgICAgICBcImJsb2NrXCI6IDAsXG4gICAgICAgICAgICBcImZvcmtIYXNoXCI6IFwiMHhmZTMzNjZlN1wiXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIFwibmFtZVwiOiBcImlzdGFuYnVsXCIsXG4gICAgICAgICAgICBcImJsb2NrXCI6IDAsXG4gICAgICAgICAgICBcImZvcmtIYXNoXCI6IFwiMHhmZTMzNjZlN1wiXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIFwibmFtZVwiOiBcIm11aXJHbGFjaWVyXCIsXG4gICAgICAgICAgICBcImJsb2NrXCI6IDAsXG4gICAgICAgICAgICBcImZvcmtIYXNoXCI6IFwiMHhmZTMzNjZlN1wiXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIFwibmFtZVwiOiBcImJlcmxpblwiLFxuICAgICAgICAgICAgXCJibG9ja1wiOiAwLFxuICAgICAgICAgICAgXCJmb3JrSGFzaFwiOiBcIjB4ZmUzMzY2ZTdcIlxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBcIm5hbWVcIjogXCJsb25kb25cIixcbiAgICAgICAgICAgIFwiYmxvY2tcIjogMCxcbiAgICAgICAgICAgIFwiZm9ya0hhc2hcIjogXCIweGZlMzM2NmU3XCJcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgXCIvL19jb21tZW50XCI6IFwiVGhlIGZvcmtIYXNoIHdpbGwgcmVtYWluIHNhbWUgYXMgbWVyZ2VGb3JrSWRUcmFuc2l0aW9uIGlzIHBvc3QgbWVyZ2UsIHRlcm1pbmFsIGJsb2NrOiBodHRwczovL3NlcG9saWEuZXRoZXJzY2FuLmlvL2Jsb2NrLzE0NTA0MDhcIixcbiAgICAgICAgICAgIFwibmFtZVwiOiBcIm1lcmdlXCIsXG4gICAgICAgICAgICBcInR0ZFwiOiBcIjE3MDAwMDAwMDAwMDAwMDAwXCIsXG4gICAgICAgICAgICBcImJsb2NrXCI6IDE0NTA0MDksXG4gICAgICAgICAgICBcImZvcmtIYXNoXCI6IFwiMHhmZTMzNjZlN1wiXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIFwibmFtZVwiOiBcIm1lcmdlRm9ya0lkVHJhbnNpdGlvblwiLFxuICAgICAgICAgICAgXCJibG9ja1wiOiAxNzM1MzcxLFxuICAgICAgICAgICAgXCJmb3JrSGFzaFwiOiBcIjB4Yjk2Y2JkMTNcIlxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBcIm5hbWVcIjogXCJzaGFuZ2hhaVwiLFxuICAgICAgICAgICAgXCJibG9ja1wiOiBudWxsLFxuICAgICAgICAgICAgXCJ0aW1lc3RhbXBcIjogXCIxNjc3NTU3MDg4XCIsXG4gICAgICAgICAgICBcImZvcmtIYXNoXCI6IFwiMHhmN2Y5YmMwOFwiXG4gICAgICAgIH1cbiAgICBdLFxuICAgIFwiYm9vdHN0cmFwTm9kZXNcIjogW10sXG4gICAgXCJkbnNOZXR3b3Jrc1wiOiBbXG4gICAgICAgIFwiZW5ydHJlZTovL0FLQTNBTTZMUEJZRVVETVZOVTNCU1ZRSjVBRDQ1WTdZUE9ISkxFRjZXMjZRT0U0VlRVRFBFQGFsbC5zZXBvbGlhLmV0aGRpc2NvLm5ldFwiXG4gICAgXVxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNlcG9saWEuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/chains/sepolia.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/common.js":
/*!*****************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/common.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Common: () => (/* binding */ Common)\n/* harmony export */ });\n/* harmony import */ var crc_32__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! crc-32 */ \"(ssr)/./node_modules/crc-32/crc32.js\");\n/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-utils */ \"(ssr)/./node_modules/web3-utils/lib/esm/index.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./types.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/types.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/utils.js\");\n/* harmony import */ var _chains_goerli_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./chains/goerli.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/chains/goerli.js\");\n/* harmony import */ var _chains_mainnet_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./chains/mainnet.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/chains/mainnet.js\");\n/* harmony import */ var _chains_sepolia_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./chains/sepolia.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/chains/sepolia.js\");\n/* harmony import */ var _eips_index_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./eips/index.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/index.js\");\n/* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./enums.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/enums.js\");\n/* harmony import */ var _hardforks_index_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./hardforks/index.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/index.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ \n\n\n\n\n\n\n\n\n\nconst { buf: crc32Uint8Array } = crc_32__WEBPACK_IMPORTED_MODULE_0__;\n/**\n * Common class to access chain and hardfork parameters and to provide\n * a unified and shared view on the network and hardfork state.\n *\n * Use the {@link Common.custom} static constructor for creating simple\n * custom chain {@link Common} objects (more complete custom chain setups\n * can be created via the main constructor and the {@link CommonOpts.customChains} parameter).\n */ class Common extends web3_utils__WEBPACK_IMPORTED_MODULE_1__.EventEmitter {\n    constructor(opts){\n        var _a, _b;\n        super();\n        this._eips = [];\n        this._customChains = (_a = opts.customChains) !== null && _a !== void 0 ? _a : [];\n        this._chainParams = this.setChain(opts.chain);\n        this.DEFAULT_HARDFORK = (_b = this._chainParams.defaultHardfork) !== null && _b !== void 0 ? _b : _enums_js__WEBPACK_IMPORTED_MODULE_8__.Hardfork.Merge;\n        // Assign hardfork changes in the sequence of the applied hardforks\n        this.HARDFORK_CHANGES = this.hardforks().map((hf)=>[\n                hf.name,\n                _hardforks_index_js__WEBPACK_IMPORTED_MODULE_9__.hardforks[hf.name]\n            ]);\n        this._hardfork = this.DEFAULT_HARDFORK;\n        if (opts.hardfork !== undefined) {\n            this.setHardfork(opts.hardfork);\n        }\n        if (opts.eips) {\n            this.setEIPs(opts.eips);\n        }\n    }\n    /**\n     * Creates a {@link Common} object for a custom chain, based on a standard one.\n     *\n     * It uses all the {@link Chain} parameters from the {@link baseChain} option except the ones overridden\n     * in a provided {@link chainParamsOrName} dictionary. Some usage example:\n     *\n     * ```javascript\n     * Common.custom({chainId: 123})\n     * ```\n     *\n     * There are also selected supported custom chains which can be initialized by using one of the\n     * {@link CustomChains} for {@link chainParamsOrName}, e.g.:\n     *\n     * ```javascript\n     * Common.custom(CustomChains.MaticMumbai)\n     * ```\n     *\n     * Note that these supported custom chains only provide some base parameters (usually the chain and\n     * network ID and a name) and can only be used for selected use cases (e.g. sending a tx with\n     * the `web3-utils/tx` library to a Layer-2 chain).\n     *\n     * @param chainParamsOrName Custom parameter dict (`name` will default to `custom-chain`) or string with name of a supported custom chain\n     * @param opts Custom chain options to set the {@link CustomCommonOpts.baseChain}, selected {@link CustomCommonOpts.hardfork} and others\n     */ static custom(chainParamsOrName, opts = {}) {\n        var _a;\n        const baseChain = (_a = opts.baseChain) !== null && _a !== void 0 ? _a : \"mainnet\";\n        const standardChainParams = Object.assign({}, Common._getChainParams(baseChain));\n        standardChainParams.name = \"custom-chain\";\n        if (typeof chainParamsOrName !== \"string\") {\n            return new Common(Object.assign({\n                chain: Object.assign(Object.assign({}, standardChainParams), chainParamsOrName)\n            }, opts));\n        }\n        if (chainParamsOrName === _enums_js__WEBPACK_IMPORTED_MODULE_8__.CustomChain.PolygonMainnet) {\n            return Common.custom({\n                name: _enums_js__WEBPACK_IMPORTED_MODULE_8__.CustomChain.PolygonMainnet,\n                chainId: 137,\n                networkId: 137\n            }, opts);\n        }\n        if (chainParamsOrName === _enums_js__WEBPACK_IMPORTED_MODULE_8__.CustomChain.PolygonMumbai) {\n            return Common.custom({\n                name: _enums_js__WEBPACK_IMPORTED_MODULE_8__.CustomChain.PolygonMumbai,\n                chainId: 80001,\n                networkId: 80001\n            }, opts);\n        }\n        if (chainParamsOrName === _enums_js__WEBPACK_IMPORTED_MODULE_8__.CustomChain.ArbitrumRinkebyTestnet) {\n            return Common.custom({\n                name: _enums_js__WEBPACK_IMPORTED_MODULE_8__.CustomChain.ArbitrumRinkebyTestnet,\n                chainId: 421611,\n                networkId: 421611\n            }, opts);\n        }\n        if (chainParamsOrName === _enums_js__WEBPACK_IMPORTED_MODULE_8__.CustomChain.ArbitrumOne) {\n            return Common.custom({\n                name: _enums_js__WEBPACK_IMPORTED_MODULE_8__.CustomChain.ArbitrumOne,\n                chainId: 42161,\n                networkId: 42161\n            }, opts);\n        }\n        if (chainParamsOrName === _enums_js__WEBPACK_IMPORTED_MODULE_8__.CustomChain.xDaiChain) {\n            return Common.custom({\n                name: _enums_js__WEBPACK_IMPORTED_MODULE_8__.CustomChain.xDaiChain,\n                chainId: 100,\n                networkId: 100\n            }, opts);\n        }\n        if (chainParamsOrName === _enums_js__WEBPACK_IMPORTED_MODULE_8__.CustomChain.OptimisticKovan) {\n            return Common.custom({\n                name: _enums_js__WEBPACK_IMPORTED_MODULE_8__.CustomChain.OptimisticKovan,\n                chainId: 69,\n                networkId: 69\n            }, Object.assign({\n                hardfork: _enums_js__WEBPACK_IMPORTED_MODULE_8__.Hardfork.Berlin\n            }, opts));\n        }\n        if (chainParamsOrName === _enums_js__WEBPACK_IMPORTED_MODULE_8__.CustomChain.OptimisticEthereum) {\n            return Common.custom({\n                name: _enums_js__WEBPACK_IMPORTED_MODULE_8__.CustomChain.OptimisticEthereum,\n                chainId: 10,\n                networkId: 10\n            }, Object.assign({\n                hardfork: _enums_js__WEBPACK_IMPORTED_MODULE_8__.Hardfork.Berlin\n            }, opts));\n        }\n        // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n        throw new Error(`Custom chain ${chainParamsOrName} not supported`);\n    }\n    /**\n     * Static method to load and set common from a geth genesis json\n     * @param genesisJson json of geth configuration\n     * @param { chain, eips, genesisHash, hardfork, mergeForkIdPostMerge } to further configure the common instance\n     * @returns Common\n     */ static fromGethGenesis(genesisJson, { chain, eips, genesisHash, hardfork, mergeForkIdPostMerge }) {\n        var _a;\n        const genesisParams = (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.parseGethGenesis)(genesisJson, chain, mergeForkIdPostMerge);\n        const common = new Common({\n            chain: (_a = genesisParams.name) !== null && _a !== void 0 ? _a : \"custom\",\n            customChains: [\n                genesisParams\n            ],\n            eips,\n            hardfork: hardfork !== null && hardfork !== void 0 ? hardfork : genesisParams.hardfork\n        });\n        if (genesisHash !== undefined) {\n            common.setForkHashes(genesisHash);\n        }\n        return common;\n    }\n    /**\n     * Static method to determine if a {@link chainId} is supported as a standard chain\n     * @param chainId bigint id (`1`) of a standard chain\n     * @returns boolean\n     */ static isSupportedChainId(chainId) {\n        const initializedChains = this._getInitializedChains();\n        return Boolean(initializedChains.names[chainId.toString()]);\n    }\n    static _getChainParams(_chain, customChains) {\n        let chain = _chain;\n        const initializedChains = this._getInitializedChains(customChains);\n        if (typeof chain === \"number\" || typeof chain === \"bigint\") {\n            chain = chain.toString();\n            if (initializedChains.names[chain]) {\n                const name = initializedChains.names[chain];\n                return initializedChains[name];\n            }\n            throw new Error(`Chain with ID ${chain} not supported`);\n        }\n        if (initializedChains[chain] !== undefined) {\n            return initializedChains[chain];\n        }\n        throw new Error(`Chain with name ${chain} not supported`);\n    }\n    /**\n     * Sets the chain\n     * @param chain String ('mainnet') or Number (1) chain representation.\n     *              Or, a Dictionary of chain parameters for a private network.\n     * @returns The dictionary with parameters set as chain\n     */ setChain(chain) {\n        if (typeof chain === \"number\" || typeof chain === \"bigint\" || typeof chain === \"string\") {\n            this._chainParams = Common._getChainParams(chain, this._customChains);\n        } else if (typeof chain === \"object\") {\n            if (this._customChains.length > 0) {\n                throw new Error(\"Chain must be a string, number, or bigint when initialized with customChains passed in\");\n            }\n            const required = [\n                \"networkId\",\n                \"genesis\",\n                \"hardforks\",\n                \"bootstrapNodes\"\n            ];\n            for (const param of required){\n                if (!(param in chain)) {\n                    throw new Error(`Missing required chain parameter: ${param}`);\n                }\n            }\n            this._chainParams = chain;\n        } else {\n            throw new Error(\"Wrong input format\");\n        }\n        for (const hf of this.hardforks()){\n            if (hf.block === undefined) {\n                throw new Error(`Hardfork cannot have undefined block number`);\n            }\n        }\n        return this._chainParams;\n    }\n    /**\n     * Sets the hardfork to get params for\n     * @param hardfork String identifier (e.g. 'byzantium') or {@link Hardfork} enum\n     */ setHardfork(hardfork) {\n        let existing = false;\n        for (const hfChanges of this.HARDFORK_CHANGES){\n            if (hfChanges[0] === hardfork) {\n                if (this._hardfork !== hardfork) {\n                    this._hardfork = hardfork;\n                    this.emit(\"hardforkChanged\", hardfork);\n                }\n                existing = true;\n            }\n        }\n        if (!existing) {\n            throw new Error(`Hardfork with name ${hardfork} not supported`);\n        }\n    }\n    /**\n     * Returns the hardfork based on the block number or an optional\n     * total difficulty (Merge HF) provided.\n     *\n     * An optional TD takes precedence in case the corresponding HF block\n     * is set to `null` or otherwise needs to match (if not an error\n     * will be thrown).\n     *\n     * @param blockNumber\n     * @param td : total difficulty of the parent block (for block hf) OR of the chain latest (for chain hf)\n     * @param timestamp: timestamp in seconds at which block was/is to be minted\n     * @returns The name of the HF\n     */ getHardforkByBlockNumber(_blockNumber, _td, _timestamp) {\n        const blockNumber = (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.toType)(_blockNumber, _types_js__WEBPACK_IMPORTED_MODULE_2__.TypeOutput.BigInt);\n        const td = (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.toType)(_td, _types_js__WEBPACK_IMPORTED_MODULE_2__.TypeOutput.BigInt);\n        const timestamp = (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.toType)(_timestamp, _types_js__WEBPACK_IMPORTED_MODULE_2__.TypeOutput.Number);\n        // Filter out hardforks with no block number, no ttd or no timestamp (i.e. unapplied hardforks)\n        const hfs = this.hardforks().filter((hf)=>// eslint-disable-next-line no-null/no-null\n            hf.block !== null || // eslint-disable-next-line no-null/no-null\n            hf.ttd !== null && hf.ttd !== undefined || hf.timestamp !== undefined);\n        // eslint-disable-next-line no-null/no-null\n        const mergeIndex = hfs.findIndex((hf)=>hf.ttd !== null && hf.ttd !== undefined);\n        const doubleTTDHF = hfs.slice(mergeIndex + 1)// eslint-disable-next-line no-null/no-null\n        .findIndex((hf)=>hf.ttd !== null && hf.ttd !== undefined);\n        if (doubleTTDHF >= 0) {\n            throw Error(`More than one merge hardforks found with ttd specified`);\n        }\n        // Find the first hardfork that has a block number greater than `blockNumber`\n        // (skips the merge hardfork since it cannot have a block number specified).\n        // If timestamp is not provided, it also skips timestamps hardforks to continue\n        // discovering/checking number hardforks.\n        let hfIndex = hfs.findIndex((hf)=>// eslint-disable-next-line no-null/no-null\n            hf.block !== null && hf.block > blockNumber || timestamp !== undefined && Number(hf.timestamp) > timestamp);\n        if (hfIndex === -1) {\n            // all hardforks apply, set hfIndex to the last one as that's the candidate\n            hfIndex = hfs.length;\n        } else if (hfIndex === 0) {\n            // cannot have a case where a block number is before all applied hardforks\n            // since the chain has to start with a hardfork\n            throw Error(\"Must have at least one hardfork at block 0\");\n        }\n        // If timestamp is not provided, we need to rollback to the last hf with block or ttd\n        if (timestamp === undefined) {\n            const stepBack = hfs.slice(0, hfIndex).reverse()// eslint-disable-next-line no-null/no-null\n            .findIndex((hf)=>hf.block !== null || hf.ttd !== undefined);\n            hfIndex -= stepBack;\n        }\n        // Move hfIndex one back to arrive at candidate hardfork\n        hfIndex -= 1;\n        // If the timestamp was not provided, we could have skipped timestamp hardforks to look for number\n        // hardforks. so it will now be needed to rollback\n        // eslint-disable-next-line no-null/no-null\n        if (hfs[hfIndex].block === null && hfs[hfIndex].timestamp === undefined) {\n            // We're on the merge hardfork.  Let's check the TTD\n            // eslint-disable-next-line no-null/no-null\n            if (td === undefined || td === null || BigInt(hfs[hfIndex].ttd) > td) {\n                // Merge ttd greater than current td so we're on hardfork before merge\n                hfIndex -= 1;\n            }\n        // eslint-disable-next-line no-null/no-null\n        } else if (mergeIndex >= 0 && td !== undefined && td !== null) {\n            if (hfIndex >= mergeIndex && BigInt(hfs[mergeIndex].ttd) > td) {\n                throw Error(\"Maximum HF determined by total difficulty is lower than the block number HF\");\n            } else if (hfIndex < mergeIndex && BigInt(hfs[mergeIndex].ttd) <= td) {\n                throw Error(\"HF determined by block number is lower than the minimum total difficulty HF\");\n            }\n        }\n        const hfStartIndex = hfIndex;\n        // Move the hfIndex to the end of the hardforks that might be scheduled on the same block/timestamp\n        // This won't anyway be the case with Merge hfs\n        for(; hfIndex < hfs.length - 1; hfIndex += 1){\n            // break out if hfIndex + 1 is not scheduled at hfIndex\n            if (hfs[hfIndex].block !== hfs[hfIndex + 1].block || hfs[hfIndex].timestamp !== hfs[hfIndex + 1].timestamp) {\n                break;\n            }\n        }\n        if (timestamp) {\n            const minTimeStamp = hfs.slice(0, hfStartIndex).reduce((acc, hf)=>{\n                var _a;\n                return Math.max(Number((_a = hf.timestamp) !== null && _a !== void 0 ? _a : \"0\"), acc);\n            }, 0);\n            if (minTimeStamp > timestamp) {\n                throw Error(`Maximum HF determined by timestamp is lower than the block number/ttd HF`);\n            }\n            const maxTimeStamp = hfs.slice(hfIndex + 1).reduce((acc, hf)=>{\n                var _a;\n                return Math.min(Number((_a = hf.timestamp) !== null && _a !== void 0 ? _a : timestamp), acc);\n            }, timestamp);\n            if (maxTimeStamp < timestamp) {\n                throw Error(`Maximum HF determined by block number/ttd is lower than timestamp HF`);\n            }\n        }\n        const hardfork = hfs[hfIndex];\n        return hardfork.name;\n    }\n    /**\n     * Sets a new hardfork based on the block number or an optional\n     * total difficulty (Merge HF) provided.\n     *\n     * An optional TD takes precedence in case the corresponding HF block\n     * is set to `null` or otherwise needs to match (if not an error\n     * will be thrown).\n     *\n     * @param blockNumber\n     * @param td\n     * @param timestamp\n     * @returns The name of the HF set\n     */ setHardforkByBlockNumber(blockNumber, td, timestamp) {\n        const hardfork = this.getHardforkByBlockNumber(blockNumber, td, timestamp);\n        this.setHardfork(hardfork);\n        return hardfork;\n    }\n    /**\n     * Internal helper function, returns the params for the given hardfork for the chain set\n     * @param hardfork Hardfork name\n     * @returns Dictionary with hardfork params or null if hardfork not on chain\n     */ // eslint-disable-next-line @typescript-eslint/ban-types\n    _getHardfork(hardfork) {\n        const hfs = this.hardforks();\n        for (const hf of hfs){\n            if (hf.name === hardfork) return hf;\n        }\n        // eslint-disable-next-line no-null/no-null\n        return null;\n    }\n    /**\n     * Sets the active EIPs\n     * @param eips\n     */ setEIPs(eips = []) {\n        for (const eip of eips){\n            if (!(eip in _eips_index_js__WEBPACK_IMPORTED_MODULE_7__.EIPs)) {\n                throw new Error(`${eip} not supported`);\n            }\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-argument\n            const minHF = this.gteHardfork(_eips_index_js__WEBPACK_IMPORTED_MODULE_7__.EIPs[eip].minimumHardfork);\n            if (!minHF) {\n                throw new Error(// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n                `${eip} cannot be activated on hardfork ${this.hardfork()}, minimumHardfork: ${minHF}`);\n            }\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            if (_eips_index_js__WEBPACK_IMPORTED_MODULE_7__.EIPs[eip].requiredEIPs !== undefined) {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                for (const elem of _eips_index_js__WEBPACK_IMPORTED_MODULE_7__.EIPs[eip].requiredEIPs){\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n                    if (!(eips.includes(elem) || this.isActivatedEIP(elem))) {\n                        throw new Error(// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n                        `${eip} requires EIP ${elem}, but is not included in the EIP list`);\n                    }\n                }\n            }\n        }\n        this._eips = eips;\n    }\n    /**\n     * Returns a parameter for the current chain setup\n     *\n     * If the parameter is present in an EIP, the EIP always takes precedence.\n     * Otherwise the parameter if taken from the latest applied HF with\n     * a change on the respective parameter.\n     *\n     * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n     * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n     * @returns The value requested or `BigInt(0)` if not found\n     */ param(topic, name) {\n        // TODO: consider the case that different active EIPs\n        // can change the same parameter\n        let value;\n        for (const eip of this._eips){\n            value = this.paramByEIP(topic, name, eip);\n            if (value !== undefined) return value;\n        }\n        return this.paramByHardfork(topic, name, this._hardfork);\n    }\n    /**\n     * Returns the parameter corresponding to a hardfork\n     * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n     * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n     * @param hardfork Hardfork name\n     * @returns The value requested or `BigInt(0)` if not found\n     */ paramByHardfork(topic, name, hardfork) {\n        // eslint-disable-next-line no-null/no-null\n        let value = null;\n        for (const hfChanges of this.HARDFORK_CHANGES){\n            // EIP-referencing HF file (e.g. berlin.json)\n            if (\"eips\" in hfChanges[1]) {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-assignment\n                const hfEIPs = hfChanges[1].eips;\n                for (const eip of hfEIPs){\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n                    const valueEIP = this.paramByEIP(topic, name, eip);\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                    value = typeof valueEIP === \"bigint\" ? valueEIP : value;\n                }\n            // Parameter-inlining HF file (e.g. istanbul.json)\n            } else {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                if (hfChanges[1][topic] === undefined) {\n                    throw new Error(`Topic ${topic} not defined`);\n                }\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                if (hfChanges[1][topic][name] !== undefined) {\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-assignment\n                    value = hfChanges[1][topic][name].v;\n                }\n            }\n            if (hfChanges[0] === hardfork) break;\n        }\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        return BigInt(value !== null && value !== void 0 ? value : 0);\n    }\n    /**\n     * Returns a parameter corresponding to an EIP\n     * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n     * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n     * @param eip Number of the EIP\n     * @returns The value requested or `undefined` if not found\n     */ // eslint-disable-next-line class-methods-use-this\n    paramByEIP(topic, name, eip) {\n        if (!(eip in _eips_index_js__WEBPACK_IMPORTED_MODULE_7__.EIPs)) {\n            throw new Error(`${eip} not supported`);\n        }\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        const eipParams = _eips_index_js__WEBPACK_IMPORTED_MODULE_7__.EIPs[eip];\n        if (!(topic in eipParams)) {\n            throw new Error(`Topic ${topic} not defined`);\n        }\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        if (eipParams[topic][name] === undefined) {\n            return undefined;\n        }\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-assignment\n        const value = eipParams[topic][name].v;\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        return BigInt(value);\n    }\n    /**\n     * Returns a parameter for the hardfork active on block number or\n     * optional provided total difficulty (Merge HF)\n     * @param topic Parameter topic\n     * @param name Parameter name\n     * @param blockNumber Block number\n     * @param td Total difficulty\n     *    * @returns The value requested or `BigInt(0)` if not found\n     */ paramByBlock(topic, name, blockNumber, td, timestamp) {\n        const hardfork = this.getHardforkByBlockNumber(blockNumber, td, timestamp);\n        return this.paramByHardfork(topic, name, hardfork);\n    }\n    /**\n     * Checks if an EIP is activated by either being included in the EIPs\n     * manually passed in with the {@link CommonOpts.eips} or in a\n     * hardfork currently being active\n     *\n     * Note: this method only works for EIPs being supported\n     * by the {@link CommonOpts.eips} constructor option\n     * @param eip\n     */ isActivatedEIP(eip) {\n        if (this.eips().includes(eip)) {\n            return true;\n        }\n        for (const hfChanges of this.HARDFORK_CHANGES){\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            const hf = hfChanges[1];\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-argument\n            if (this.gteHardfork(hf.name) && \"eips\" in hf) {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                if (hf.eips.includes(eip)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    /**\n     * Checks if set or provided hardfork is active on block number\n     * @param hardfork Hardfork name or null (for HF set)\n     * @param blockNumber\n     * @returns True if HF is active on block number\n     */ hardforkIsActiveOnBlock(// eslint-disable-next-line @typescript-eslint/ban-types\n    _hardfork, _blockNumber) {\n        const blockNumber = (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.toType)(_blockNumber, _types_js__WEBPACK_IMPORTED_MODULE_2__.TypeOutput.BigInt);\n        const hardfork = _hardfork !== null && _hardfork !== void 0 ? _hardfork : this._hardfork;\n        const hfBlock = this.hardforkBlock(hardfork);\n        if (typeof hfBlock === \"bigint\" && hfBlock !== BigInt(0) && blockNumber >= hfBlock) {\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Alias to hardforkIsActiveOnBlock when hardfork is set\n     * @param blockNumber\n     * @returns True if HF is active on block number\n     */ activeOnBlock(blockNumber) {\n        // eslint-disable-next-line no-null/no-null\n        return this.hardforkIsActiveOnBlock(null, blockNumber);\n    }\n    /**\n     * Sequence based check if given or set HF1 is greater than or equal HF2\n     * @param hardfork1 Hardfork name or null (if set)\n     * @param hardfork2 Hardfork name\n     * @param opts Hardfork options\n     * @returns True if HF1 gte HF2\n     */ hardforkGteHardfork(// eslint-disable-next-line @typescript-eslint/ban-types\n    _hardfork1, hardfork2) {\n        const hardfork1 = _hardfork1 !== null && _hardfork1 !== void 0 ? _hardfork1 : this._hardfork;\n        const hardforks = this.hardforks();\n        let posHf1 = -1;\n        let posHf2 = -1;\n        let index = 0;\n        for (const hf of hardforks){\n            if (hf.name === hardfork1) posHf1 = index;\n            if (hf.name === hardfork2) posHf2 = index;\n            index += 1;\n        }\n        return posHf1 >= posHf2 && posHf2 !== -1;\n    }\n    /**\n     * Alias to hardforkGteHardfork when hardfork is set\n     * @param hardfork Hardfork name\n     * @returns True if hardfork set is greater than hardfork provided\n     */ gteHardfork(hardfork) {\n        // eslint-disable-next-line no-null/no-null\n        return this.hardforkGteHardfork(null, hardfork);\n    }\n    /**\n     * Returns the hardfork change block for hardfork provided or set\n     * @param hardfork Hardfork name, optional if HF set\n     * @returns Block number or null if unscheduled\n     */ // eslint-disable-next-line @typescript-eslint/ban-types\n    hardforkBlock(_hardfork) {\n        var _a;\n        const hardfork = _hardfork !== null && _hardfork !== void 0 ? _hardfork : this._hardfork;\n        const block = (_a = this._getHardfork(hardfork)) === null || _a === void 0 ? void 0 : _a.block;\n        // eslint-disable-next-line no-null/no-null\n        if (block === undefined || block === null) {\n            // eslint-disable-next-line no-null/no-null\n            return null;\n        }\n        return BigInt(block);\n    }\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    hardforkTimestamp(_hardfork) {\n        var _a;\n        const hardfork = _hardfork !== null && _hardfork !== void 0 ? _hardfork : this._hardfork;\n        const timestamp = (_a = this._getHardfork(hardfork)) === null || _a === void 0 ? void 0 : _a.timestamp;\n        // eslint-disable-next-line no-null/no-null\n        if (timestamp === undefined || timestamp === null) {\n            // eslint-disable-next-line no-null/no-null\n            return null;\n        }\n        return BigInt(timestamp);\n    }\n    /**\n     * Returns the hardfork change block for eip\n     * @param eip EIP number\n     * @returns Block number or null if unscheduled\n     */ // eslint-disable-next-line @typescript-eslint/ban-types\n    eipBlock(eip) {\n        for (const hfChanges of this.HARDFORK_CHANGES){\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            const hf = hfChanges[1];\n            if (\"eips\" in hf) {\n                // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions, @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\n                if (hf.eips.includes(eip)) {\n                    return this.hardforkBlock(typeof hfChanges[0] === \"number\" ? String(hfChanges[0]) : hfChanges[0]);\n                }\n            }\n        }\n        // eslint-disable-next-line no-null/no-null\n        return null;\n    }\n    /**\n     * Returns the hardfork change total difficulty (Merge HF) for hardfork provided or set\n     * @param hardfork Hardfork name, optional if HF set\n     * @returns Total difficulty or null if no set\n     */ // eslint-disable-next-line @typescript-eslint/ban-types\n    hardforkTTD(_hardfork) {\n        var _a;\n        const hardfork = _hardfork !== null && _hardfork !== void 0 ? _hardfork : this._hardfork;\n        const ttd = (_a = this._getHardfork(hardfork)) === null || _a === void 0 ? void 0 : _a.ttd;\n        // eslint-disable-next-line no-null/no-null\n        if (ttd === undefined || ttd === null) {\n            // eslint-disable-next-line no-null/no-null\n            return null;\n        }\n        return BigInt(ttd);\n    }\n    /**\n     * True if block number provided is the hardfork (given or set) change block\n     * @param blockNumber Number of the block to check\n     * @param hardfork Hardfork name, optional if HF set\n     * @returns True if blockNumber is HF block\n     * @deprecated\n     */ isHardforkBlock(_blockNumber, _hardfork) {\n        const blockNumber = (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.toType)(_blockNumber, _types_js__WEBPACK_IMPORTED_MODULE_2__.TypeOutput.BigInt);\n        const hardfork = _hardfork !== null && _hardfork !== void 0 ? _hardfork : this._hardfork;\n        const block = this.hardforkBlock(hardfork);\n        return typeof block === \"bigint\" && block !== BigInt(0) ? block === blockNumber : false;\n    }\n    /**\n     * Returns the change block for the next hardfork after the hardfork provided or set\n     * @param hardfork Hardfork name, optional if HF set\n     * @returns Block timestamp, number or null if not available\n     */ // eslint-disable-next-line @typescript-eslint/ban-types\n    nextHardforkBlockOrTimestamp(_hardfork) {\n        var _a, _b;\n        const hardfork = _hardfork !== null && _hardfork !== void 0 ? _hardfork : this._hardfork;\n        const hfs = this.hardforks();\n        let hfIndex = hfs.findIndex((hf)=>hf.name === hardfork);\n        // If the current hardfork is merge, go one behind as merge hf is not part of these\n        // calcs even if the merge hf block is set\n        if (hardfork === _enums_js__WEBPACK_IMPORTED_MODULE_8__.Hardfork.Merge) {\n            hfIndex -= 1;\n        }\n        // Hardfork not found\n        if (hfIndex < 0) {\n            // eslint-disable-next-line no-null/no-null\n            return null;\n        }\n        let currHfTimeOrBlock = (_a = hfs[hfIndex].timestamp) !== null && _a !== void 0 ? _a : hfs[hfIndex].block;\n        currHfTimeOrBlock = // eslint-disable-next-line no-null/no-null\n        currHfTimeOrBlock !== null && currHfTimeOrBlock !== undefined ? Number(currHfTimeOrBlock) : null;\n        const nextHf = hfs.slice(hfIndex + 1).find((hf)=>{\n            var _a;\n            let hfTimeOrBlock = (_a = hf.timestamp) !== null && _a !== void 0 ? _a : hf.block;\n            hfTimeOrBlock = // eslint-disable-next-line no-null/no-null\n            hfTimeOrBlock !== null && hfTimeOrBlock !== undefined ? Number(hfTimeOrBlock) : null;\n            return hf.name !== _enums_js__WEBPACK_IMPORTED_MODULE_8__.Hardfork.Merge && // eslint-disable-next-line no-null/no-null\n            hfTimeOrBlock !== null && hfTimeOrBlock !== undefined && hfTimeOrBlock !== currHfTimeOrBlock;\n        });\n        // If no next hf found with valid block or timestamp return null\n        if (nextHf === undefined) {\n            // eslint-disable-next-line no-null/no-null\n            return null;\n        }\n        const nextHfBlock = (_b = nextHf.timestamp) !== null && _b !== void 0 ? _b : nextHf.block;\n        // eslint-disable-next-line no-null/no-null\n        if (nextHfBlock === null || nextHfBlock === undefined) {\n            // eslint-disable-next-line no-null/no-null\n            return null;\n        }\n        return BigInt(nextHfBlock);\n    }\n    /**\n     * Returns the change block for the next hardfork after the hardfork provided or set\n     * @param hardfork Hardfork name, optional if HF set\n     * @returns Block number or null if not available\n     * @deprecated\n     */ // eslint-disable-next-line @typescript-eslint/ban-types\n    nextHardforkBlock(_hardfork) {\n        const hardfork = _hardfork !== null && _hardfork !== void 0 ? _hardfork : this._hardfork;\n        let hfBlock = this.hardforkBlock(hardfork);\n        // If this is a merge hardfork with block not set, then we fallback to previous hardfork\n        // to find the nextHardforkBlock\n        // eslint-disable-next-line no-null/no-null\n        if (hfBlock === null && hardfork === _enums_js__WEBPACK_IMPORTED_MODULE_8__.Hardfork.Merge) {\n            const hfs = this.hardforks();\n            // eslint-disable-next-line no-null/no-null\n            const mergeIndex = hfs.findIndex((hf)=>hf.ttd !== null && hf.ttd !== undefined);\n            if (mergeIndex < 0) {\n                throw Error(`Merge hardfork should have been found`);\n            }\n            hfBlock = this.hardforkBlock(hfs[mergeIndex - 1].name);\n        }\n        // eslint-disable-next-line no-null/no-null\n        if (hfBlock === null) {\n            // eslint-disable-next-line no-null/no-null\n            return null;\n        }\n        // Next fork block number or null if none available\n        // Logic: if accumulator is still null and on the first occurrence of\n        // a block greater than the current hfBlock set the accumulator,\n        // pass on the accumulator as the final result from this time on\n        // eslint-disable-next-line no-null/no-null, @typescript-eslint/ban-types\n        const nextHfBlock = this.hardforks().reduce((acc, hf)=>{\n            // We need to ignore the merge block in our next hardfork calc\n            const block = BigInt(// eslint-disable-next-line no-null/no-null\n            hf.block === null || hf.ttd !== undefined && hf.ttd !== null ? 0 : hf.block);\n            // Typescript can't seem to follow that the hfBlock is not null at this point\n            // eslint-disable-next-line no-null/no-null\n            return block > hfBlock && acc === null ? block : acc;\n        // eslint-disable-next-line no-null/no-null\n        }, null);\n        return nextHfBlock;\n    }\n    /**\n     * True if block number provided is the hardfork change block following the hardfork given or set\n     * @param blockNumber Number of the block to check\n     * @param hardfork Hardfork name, optional if HF set\n     * @returns True if blockNumber is HF block\n     * @deprecated\n     */ isNextHardforkBlock(_blockNumber, _hardfork) {\n        const blockNumber = (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.toType)(_blockNumber, _types_js__WEBPACK_IMPORTED_MODULE_2__.TypeOutput.BigInt);\n        const hardfork = _hardfork !== null && _hardfork !== void 0 ? _hardfork : this._hardfork;\n        // eslint-disable-next-line deprecation/deprecation\n        const nextHardforkBlock = this.nextHardforkBlock(hardfork);\n        // eslint-disable-next-line no-null/no-null\n        return nextHardforkBlock === null ? false : nextHardforkBlock === blockNumber;\n    }\n    /**\n     * Internal helper function to calculate a fork hash\n     * @param hardfork Hardfork name\n     * @param genesisHash Genesis block hash of the chain\n     * @returns Fork hash as hex string\n     */ _calcForkHash(hardfork, genesisHash) {\n        let hfUint8Array = new Uint8Array();\n        let prevBlockOrTime = 0;\n        for (const hf of this.hardforks()){\n            const { block, timestamp, name } = hf;\n            // Timestamp to be used for timestamp based hfs even if we may bundle\n            // block number with them retrospectively\n            let blockOrTime = timestamp !== null && timestamp !== void 0 ? timestamp : block;\n            // eslint-disable-next-line no-null/no-null\n            blockOrTime = blockOrTime !== null ? Number(blockOrTime) : null;\n            // Skip for chainstart (0), not applied HFs (null) and\n            // when already applied on same blockOrTime HFs\n            // and on the merge since forkhash doesn't change on merge hf\n            if (typeof blockOrTime === \"number\" && blockOrTime !== 0 && blockOrTime !== prevBlockOrTime && name !== _enums_js__WEBPACK_IMPORTED_MODULE_8__.Hardfork.Merge) {\n                const hfBlockUint8Array = (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.hexToBytes)(blockOrTime.toString(16).padStart(16, \"0\"));\n                hfUint8Array = (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.uint8ArrayConcat)(hfUint8Array, hfBlockUint8Array);\n                prevBlockOrTime = blockOrTime;\n            }\n            if (hf.name === hardfork) break;\n        }\n        const inputUint8Array = (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.uint8ArrayConcat)(genesisHash, hfUint8Array);\n        // CRC32 delivers result as signed (negative) 32-bit integer,\n        // convert to hex string\n        // eslint-disable-next-line no-bitwise\n        const forkhash = (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.bytesToHex)((0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.intToUint8Array)(crc32Uint8Array(inputUint8Array) >>> 0));\n        return forkhash;\n    }\n    /**\n     * Returns an eth/64 compliant fork hash (EIP-2124)\n     * @param hardfork Hardfork name, optional if HF set\n     * @param genesisHash Genesis block hash of the chain, optional if already defined and not needed to be calculated\n     */ forkHash(_hardfork, genesisHash) {\n        const hardfork = _hardfork !== null && _hardfork !== void 0 ? _hardfork : this._hardfork;\n        const data = this._getHardfork(hardfork);\n        if (// eslint-disable-next-line no-null/no-null\n        data === null || // eslint-disable-next-line no-null/no-null\n        (data === null || data === void 0 ? void 0 : data.block) === null && (data === null || data === void 0 ? void 0 : data.timestamp) === undefined && (data === null || data === void 0 ? void 0 : data.ttd) === undefined) {\n            const msg = \"No fork hash calculation possible for future hardfork\";\n            throw new Error(msg);\n        }\n        // eslint-disable-next-line no-null/no-null\n        if ((data === null || data === void 0 ? void 0 : data.forkHash) !== null && (data === null || data === void 0 ? void 0 : data.forkHash) !== undefined) {\n            return data.forkHash;\n        }\n        if (!genesisHash) throw new Error(\"genesisHash required for forkHash calculation\");\n        return this._calcForkHash(hardfork, genesisHash);\n    }\n    /**\n     *\n     * @param forkHash Fork hash as a hex string\n     * @returns Array with hardfork data (name, block, forkHash)\n     */ // eslint-disable-next-line @typescript-eslint/ban-types\n    hardforkForForkHash(forkHash) {\n        const resArray = this.hardforks().filter((hf)=>hf.forkHash === forkHash);\n        // eslint-disable-next-line no-null/no-null\n        return resArray.length >= 1 ? resArray[resArray.length - 1] : null;\n    }\n    /**\n     * Sets any missing forkHashes on the passed-in {@link Common} instance\n     * @param common The {@link Common} to set the forkHashes for\n     * @param genesisHash The genesis block hash\n     */ setForkHashes(genesisHash) {\n        var _a;\n        for (const hf of this.hardforks()){\n            const blockOrTime = (_a = hf.timestamp) !== null && _a !== void 0 ? _a : hf.block;\n            if (// eslint-disable-next-line no-null/no-null\n            (hf.forkHash === null || hf.forkHash === undefined) && // eslint-disable-next-line no-null/no-null\n            (blockOrTime !== null && blockOrTime !== undefined || typeof hf.ttd !== \"undefined\")) {\n                hf.forkHash = this.forkHash(hf.name, genesisHash);\n            }\n        }\n    }\n    /**\n     * Returns the Genesis parameters of the current chain\n     * @returns Genesis dictionary\n     */ genesis() {\n        return this._chainParams.genesis;\n    }\n    /**\n     * Returns the hardforks for current chain\n     * @returns {Array} Array with arrays of hardforks\n     */ hardforks() {\n        return this._chainParams.hardforks;\n    }\n    /**\n     * Returns bootstrap nodes for the current chain\n     * @returns {Dictionary} Dict with bootstrap nodes\n     */ bootstrapNodes() {\n        return this._chainParams.bootstrapNodes;\n    }\n    /**\n     * Returns DNS networks for the current chain\n     * @returns {String[]} Array of DNS ENR urls\n     */ dnsNetworks() {\n        return this._chainParams.dnsNetworks;\n    }\n    /**\n     * Returns the hardfork set\n     * @returns Hardfork name\n     */ hardfork() {\n        return this._hardfork;\n    }\n    /**\n     * Returns the Id of current chain\n     * @returns chain Id\n     */ chainId() {\n        return BigInt(this._chainParams.chainId);\n    }\n    /**\n     * Returns the name of current chain\n     * @returns chain name (lower case)\n     */ chainName() {\n        return this._chainParams.name;\n    }\n    /**\n     * Returns the Id of current network\n     * @returns network Id\n     */ networkId() {\n        return BigInt(this._chainParams.networkId);\n    }\n    /**\n     * Returns the active EIPs\n     * @returns List of EIPs\n     */ eips() {\n        return this._eips;\n    }\n    /**\n     * Returns the consensus type of the network\n     * Possible values: \"pow\"|\"poa\"|\"pos\"\n     *\n     * Note: This value can update along a Hardfork.\n     */ consensusType() {\n        const hardfork = this.hardfork();\n        let value;\n        for (const hfChanges of this.HARDFORK_CHANGES){\n            if (\"consensus\" in hfChanges[1]) {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-assignment\n                value = hfChanges[1].consensus.type;\n            }\n            if (hfChanges[0] === hardfork) break;\n        }\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return value !== null && value !== void 0 ? value : this._chainParams.consensus.type;\n    }\n    /**\n     * Returns the concrete consensus implementation\n     * algorithm or protocol for the network\n     * e.g. \"ethash\" for \"pow\" consensus type,\n     * \"clique\" for \"poa\" consensus type or\n     * \"casper\" for \"pos\" consensus type.\n     *\n     * Note: This value can update along a Hardfork.\n     */ consensusAlgorithm() {\n        const hardfork = this.hardfork();\n        let value;\n        for (const hfChanges of this.HARDFORK_CHANGES){\n            if (\"consensus\" in hfChanges[1]) {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-assignment\n                value = hfChanges[1].consensus.algorithm;\n            }\n            if (hfChanges[0] === hardfork) break;\n        }\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return value !== null && value !== void 0 ? value : this._chainParams.consensus.algorithm;\n    }\n    /**\n     * Returns a dictionary with consensus configuration\n     * parameters based on the consensus algorithm\n     *\n     * Expected returns (parameters must be present in\n     * the respective chain json files):\n     *\n     * ethash: empty object\n     * clique: period, epoch\n     * casper: empty object\n     *\n     * Note: This value can update along a Hardfork.\n     */ consensusConfig() {\n        var _a;\n        const hardfork = this.hardfork();\n        let value;\n        for (const hfChanges of this.HARDFORK_CHANGES){\n            if (\"consensus\" in hfChanges[1]) {\n                // The config parameter is named after the respective consensus algorithm\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-assignment\n                value = hfChanges[1].consensus[hfChanges[1].consensus.algorithm];\n            }\n            if (hfChanges[0] === hardfork) break;\n        }\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return (_a = value !== null && value !== void 0 ? value : this._chainParams.consensus[this.consensusAlgorithm()]) !== null && _a !== void 0 ? _a : {};\n    }\n    /**\n     * Returns a deep copy of this {@link Common} instance.\n     */ copy() {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument, @typescript-eslint/no-unsafe-assignment\n        const copy = Object.assign(Object.create(Object.getPrototypeOf(this)), this);\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\n        copy.removeAllListeners();\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return copy;\n    }\n    static _getInitializedChains(customChains) {\n        const names = {};\n        for (const [name, id] of Object.entries(_enums_js__WEBPACK_IMPORTED_MODULE_8__.Chain)){\n            names[id] = name.toLowerCase();\n        }\n        const chains = {\n            mainnet: _chains_mainnet_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"],\n            goerli: _chains_goerli_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"],\n            sepolia: _chains_sepolia_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"]\n        };\n        if (customChains) {\n            for (const chain of customChains){\n                const { name } = chain;\n                names[chain.chainId.toString()] = name;\n                chains[name] = chain;\n            }\n        }\n        chains.names = names;\n        return chains;\n    }\n} //# sourceMappingURL=common.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/common.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/1153.js":
/*!********************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/eips/1153.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    \"name\": \"EIP-1153\",\n    \"number\": 1153,\n    \"comment\": \"Transient Storage\",\n    \"url\": \"https://eips.ethereum.org/EIPS/eip-1153\",\n    \"status\": \"Review\",\n    \"minimumHardfork\": \"chainstart\",\n    \"requiredEIPs\": [],\n    \"gasConfig\": {},\n    \"gasPrices\": {\n        \"tstore\": {\n            \"v\": 100,\n            \"d\": \"Base fee of the TSTORE opcode\"\n        },\n        \"tload\": {\n            \"v\": 100,\n            \"d\": \"Base fee of the TLOAD opcode\"\n        }\n    },\n    \"vm\": {},\n    \"pow\": {}\n}); //# sourceMappingURL=1153.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vZWlwcy8xMTUzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZTtJQUNYLFFBQVE7SUFDUixVQUFVO0lBQ1YsV0FBVztJQUNYLE9BQU87SUFDUCxVQUFVO0lBQ1YsbUJBQW1CO0lBQ25CLGdCQUFnQixFQUFFO0lBQ2xCLGFBQWEsQ0FBQztJQUNkLGFBQWE7UUFDVCxVQUFVO1lBQ04sS0FBSztZQUNMLEtBQUs7UUFDVDtRQUNBLFNBQVM7WUFDTCxLQUFLO1lBQ0wsS0FBSztRQUNUO0lBQ0o7SUFDQSxNQUFNLENBQUM7SUFDUCxPQUFPLENBQUM7QUFDWixDQUFDLEVBQUMsQ0FDRixnQ0FBZ0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mcm9udGVuZC8uL25vZGVfbW9kdWxlcy93ZWIzLWV0aC1hY2NvdW50cy9saWIvZXNtL2NvbW1vbi9laXBzLzExNTMuanM/NzcwZSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCB7XG4gICAgXCJuYW1lXCI6IFwiRUlQLTExNTNcIixcbiAgICBcIm51bWJlclwiOiAxMTUzLFxuICAgIFwiY29tbWVudFwiOiBcIlRyYW5zaWVudCBTdG9yYWdlXCIsXG4gICAgXCJ1cmxcIjogXCJodHRwczovL2VpcHMuZXRoZXJldW0ub3JnL0VJUFMvZWlwLTExNTNcIixcbiAgICBcInN0YXR1c1wiOiBcIlJldmlld1wiLFxuICAgIFwibWluaW11bUhhcmRmb3JrXCI6IFwiY2hhaW5zdGFydFwiLFxuICAgIFwicmVxdWlyZWRFSVBzXCI6IFtdLFxuICAgIFwiZ2FzQ29uZmlnXCI6IHt9LFxuICAgIFwiZ2FzUHJpY2VzXCI6IHtcbiAgICAgICAgXCJ0c3RvcmVcIjoge1xuICAgICAgICAgICAgXCJ2XCI6IDEwMCxcbiAgICAgICAgICAgIFwiZFwiOiBcIkJhc2UgZmVlIG9mIHRoZSBUU1RPUkUgb3Bjb2RlXCJcbiAgICAgICAgfSxcbiAgICAgICAgXCJ0bG9hZFwiOiB7XG4gICAgICAgICAgICBcInZcIjogMTAwLFxuICAgICAgICAgICAgXCJkXCI6IFwiQmFzZSBmZWUgb2YgdGhlIFRMT0FEIG9wY29kZVwiXG4gICAgICAgIH1cbiAgICB9LFxuICAgIFwidm1cIjoge30sXG4gICAgXCJwb3dcIjoge31cbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD0xMTUzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/1153.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/1559.js":
/*!********************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/eips/1559.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    \"name\": \"EIP-1559\",\n    \"number\": 1559,\n    \"comment\": \"Fee market change for ETH 1.0 chain\",\n    \"url\": \"https://eips.ethereum.org/EIPS/eip-1559\",\n    \"status\": \"Final\",\n    \"minimumHardfork\": \"berlin\",\n    \"requiredEIPs\": [\n        2930\n    ],\n    \"gasConfig\": {\n        \"baseFeeMaxChangeDenominator\": {\n            \"v\": 8,\n            \"d\": \"Maximum base fee change denominator\"\n        },\n        \"elasticityMultiplier\": {\n            \"v\": 2,\n            \"d\": \"Maximum block gas target elasticity\"\n        },\n        \"initialBaseFee\": {\n            \"v\": 1000000000,\n            \"d\": \"Initial base fee on first EIP1559 block\"\n        }\n    },\n    \"gasPrices\": {},\n    \"vm\": {},\n    \"pow\": {}\n}); //# sourceMappingURL=1559.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vZWlwcy8xNTU5LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZTtJQUNYLFFBQVE7SUFDUixVQUFVO0lBQ1YsV0FBVztJQUNYLE9BQU87SUFDUCxVQUFVO0lBQ1YsbUJBQW1CO0lBQ25CLGdCQUFnQjtRQUFDO0tBQUs7SUFDdEIsYUFBYTtRQUNULCtCQUErQjtZQUMzQixLQUFLO1lBQ0wsS0FBSztRQUNUO1FBQ0Esd0JBQXdCO1lBQ3BCLEtBQUs7WUFDTCxLQUFLO1FBQ1Q7UUFDQSxrQkFBa0I7WUFDZCxLQUFLO1lBQ0wsS0FBSztRQUNUO0lBQ0o7SUFDQSxhQUFhLENBQUM7SUFDZCxNQUFNLENBQUM7SUFDUCxPQUFPLENBQUM7QUFDWixDQUFDLEVBQUMsQ0FDRixnQ0FBZ0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mcm9udGVuZC8uL25vZGVfbW9kdWxlcy93ZWIzLWV0aC1hY2NvdW50cy9saWIvZXNtL2NvbW1vbi9laXBzLzE1NTkuanM/M2VhMiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCB7XG4gICAgXCJuYW1lXCI6IFwiRUlQLTE1NTlcIixcbiAgICBcIm51bWJlclwiOiAxNTU5LFxuICAgIFwiY29tbWVudFwiOiBcIkZlZSBtYXJrZXQgY2hhbmdlIGZvciBFVEggMS4wIGNoYWluXCIsXG4gICAgXCJ1cmxcIjogXCJodHRwczovL2VpcHMuZXRoZXJldW0ub3JnL0VJUFMvZWlwLTE1NTlcIixcbiAgICBcInN0YXR1c1wiOiBcIkZpbmFsXCIsXG4gICAgXCJtaW5pbXVtSGFyZGZvcmtcIjogXCJiZXJsaW5cIixcbiAgICBcInJlcXVpcmVkRUlQc1wiOiBbMjkzMF0sXG4gICAgXCJnYXNDb25maWdcIjoge1xuICAgICAgICBcImJhc2VGZWVNYXhDaGFuZ2VEZW5vbWluYXRvclwiOiB7XG4gICAgICAgICAgICBcInZcIjogOCxcbiAgICAgICAgICAgIFwiZFwiOiBcIk1heGltdW0gYmFzZSBmZWUgY2hhbmdlIGRlbm9taW5hdG9yXCJcbiAgICAgICAgfSxcbiAgICAgICAgXCJlbGFzdGljaXR5TXVsdGlwbGllclwiOiB7XG4gICAgICAgICAgICBcInZcIjogMixcbiAgICAgICAgICAgIFwiZFwiOiBcIk1heGltdW0gYmxvY2sgZ2FzIHRhcmdldCBlbGFzdGljaXR5XCJcbiAgICAgICAgfSxcbiAgICAgICAgXCJpbml0aWFsQmFzZUZlZVwiOiB7XG4gICAgICAgICAgICBcInZcIjogMTAwMDAwMDAwMCxcbiAgICAgICAgICAgIFwiZFwiOiBcIkluaXRpYWwgYmFzZSBmZWUgb24gZmlyc3QgRUlQMTU1OSBibG9ja1wiXG4gICAgICAgIH1cbiAgICB9LFxuICAgIFwiZ2FzUHJpY2VzXCI6IHt9LFxuICAgIFwidm1cIjoge30sXG4gICAgXCJwb3dcIjoge31cbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD0xNTU5LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/1559.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/2315.js":
/*!********************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/eips/2315.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    \"name\": \"EIP-2315\",\n    \"number\": 2315,\n    \"comment\": \"Simple subroutines for the EVM\",\n    \"url\": \"https://eips.ethereum.org/EIPS/eip-2315\",\n    \"status\": \"Draft\",\n    \"minimumHardfork\": \"istanbul\",\n    \"gasConfig\": {},\n    \"gasPrices\": {\n        \"beginsub\": {\n            \"v\": 2,\n            \"d\": \"Base fee of the BEGINSUB opcode\"\n        },\n        \"returnsub\": {\n            \"v\": 5,\n            \"d\": \"Base fee of the RETURNSUB opcode\"\n        },\n        \"jumpsub\": {\n            \"v\": 10,\n            \"d\": \"Base fee of the JUMPSUB opcode\"\n        }\n    },\n    \"vm\": {},\n    \"pow\": {}\n}); //# sourceMappingURL=2315.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vZWlwcy8yMzE1LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZTtJQUNYLFFBQVE7SUFDUixVQUFVO0lBQ1YsV0FBVztJQUNYLE9BQU87SUFDUCxVQUFVO0lBQ1YsbUJBQW1CO0lBQ25CLGFBQWEsQ0FBQztJQUNkLGFBQWE7UUFDVCxZQUFZO1lBQ1IsS0FBSztZQUNMLEtBQUs7UUFDVDtRQUNBLGFBQWE7WUFDVCxLQUFLO1lBQ0wsS0FBSztRQUNUO1FBQ0EsV0FBVztZQUNQLEtBQUs7WUFDTCxLQUFLO1FBQ1Q7SUFDSjtJQUNBLE1BQU0sQ0FBQztJQUNQLE9BQU8sQ0FBQztBQUNaLENBQUMsRUFBQyxDQUNGLGdDQUFnQyIsInNvdXJjZXMiOlsid2VicGFjazovL2Zyb250ZW5kLy4vbm9kZV9tb2R1bGVzL3dlYjMtZXRoLWFjY291bnRzL2xpYi9lc20vY29tbW9uL2VpcHMvMjMxNS5qcz9mNWMyIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IHtcbiAgICBcIm5hbWVcIjogXCJFSVAtMjMxNVwiLFxuICAgIFwibnVtYmVyXCI6IDIzMTUsXG4gICAgXCJjb21tZW50XCI6IFwiU2ltcGxlIHN1YnJvdXRpbmVzIGZvciB0aGUgRVZNXCIsXG4gICAgXCJ1cmxcIjogXCJodHRwczovL2VpcHMuZXRoZXJldW0ub3JnL0VJUFMvZWlwLTIzMTVcIixcbiAgICBcInN0YXR1c1wiOiBcIkRyYWZ0XCIsXG4gICAgXCJtaW5pbXVtSGFyZGZvcmtcIjogXCJpc3RhbmJ1bFwiLFxuICAgIFwiZ2FzQ29uZmlnXCI6IHt9LFxuICAgIFwiZ2FzUHJpY2VzXCI6IHtcbiAgICAgICAgXCJiZWdpbnN1YlwiOiB7XG4gICAgICAgICAgICBcInZcIjogMixcbiAgICAgICAgICAgIFwiZFwiOiBcIkJhc2UgZmVlIG9mIHRoZSBCRUdJTlNVQiBvcGNvZGVcIlxuICAgICAgICB9LFxuICAgICAgICBcInJldHVybnN1YlwiOiB7XG4gICAgICAgICAgICBcInZcIjogNSxcbiAgICAgICAgICAgIFwiZFwiOiBcIkJhc2UgZmVlIG9mIHRoZSBSRVRVUk5TVUIgb3Bjb2RlXCJcbiAgICAgICAgfSxcbiAgICAgICAgXCJqdW1wc3ViXCI6IHtcbiAgICAgICAgICAgIFwidlwiOiAxMCxcbiAgICAgICAgICAgIFwiZFwiOiBcIkJhc2UgZmVlIG9mIHRoZSBKVU1QU1VCIG9wY29kZVwiXG4gICAgICAgIH1cbiAgICB9LFxuICAgIFwidm1cIjoge30sXG4gICAgXCJwb3dcIjoge31cbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD0yMzE1LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/2315.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/2537.js":
/*!********************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/eips/2537.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    \"name\": \"EIP-2537\",\n    \"number\": 2537,\n    \"comment\": \"BLS12-381 precompiles\",\n    \"url\": \"https://eips.ethereum.org/EIPS/eip-2537\",\n    \"status\": \"Draft\",\n    \"minimumHardfork\": \"chainstart\",\n    \"gasConfig\": {},\n    \"gasPrices\": {\n        \"Bls12381G1AddGas\": {\n            \"v\": 600,\n            \"d\": \"Gas cost of a single BLS12-381 G1 addition precompile-call\"\n        },\n        \"Bls12381G1MulGas\": {\n            \"v\": 12000,\n            \"d\": \"Gas cost of a single BLS12-381 G1 multiplication precompile-call\"\n        },\n        \"Bls12381G2AddGas\": {\n            \"v\": 4500,\n            \"d\": \"Gas cost of a single BLS12-381 G2 addition precompile-call\"\n        },\n        \"Bls12381G2MulGas\": {\n            \"v\": 55000,\n            \"d\": \"Gas cost of a single BLS12-381 G2 multiplication precompile-call\"\n        },\n        \"Bls12381PairingBaseGas\": {\n            \"v\": 115000,\n            \"d\": \"Base gas cost of BLS12-381 pairing check\"\n        },\n        \"Bls12381PairingPerPairGas\": {\n            \"v\": 23000,\n            \"d\": \"Per-pair gas cost of BLS12-381 pairing check\"\n        },\n        \"Bls12381MapG1Gas\": {\n            \"v\": 5500,\n            \"d\": \"Gas cost of BLS12-381 map field element to G1\"\n        },\n        \"Bls12381MapG2Gas\": {\n            \"v\": 110000,\n            \"d\": \"Gas cost of BLS12-381 map field element to G2\"\n        },\n        \"Bls12381MultiExpGasDiscount\": {\n            \"v\": [\n                [\n                    1,\n                    1200\n                ],\n                [\n                    2,\n                    888\n                ],\n                [\n                    3,\n                    764\n                ],\n                [\n                    4,\n                    641\n                ],\n                [\n                    5,\n                    594\n                ],\n                [\n                    6,\n                    547\n                ],\n                [\n                    7,\n                    500\n                ],\n                [\n                    8,\n                    453\n                ],\n                [\n                    9,\n                    438\n                ],\n                [\n                    10,\n                    423\n                ],\n                [\n                    11,\n                    408\n                ],\n                [\n                    12,\n                    394\n                ],\n                [\n                    13,\n                    379\n                ],\n                [\n                    14,\n                    364\n                ],\n                [\n                    15,\n                    349\n                ],\n                [\n                    16,\n                    334\n                ],\n                [\n                    17,\n                    330\n                ],\n                [\n                    18,\n                    326\n                ],\n                [\n                    19,\n                    322\n                ],\n                [\n                    20,\n                    318\n                ],\n                [\n                    21,\n                    314\n                ],\n                [\n                    22,\n                    310\n                ],\n                [\n                    23,\n                    306\n                ],\n                [\n                    24,\n                    302\n                ],\n                [\n                    25,\n                    298\n                ],\n                [\n                    26,\n                    294\n                ],\n                [\n                    27,\n                    289\n                ],\n                [\n                    28,\n                    285\n                ],\n                [\n                    29,\n                    281\n                ],\n                [\n                    30,\n                    277\n                ],\n                [\n                    31,\n                    273\n                ],\n                [\n                    32,\n                    269\n                ],\n                [\n                    33,\n                    268\n                ],\n                [\n                    34,\n                    266\n                ],\n                [\n                    35,\n                    265\n                ],\n                [\n                    36,\n                    263\n                ],\n                [\n                    37,\n                    262\n                ],\n                [\n                    38,\n                    260\n                ],\n                [\n                    39,\n                    259\n                ],\n                [\n                    40,\n                    257\n                ],\n                [\n                    41,\n                    256\n                ],\n                [\n                    42,\n                    254\n                ],\n                [\n                    43,\n                    253\n                ],\n                [\n                    44,\n                    251\n                ],\n                [\n                    45,\n                    250\n                ],\n                [\n                    46,\n                    248\n                ],\n                [\n                    47,\n                    247\n                ],\n                [\n                    48,\n                    245\n                ],\n                [\n                    49,\n                    244\n                ],\n                [\n                    50,\n                    242\n                ],\n                [\n                    51,\n                    241\n                ],\n                [\n                    52,\n                    239\n                ],\n                [\n                    53,\n                    238\n                ],\n                [\n                    54,\n                    236\n                ],\n                [\n                    55,\n                    235\n                ],\n                [\n                    56,\n                    233\n                ],\n                [\n                    57,\n                    232\n                ],\n                [\n                    58,\n                    231\n                ],\n                [\n                    59,\n                    229\n                ],\n                [\n                    60,\n                    228\n                ],\n                [\n                    61,\n                    226\n                ],\n                [\n                    62,\n                    225\n                ],\n                [\n                    63,\n                    223\n                ],\n                [\n                    64,\n                    222\n                ],\n                [\n                    65,\n                    221\n                ],\n                [\n                    66,\n                    220\n                ],\n                [\n                    67,\n                    219\n                ],\n                [\n                    68,\n                    219\n                ],\n                [\n                    69,\n                    218\n                ],\n                [\n                    70,\n                    217\n                ],\n                [\n                    71,\n                    216\n                ],\n                [\n                    72,\n                    216\n                ],\n                [\n                    73,\n                    215\n                ],\n                [\n                    74,\n                    214\n                ],\n                [\n                    75,\n                    213\n                ],\n                [\n                    76,\n                    213\n                ],\n                [\n                    77,\n                    212\n                ],\n                [\n                    78,\n                    211\n                ],\n                [\n                    79,\n                    211\n                ],\n                [\n                    80,\n                    210\n                ],\n                [\n                    81,\n                    209\n                ],\n                [\n                    82,\n                    208\n                ],\n                [\n                    83,\n                    208\n                ],\n                [\n                    84,\n                    207\n                ],\n                [\n                    85,\n                    206\n                ],\n                [\n                    86,\n                    205\n                ],\n                [\n                    87,\n                    205\n                ],\n                [\n                    88,\n                    204\n                ],\n                [\n                    89,\n                    203\n                ],\n                [\n                    90,\n                    202\n                ],\n                [\n                    91,\n                    202\n                ],\n                [\n                    92,\n                    201\n                ],\n                [\n                    93,\n                    200\n                ],\n                [\n                    94,\n                    199\n                ],\n                [\n                    95,\n                    199\n                ],\n                [\n                    96,\n                    198\n                ],\n                [\n                    97,\n                    197\n                ],\n                [\n                    98,\n                    196\n                ],\n                [\n                    99,\n                    196\n                ],\n                [\n                    100,\n                    195\n                ],\n                [\n                    101,\n                    194\n                ],\n                [\n                    102,\n                    193\n                ],\n                [\n                    103,\n                    193\n                ],\n                [\n                    104,\n                    192\n                ],\n                [\n                    105,\n                    191\n                ],\n                [\n                    106,\n                    191\n                ],\n                [\n                    107,\n                    190\n                ],\n                [\n                    108,\n                    189\n                ],\n                [\n                    109,\n                    188\n                ],\n                [\n                    110,\n                    188\n                ],\n                [\n                    111,\n                    187\n                ],\n                [\n                    112,\n                    186\n                ],\n                [\n                    113,\n                    185\n                ],\n                [\n                    114,\n                    185\n                ],\n                [\n                    115,\n                    184\n                ],\n                [\n                    116,\n                    183\n                ],\n                [\n                    117,\n                    182\n                ],\n                [\n                    118,\n                    182\n                ],\n                [\n                    119,\n                    181\n                ],\n                [\n                    120,\n                    180\n                ],\n                [\n                    121,\n                    179\n                ],\n                [\n                    122,\n                    179\n                ],\n                [\n                    123,\n                    178\n                ],\n                [\n                    124,\n                    177\n                ],\n                [\n                    125,\n                    176\n                ],\n                [\n                    126,\n                    176\n                ],\n                [\n                    127,\n                    175\n                ],\n                [\n                    128,\n                    174\n                ]\n            ],\n            \"d\": \"Discount gas costs of calls to the MultiExp precompiles with `k` (point, scalar) pair\"\n        }\n    },\n    \"vm\": {},\n    \"pow\": {}\n}); //# sourceMappingURL=2537.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/2537.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/2565.js":
/*!********************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/eips/2565.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    \"name\": \"EIP-2565\",\n    \"number\": 2565,\n    \"comment\": \"ModExp gas cost\",\n    \"url\": \"https://eips.ethereum.org/EIPS/eip-2565\",\n    \"status\": \"Final\",\n    \"minimumHardfork\": \"byzantium\",\n    \"gasConfig\": {},\n    \"gasPrices\": {\n        \"modexpGquaddivisor\": {\n            \"v\": 3,\n            \"d\": \"Gquaddivisor from modexp precompile for gas calculation\"\n        }\n    },\n    \"vm\": {},\n    \"pow\": {}\n}); //# sourceMappingURL=2565.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vZWlwcy8yNTY1LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZTtJQUNYLFFBQVE7SUFDUixVQUFVO0lBQ1YsV0FBVztJQUNYLE9BQU87SUFDUCxVQUFVO0lBQ1YsbUJBQW1CO0lBQ25CLGFBQWEsQ0FBQztJQUNkLGFBQWE7UUFDVCxzQkFBc0I7WUFDbEIsS0FBSztZQUNMLEtBQUs7UUFDVDtJQUNKO0lBQ0EsTUFBTSxDQUFDO0lBQ1AsT0FBTyxDQUFDO0FBQ1osQ0FBQyxFQUFDLENBQ0YsZ0NBQWdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vZWlwcy8yNTY1LmpzPzE2ZGYiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQge1xuICAgIFwibmFtZVwiOiBcIkVJUC0yNTY1XCIsXG4gICAgXCJudW1iZXJcIjogMjU2NSxcbiAgICBcImNvbW1lbnRcIjogXCJNb2RFeHAgZ2FzIGNvc3RcIixcbiAgICBcInVybFwiOiBcImh0dHBzOi8vZWlwcy5ldGhlcmV1bS5vcmcvRUlQUy9laXAtMjU2NVwiLFxuICAgIFwic3RhdHVzXCI6IFwiRmluYWxcIixcbiAgICBcIm1pbmltdW1IYXJkZm9ya1wiOiBcImJ5emFudGl1bVwiLFxuICAgIFwiZ2FzQ29uZmlnXCI6IHt9LFxuICAgIFwiZ2FzUHJpY2VzXCI6IHtcbiAgICAgICAgXCJtb2RleHBHcXVhZGRpdmlzb3JcIjoge1xuICAgICAgICAgICAgXCJ2XCI6IDMsXG4gICAgICAgICAgICBcImRcIjogXCJHcXVhZGRpdmlzb3IgZnJvbSBtb2RleHAgcHJlY29tcGlsZSBmb3IgZ2FzIGNhbGN1bGF0aW9uXCJcbiAgICAgICAgfVxuICAgIH0sXG4gICAgXCJ2bVwiOiB7fSxcbiAgICBcInBvd1wiOiB7fVxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPTI1NjUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/2565.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/2718.js":
/*!********************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/eips/2718.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    \"name\": \"EIP-2718\",\n    \"comment\": \"Typed Transaction Envelope\",\n    \"url\": \"https://eips.ethereum.org/EIPS/eip-2718\",\n    \"status\": \"Final\",\n    \"minimumHardfork\": \"chainstart\",\n    \"gasConfig\": {},\n    \"gasPrices\": {},\n    \"vm\": {},\n    \"pow\": {}\n}); //# sourceMappingURL=2718.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vZWlwcy8yNzE4LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZTtJQUNYLFFBQVE7SUFDUixXQUFXO0lBQ1gsT0FBTztJQUNQLFVBQVU7SUFDVixtQkFBbUI7SUFDbkIsYUFBYSxDQUFDO0lBQ2QsYUFBYSxDQUFDO0lBQ2QsTUFBTSxDQUFDO0lBQ1AsT0FBTyxDQUFDO0FBQ1osQ0FBQyxFQUFDLENBQ0YsZ0NBQWdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vZWlwcy8yNzE4LmpzPzdhMmMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQge1xuICAgIFwibmFtZVwiOiBcIkVJUC0yNzE4XCIsXG4gICAgXCJjb21tZW50XCI6IFwiVHlwZWQgVHJhbnNhY3Rpb24gRW52ZWxvcGVcIixcbiAgICBcInVybFwiOiBcImh0dHBzOi8vZWlwcy5ldGhlcmV1bS5vcmcvRUlQUy9laXAtMjcxOFwiLFxuICAgIFwic3RhdHVzXCI6IFwiRmluYWxcIixcbiAgICBcIm1pbmltdW1IYXJkZm9ya1wiOiBcImNoYWluc3RhcnRcIixcbiAgICBcImdhc0NvbmZpZ1wiOiB7fSxcbiAgICBcImdhc1ByaWNlc1wiOiB7fSxcbiAgICBcInZtXCI6IHt9LFxuICAgIFwicG93XCI6IHt9XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9MjcxOC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/2718.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/2929.js":
/*!********************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/eips/2929.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    \"name\": \"EIP-2929\",\n    \"comment\": \"Gas cost increases for state access opcodes\",\n    \"url\": \"https://eips.ethereum.org/EIPS/eip-2929\",\n    \"status\": \"Final\",\n    \"minimumHardfork\": \"chainstart\",\n    \"gasConfig\": {},\n    \"gasPrices\": {\n        \"coldsload\": {\n            \"v\": 2100,\n            \"d\": \"Gas cost of the first read of storage from a given location (per transaction)\"\n        },\n        \"coldaccountaccess\": {\n            \"v\": 2600,\n            \"d\": \"Gas cost of the first read of a given address (per transaction)\"\n        },\n        \"warmstorageread\": {\n            \"v\": 100,\n            \"d\": \"Gas cost of reading storage locations which have already loaded 'cold'\"\n        },\n        \"sstoreCleanGasEIP2200\": {\n            \"v\": 2900,\n            \"d\": \"Once per SSTORE operation from clean non-zero to something else\"\n        },\n        \"sstoreNoopGasEIP2200\": {\n            \"v\": 100,\n            \"d\": \"Once per SSTORE operation if the value doesn't change\"\n        },\n        \"sstoreDirtyGasEIP2200\": {\n            \"v\": 100,\n            \"d\": \"Once per SSTORE operation if a dirty value is changed\"\n        },\n        \"sstoreInitRefundEIP2200\": {\n            \"v\": 19900,\n            \"d\": \"Once per SSTORE operation for resetting to the original zero value\"\n        },\n        \"sstoreCleanRefundEIP2200\": {\n            \"v\": 4900,\n            \"d\": \"Once per SSTORE operation for resetting to the original non-zero value\"\n        },\n        \"call\": {\n            \"v\": 0,\n            \"d\": \"Base fee of the CALL opcode\"\n        },\n        \"callcode\": {\n            \"v\": 0,\n            \"d\": \"Base fee of the CALLCODE opcode\"\n        },\n        \"delegatecall\": {\n            \"v\": 0,\n            \"d\": \"Base fee of the DELEGATECALL opcode\"\n        },\n        \"staticcall\": {\n            \"v\": 0,\n            \"d\": \"Base fee of the STATICCALL opcode\"\n        },\n        \"balance\": {\n            \"v\": 0,\n            \"d\": \"Base fee of the BALANCE opcode\"\n        },\n        \"extcodesize\": {\n            \"v\": 0,\n            \"d\": \"Base fee of the EXTCODESIZE opcode\"\n        },\n        \"extcodecopy\": {\n            \"v\": 0,\n            \"d\": \"Base fee of the EXTCODECOPY opcode\"\n        },\n        \"extcodehash\": {\n            \"v\": 0,\n            \"d\": \"Base fee of the EXTCODEHASH opcode\"\n        },\n        \"sload\": {\n            \"v\": 0,\n            \"d\": \"Base fee of the SLOAD opcode\"\n        },\n        \"sstore\": {\n            \"v\": 0,\n            \"d\": \"Base fee of the SSTORE opcode\"\n        }\n    },\n    \"vm\": {},\n    \"pow\": {}\n}); //# sourceMappingURL=2929.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vZWlwcy8yOTI5LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZTtJQUNYLFFBQVE7SUFDUixXQUFXO0lBQ1gsT0FBTztJQUNQLFVBQVU7SUFDVixtQkFBbUI7SUFDbkIsYUFBYSxDQUFDO0lBQ2QsYUFBYTtRQUNULGFBQWE7WUFDVCxLQUFLO1lBQ0wsS0FBSztRQUNUO1FBQ0EscUJBQXFCO1lBQ2pCLEtBQUs7WUFDTCxLQUFLO1FBQ1Q7UUFDQSxtQkFBbUI7WUFDZixLQUFLO1lBQ0wsS0FBSztRQUNUO1FBQ0EseUJBQXlCO1lBQ3JCLEtBQUs7WUFDTCxLQUFLO1FBQ1Q7UUFDQSx3QkFBd0I7WUFDcEIsS0FBSztZQUNMLEtBQUs7UUFDVDtRQUNBLHlCQUF5QjtZQUNyQixLQUFLO1lBQ0wsS0FBSztRQUNUO1FBQ0EsMkJBQTJCO1lBQ3ZCLEtBQUs7WUFDTCxLQUFLO1FBQ1Q7UUFDQSw0QkFBNEI7WUFDeEIsS0FBSztZQUNMLEtBQUs7UUFDVDtRQUNBLFFBQVE7WUFDSixLQUFLO1lBQ0wsS0FBSztRQUNUO1FBQ0EsWUFBWTtZQUNSLEtBQUs7WUFDTCxLQUFLO1FBQ1Q7UUFDQSxnQkFBZ0I7WUFDWixLQUFLO1lBQ0wsS0FBSztRQUNUO1FBQ0EsY0FBYztZQUNWLEtBQUs7WUFDTCxLQUFLO1FBQ1Q7UUFDQSxXQUFXO1lBQ1AsS0FBSztZQUNMLEtBQUs7UUFDVDtRQUNBLGVBQWU7WUFDWCxLQUFLO1lBQ0wsS0FBSztRQUNUO1FBQ0EsZUFBZTtZQUNYLEtBQUs7WUFDTCxLQUFLO1FBQ1Q7UUFDQSxlQUFlO1lBQ1gsS0FBSztZQUNMLEtBQUs7UUFDVDtRQUNBLFNBQVM7WUFDTCxLQUFLO1lBQ0wsS0FBSztRQUNUO1FBQ0EsVUFBVTtZQUNOLEtBQUs7WUFDTCxLQUFLO1FBQ1Q7SUFDSjtJQUNBLE1BQU0sQ0FBQztJQUNQLE9BQU8sQ0FBQztBQUNaLENBQUMsRUFBQyxDQUNGLGdDQUFnQyIsInNvdXJjZXMiOlsid2VicGFjazovL2Zyb250ZW5kLy4vbm9kZV9tb2R1bGVzL3dlYjMtZXRoLWFjY291bnRzL2xpYi9lc20vY29tbW9uL2VpcHMvMjkyOS5qcz9jZWNiIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IHtcbiAgICBcIm5hbWVcIjogXCJFSVAtMjkyOVwiLFxuICAgIFwiY29tbWVudFwiOiBcIkdhcyBjb3N0IGluY3JlYXNlcyBmb3Igc3RhdGUgYWNjZXNzIG9wY29kZXNcIixcbiAgICBcInVybFwiOiBcImh0dHBzOi8vZWlwcy5ldGhlcmV1bS5vcmcvRUlQUy9laXAtMjkyOVwiLFxuICAgIFwic3RhdHVzXCI6IFwiRmluYWxcIixcbiAgICBcIm1pbmltdW1IYXJkZm9ya1wiOiBcImNoYWluc3RhcnRcIixcbiAgICBcImdhc0NvbmZpZ1wiOiB7fSxcbiAgICBcImdhc1ByaWNlc1wiOiB7XG4gICAgICAgIFwiY29sZHNsb2FkXCI6IHtcbiAgICAgICAgICAgIFwidlwiOiAyMTAwLFxuICAgICAgICAgICAgXCJkXCI6IFwiR2FzIGNvc3Qgb2YgdGhlIGZpcnN0IHJlYWQgb2Ygc3RvcmFnZSBmcm9tIGEgZ2l2ZW4gbG9jYXRpb24gKHBlciB0cmFuc2FjdGlvbilcIlxuICAgICAgICB9LFxuICAgICAgICBcImNvbGRhY2NvdW50YWNjZXNzXCI6IHtcbiAgICAgICAgICAgIFwidlwiOiAyNjAwLFxuICAgICAgICAgICAgXCJkXCI6IFwiR2FzIGNvc3Qgb2YgdGhlIGZpcnN0IHJlYWQgb2YgYSBnaXZlbiBhZGRyZXNzIChwZXIgdHJhbnNhY3Rpb24pXCJcbiAgICAgICAgfSxcbiAgICAgICAgXCJ3YXJtc3RvcmFnZXJlYWRcIjoge1xuICAgICAgICAgICAgXCJ2XCI6IDEwMCxcbiAgICAgICAgICAgIFwiZFwiOiBcIkdhcyBjb3N0IG9mIHJlYWRpbmcgc3RvcmFnZSBsb2NhdGlvbnMgd2hpY2ggaGF2ZSBhbHJlYWR5IGxvYWRlZCAnY29sZCdcIlxuICAgICAgICB9LFxuICAgICAgICBcInNzdG9yZUNsZWFuR2FzRUlQMjIwMFwiOiB7XG4gICAgICAgICAgICBcInZcIjogMjkwMCxcbiAgICAgICAgICAgIFwiZFwiOiBcIk9uY2UgcGVyIFNTVE9SRSBvcGVyYXRpb24gZnJvbSBjbGVhbiBub24temVybyB0byBzb21ldGhpbmcgZWxzZVwiXG4gICAgICAgIH0sXG4gICAgICAgIFwic3N0b3JlTm9vcEdhc0VJUDIyMDBcIjoge1xuICAgICAgICAgICAgXCJ2XCI6IDEwMCxcbiAgICAgICAgICAgIFwiZFwiOiBcIk9uY2UgcGVyIFNTVE9SRSBvcGVyYXRpb24gaWYgdGhlIHZhbHVlIGRvZXNuJ3QgY2hhbmdlXCJcbiAgICAgICAgfSxcbiAgICAgICAgXCJzc3RvcmVEaXJ0eUdhc0VJUDIyMDBcIjoge1xuICAgICAgICAgICAgXCJ2XCI6IDEwMCxcbiAgICAgICAgICAgIFwiZFwiOiBcIk9uY2UgcGVyIFNTVE9SRSBvcGVyYXRpb24gaWYgYSBkaXJ0eSB2YWx1ZSBpcyBjaGFuZ2VkXCJcbiAgICAgICAgfSxcbiAgICAgICAgXCJzc3RvcmVJbml0UmVmdW5kRUlQMjIwMFwiOiB7XG4gICAgICAgICAgICBcInZcIjogMTk5MDAsXG4gICAgICAgICAgICBcImRcIjogXCJPbmNlIHBlciBTU1RPUkUgb3BlcmF0aW9uIGZvciByZXNldHRpbmcgdG8gdGhlIG9yaWdpbmFsIHplcm8gdmFsdWVcIlxuICAgICAgICB9LFxuICAgICAgICBcInNzdG9yZUNsZWFuUmVmdW5kRUlQMjIwMFwiOiB7XG4gICAgICAgICAgICBcInZcIjogNDkwMCxcbiAgICAgICAgICAgIFwiZFwiOiBcIk9uY2UgcGVyIFNTVE9SRSBvcGVyYXRpb24gZm9yIHJlc2V0dGluZyB0byB0aGUgb3JpZ2luYWwgbm9uLXplcm8gdmFsdWVcIlxuICAgICAgICB9LFxuICAgICAgICBcImNhbGxcIjoge1xuICAgICAgICAgICAgXCJ2XCI6IDAsXG4gICAgICAgICAgICBcImRcIjogXCJCYXNlIGZlZSBvZiB0aGUgQ0FMTCBvcGNvZGVcIlxuICAgICAgICB9LFxuICAgICAgICBcImNhbGxjb2RlXCI6IHtcbiAgICAgICAgICAgIFwidlwiOiAwLFxuICAgICAgICAgICAgXCJkXCI6IFwiQmFzZSBmZWUgb2YgdGhlIENBTExDT0RFIG9wY29kZVwiXG4gICAgICAgIH0sXG4gICAgICAgIFwiZGVsZWdhdGVjYWxsXCI6IHtcbiAgICAgICAgICAgIFwidlwiOiAwLFxuICAgICAgICAgICAgXCJkXCI6IFwiQmFzZSBmZWUgb2YgdGhlIERFTEVHQVRFQ0FMTCBvcGNvZGVcIlxuICAgICAgICB9LFxuICAgICAgICBcInN0YXRpY2NhbGxcIjoge1xuICAgICAgICAgICAgXCJ2XCI6IDAsXG4gICAgICAgICAgICBcImRcIjogXCJCYXNlIGZlZSBvZiB0aGUgU1RBVElDQ0FMTCBvcGNvZGVcIlxuICAgICAgICB9LFxuICAgICAgICBcImJhbGFuY2VcIjoge1xuICAgICAgICAgICAgXCJ2XCI6IDAsXG4gICAgICAgICAgICBcImRcIjogXCJCYXNlIGZlZSBvZiB0aGUgQkFMQU5DRSBvcGNvZGVcIlxuICAgICAgICB9LFxuICAgICAgICBcImV4dGNvZGVzaXplXCI6IHtcbiAgICAgICAgICAgIFwidlwiOiAwLFxuICAgICAgICAgICAgXCJkXCI6IFwiQmFzZSBmZWUgb2YgdGhlIEVYVENPREVTSVpFIG9wY29kZVwiXG4gICAgICAgIH0sXG4gICAgICAgIFwiZXh0Y29kZWNvcHlcIjoge1xuICAgICAgICAgICAgXCJ2XCI6IDAsXG4gICAgICAgICAgICBcImRcIjogXCJCYXNlIGZlZSBvZiB0aGUgRVhUQ09ERUNPUFkgb3Bjb2RlXCJcbiAgICAgICAgfSxcbiAgICAgICAgXCJleHRjb2RlaGFzaFwiOiB7XG4gICAgICAgICAgICBcInZcIjogMCxcbiAgICAgICAgICAgIFwiZFwiOiBcIkJhc2UgZmVlIG9mIHRoZSBFWFRDT0RFSEFTSCBvcGNvZGVcIlxuICAgICAgICB9LFxuICAgICAgICBcInNsb2FkXCI6IHtcbiAgICAgICAgICAgIFwidlwiOiAwLFxuICAgICAgICAgICAgXCJkXCI6IFwiQmFzZSBmZWUgb2YgdGhlIFNMT0FEIG9wY29kZVwiXG4gICAgICAgIH0sXG4gICAgICAgIFwic3N0b3JlXCI6IHtcbiAgICAgICAgICAgIFwidlwiOiAwLFxuICAgICAgICAgICAgXCJkXCI6IFwiQmFzZSBmZWUgb2YgdGhlIFNTVE9SRSBvcGNvZGVcIlxuICAgICAgICB9XG4gICAgfSxcbiAgICBcInZtXCI6IHt9LFxuICAgIFwicG93XCI6IHt9XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9MjkyOS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/2929.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/2930.js":
/*!********************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/eips/2930.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    \"name\": \"EIP-2930\",\n    \"comment\": \"Optional access lists\",\n    \"url\": \"https://eips.ethereum.org/EIPS/eip-2930\",\n    \"status\": \"Final\",\n    \"minimumHardfork\": \"istanbul\",\n    \"requiredEIPs\": [\n        2718,\n        2929\n    ],\n    \"gasConfig\": {},\n    \"gasPrices\": {\n        \"accessListStorageKeyCost\": {\n            \"v\": 1900,\n            \"d\": \"Gas cost per storage key in an Access List transaction\"\n        },\n        \"accessListAddressCost\": {\n            \"v\": 2400,\n            \"d\": \"Gas cost per storage key in an Access List transaction\"\n        }\n    },\n    \"vm\": {},\n    \"pow\": {}\n}); //# sourceMappingURL=2930.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vZWlwcy8yOTMwLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZTtJQUNYLFFBQVE7SUFDUixXQUFXO0lBQ1gsT0FBTztJQUNQLFVBQVU7SUFDVixtQkFBbUI7SUFDbkIsZ0JBQWdCO1FBQUM7UUFBTTtLQUFLO0lBQzVCLGFBQWEsQ0FBQztJQUNkLGFBQWE7UUFDVCw0QkFBNEI7WUFDeEIsS0FBSztZQUNMLEtBQUs7UUFDVDtRQUNBLHlCQUF5QjtZQUNyQixLQUFLO1lBQ0wsS0FBSztRQUNUO0lBQ0o7SUFDQSxNQUFNLENBQUM7SUFDUCxPQUFPLENBQUM7QUFDWixDQUFDLEVBQUMsQ0FDRixnQ0FBZ0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mcm9udGVuZC8uL25vZGVfbW9kdWxlcy93ZWIzLWV0aC1hY2NvdW50cy9saWIvZXNtL2NvbW1vbi9laXBzLzI5MzAuanM/NWIyMCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCB7XG4gICAgXCJuYW1lXCI6IFwiRUlQLTI5MzBcIixcbiAgICBcImNvbW1lbnRcIjogXCJPcHRpb25hbCBhY2Nlc3MgbGlzdHNcIixcbiAgICBcInVybFwiOiBcImh0dHBzOi8vZWlwcy5ldGhlcmV1bS5vcmcvRUlQUy9laXAtMjkzMFwiLFxuICAgIFwic3RhdHVzXCI6IFwiRmluYWxcIixcbiAgICBcIm1pbmltdW1IYXJkZm9ya1wiOiBcImlzdGFuYnVsXCIsXG4gICAgXCJyZXF1aXJlZEVJUHNcIjogWzI3MTgsIDI5MjldLFxuICAgIFwiZ2FzQ29uZmlnXCI6IHt9LFxuICAgIFwiZ2FzUHJpY2VzXCI6IHtcbiAgICAgICAgXCJhY2Nlc3NMaXN0U3RvcmFnZUtleUNvc3RcIjoge1xuICAgICAgICAgICAgXCJ2XCI6IDE5MDAsXG4gICAgICAgICAgICBcImRcIjogXCJHYXMgY29zdCBwZXIgc3RvcmFnZSBrZXkgaW4gYW4gQWNjZXNzIExpc3QgdHJhbnNhY3Rpb25cIlxuICAgICAgICB9LFxuICAgICAgICBcImFjY2Vzc0xpc3RBZGRyZXNzQ29zdFwiOiB7XG4gICAgICAgICAgICBcInZcIjogMjQwMCxcbiAgICAgICAgICAgIFwiZFwiOiBcIkdhcyBjb3N0IHBlciBzdG9yYWdlIGtleSBpbiBhbiBBY2Nlc3MgTGlzdCB0cmFuc2FjdGlvblwiXG4gICAgICAgIH1cbiAgICB9LFxuICAgIFwidm1cIjoge30sXG4gICAgXCJwb3dcIjoge31cbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD0yOTMwLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/2930.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/3198.js":
/*!********************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/eips/3198.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    \"name\": \"EIP-3198\",\n    \"number\": 3198,\n    \"comment\": \"BASEFEE opcode\",\n    \"url\": \"https://eips.ethereum.org/EIPS/eip-3198\",\n    \"status\": \"Final\",\n    \"minimumHardfork\": \"london\",\n    \"gasConfig\": {},\n    \"gasPrices\": {\n        \"basefee\": {\n            \"v\": 2,\n            \"d\": \"Gas cost of the BASEFEE opcode\"\n        }\n    },\n    \"vm\": {},\n    \"pow\": {}\n}); //# sourceMappingURL=3198.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vZWlwcy8zMTk4LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZTtJQUNYLFFBQVE7SUFDUixVQUFVO0lBQ1YsV0FBVztJQUNYLE9BQU87SUFDUCxVQUFVO0lBQ1YsbUJBQW1CO0lBQ25CLGFBQWEsQ0FBQztJQUNkLGFBQWE7UUFDVCxXQUFXO1lBQ1AsS0FBSztZQUNMLEtBQUs7UUFDVDtJQUNKO0lBQ0EsTUFBTSxDQUFDO0lBQ1AsT0FBTyxDQUFDO0FBQ1osQ0FBQyxFQUFDLENBQ0YsZ0NBQWdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vZWlwcy8zMTk4LmpzP2U2YjciXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQge1xuICAgIFwibmFtZVwiOiBcIkVJUC0zMTk4XCIsXG4gICAgXCJudW1iZXJcIjogMzE5OCxcbiAgICBcImNvbW1lbnRcIjogXCJCQVNFRkVFIG9wY29kZVwiLFxuICAgIFwidXJsXCI6IFwiaHR0cHM6Ly9laXBzLmV0aGVyZXVtLm9yZy9FSVBTL2VpcC0zMTk4XCIsXG4gICAgXCJzdGF0dXNcIjogXCJGaW5hbFwiLFxuICAgIFwibWluaW11bUhhcmRmb3JrXCI6IFwibG9uZG9uXCIsXG4gICAgXCJnYXNDb25maWdcIjoge30sXG4gICAgXCJnYXNQcmljZXNcIjoge1xuICAgICAgICBcImJhc2VmZWVcIjoge1xuICAgICAgICAgICAgXCJ2XCI6IDIsXG4gICAgICAgICAgICBcImRcIjogXCJHYXMgY29zdCBvZiB0aGUgQkFTRUZFRSBvcGNvZGVcIlxuICAgICAgICB9XG4gICAgfSxcbiAgICBcInZtXCI6IHt9LFxuICAgIFwicG93XCI6IHt9XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9MzE5OC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/3198.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/3529.js":
/*!********************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/eips/3529.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    \"name\": \"EIP-3529\",\n    \"comment\": \"Reduction in refunds\",\n    \"url\": \"https://eips.ethereum.org/EIPS/eip-3529\",\n    \"status\": \"Final\",\n    \"minimumHardfork\": \"berlin\",\n    \"requiredEIPs\": [\n        2929\n    ],\n    \"gasConfig\": {\n        \"maxRefundQuotient\": {\n            \"v\": 5,\n            \"d\": \"Maximum refund quotient; max tx refund is min(tx.gasUsed/maxRefundQuotient, tx.gasRefund)\"\n        }\n    },\n    \"gasPrices\": {\n        \"selfdestructRefund\": {\n            \"v\": 0,\n            \"d\": \"Refunded following a selfdestruct operation\"\n        },\n        \"sstoreClearRefundEIP2200\": {\n            \"v\": 4800,\n            \"d\": \"Once per SSTORE operation for clearing an originally existing storage slot\"\n        }\n    },\n    \"vm\": {},\n    \"pow\": {}\n}); //# sourceMappingURL=3529.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vZWlwcy8zNTI5LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZTtJQUNYLFFBQVE7SUFDUixXQUFXO0lBQ1gsT0FBTztJQUNQLFVBQVU7SUFDVixtQkFBbUI7SUFDbkIsZ0JBQWdCO1FBQUM7S0FBSztJQUN0QixhQUFhO1FBQ1QscUJBQXFCO1lBQ2pCLEtBQUs7WUFDTCxLQUFLO1FBQ1Q7SUFDSjtJQUNBLGFBQWE7UUFDVCxzQkFBc0I7WUFDbEIsS0FBSztZQUNMLEtBQUs7UUFDVDtRQUNBLDRCQUE0QjtZQUN4QixLQUFLO1lBQ0wsS0FBSztRQUNUO0lBQ0o7SUFDQSxNQUFNLENBQUM7SUFDUCxPQUFPLENBQUM7QUFDWixDQUFDLEVBQUMsQ0FDRixnQ0FBZ0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mcm9udGVuZC8uL25vZGVfbW9kdWxlcy93ZWIzLWV0aC1hY2NvdW50cy9saWIvZXNtL2NvbW1vbi9laXBzLzM1MjkuanM/ZTA5YiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCB7XG4gICAgXCJuYW1lXCI6IFwiRUlQLTM1MjlcIixcbiAgICBcImNvbW1lbnRcIjogXCJSZWR1Y3Rpb24gaW4gcmVmdW5kc1wiLFxuICAgIFwidXJsXCI6IFwiaHR0cHM6Ly9laXBzLmV0aGVyZXVtLm9yZy9FSVBTL2VpcC0zNTI5XCIsXG4gICAgXCJzdGF0dXNcIjogXCJGaW5hbFwiLFxuICAgIFwibWluaW11bUhhcmRmb3JrXCI6IFwiYmVybGluXCIsXG4gICAgXCJyZXF1aXJlZEVJUHNcIjogWzI5MjldLFxuICAgIFwiZ2FzQ29uZmlnXCI6IHtcbiAgICAgICAgXCJtYXhSZWZ1bmRRdW90aWVudFwiOiB7XG4gICAgICAgICAgICBcInZcIjogNSxcbiAgICAgICAgICAgIFwiZFwiOiBcIk1heGltdW0gcmVmdW5kIHF1b3RpZW50OyBtYXggdHggcmVmdW5kIGlzIG1pbih0eC5nYXNVc2VkL21heFJlZnVuZFF1b3RpZW50LCB0eC5nYXNSZWZ1bmQpXCJcbiAgICAgICAgfVxuICAgIH0sXG4gICAgXCJnYXNQcmljZXNcIjoge1xuICAgICAgICBcInNlbGZkZXN0cnVjdFJlZnVuZFwiOiB7XG4gICAgICAgICAgICBcInZcIjogMCxcbiAgICAgICAgICAgIFwiZFwiOiBcIlJlZnVuZGVkIGZvbGxvd2luZyBhIHNlbGZkZXN0cnVjdCBvcGVyYXRpb25cIlxuICAgICAgICB9LFxuICAgICAgICBcInNzdG9yZUNsZWFyUmVmdW5kRUlQMjIwMFwiOiB7XG4gICAgICAgICAgICBcInZcIjogNDgwMCxcbiAgICAgICAgICAgIFwiZFwiOiBcIk9uY2UgcGVyIFNTVE9SRSBvcGVyYXRpb24gZm9yIGNsZWFyaW5nIGFuIG9yaWdpbmFsbHkgZXhpc3Rpbmcgc3RvcmFnZSBzbG90XCJcbiAgICAgICAgfVxuICAgIH0sXG4gICAgXCJ2bVwiOiB7fSxcbiAgICBcInBvd1wiOiB7fVxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPTM1MjkuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/3529.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/3540.js":
/*!********************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/eips/3540.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    \"name\": \"EIP-3540\",\n    \"number\": 3540,\n    \"comment\": \"EVM Object Format (EOF) v1\",\n    \"url\": \"https://eips.ethereum.org/EIPS/eip-3540\",\n    \"status\": \"Review\",\n    \"minimumHardfork\": \"london\",\n    \"requiredEIPs\": [\n        3541\n    ],\n    \"gasConfig\": {},\n    \"gasPrices\": {},\n    \"vm\": {},\n    \"pow\": {}\n}); //# sourceMappingURL=3540.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vZWlwcy8zNTQwLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZTtJQUNYLFFBQVE7SUFDUixVQUFVO0lBQ1YsV0FBVztJQUNYLE9BQU87SUFDUCxVQUFVO0lBQ1YsbUJBQW1CO0lBQ25CLGdCQUFnQjtRQUFDO0tBQUs7SUFDdEIsYUFBYSxDQUFDO0lBQ2QsYUFBYSxDQUFDO0lBQ2QsTUFBTSxDQUFDO0lBQ1AsT0FBTyxDQUFDO0FBQ1osQ0FBQyxFQUFDLENBQ0YsZ0NBQWdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vZWlwcy8zNTQwLmpzPzk1ZDQiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQge1xuICAgIFwibmFtZVwiOiBcIkVJUC0zNTQwXCIsXG4gICAgXCJudW1iZXJcIjogMzU0MCxcbiAgICBcImNvbW1lbnRcIjogXCJFVk0gT2JqZWN0IEZvcm1hdCAoRU9GKSB2MVwiLFxuICAgIFwidXJsXCI6IFwiaHR0cHM6Ly9laXBzLmV0aGVyZXVtLm9yZy9FSVBTL2VpcC0zNTQwXCIsXG4gICAgXCJzdGF0dXNcIjogXCJSZXZpZXdcIixcbiAgICBcIm1pbmltdW1IYXJkZm9ya1wiOiBcImxvbmRvblwiLFxuICAgIFwicmVxdWlyZWRFSVBzXCI6IFszNTQxXSxcbiAgICBcImdhc0NvbmZpZ1wiOiB7fSxcbiAgICBcImdhc1ByaWNlc1wiOiB7fSxcbiAgICBcInZtXCI6IHt9LFxuICAgIFwicG93XCI6IHt9XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9MzU0MC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/3540.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/3541.js":
/*!********************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/eips/3541.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    \"name\": \"EIP-3541\",\n    \"comment\": \"Reject new contracts starting with the 0xEF byte\",\n    \"url\": \"https://eips.ethereum.org/EIPS/eip-3541\",\n    \"status\": \"Final\",\n    \"minimumHardfork\": \"berlin\",\n    \"requiredEIPs\": [],\n    \"gasConfig\": {},\n    \"gasPrices\": {},\n    \"vm\": {},\n    \"pow\": {}\n}); //# sourceMappingURL=3541.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vZWlwcy8zNTQxLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZTtJQUNYLFFBQVE7SUFDUixXQUFXO0lBQ1gsT0FBTztJQUNQLFVBQVU7SUFDVixtQkFBbUI7SUFDbkIsZ0JBQWdCLEVBQUU7SUFDbEIsYUFBYSxDQUFDO0lBQ2QsYUFBYSxDQUFDO0lBQ2QsTUFBTSxDQUFDO0lBQ1AsT0FBTyxDQUFDO0FBQ1osQ0FBQyxFQUFDLENBQ0YsZ0NBQWdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vZWlwcy8zNTQxLmpzP2E4MDkiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQge1xuICAgIFwibmFtZVwiOiBcIkVJUC0zNTQxXCIsXG4gICAgXCJjb21tZW50XCI6IFwiUmVqZWN0IG5ldyBjb250cmFjdHMgc3RhcnRpbmcgd2l0aCB0aGUgMHhFRiBieXRlXCIsXG4gICAgXCJ1cmxcIjogXCJodHRwczovL2VpcHMuZXRoZXJldW0ub3JnL0VJUFMvZWlwLTM1NDFcIixcbiAgICBcInN0YXR1c1wiOiBcIkZpbmFsXCIsXG4gICAgXCJtaW5pbXVtSGFyZGZvcmtcIjogXCJiZXJsaW5cIixcbiAgICBcInJlcXVpcmVkRUlQc1wiOiBbXSxcbiAgICBcImdhc0NvbmZpZ1wiOiB7fSxcbiAgICBcImdhc1ByaWNlc1wiOiB7fSxcbiAgICBcInZtXCI6IHt9LFxuICAgIFwicG93XCI6IHt9XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9MzU0MS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/3541.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/3554.js":
/*!********************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/eips/3554.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    \"name\": \"EIP-3554\",\n    \"comment\": \"Reduction in refunds\",\n    \"url\": \"Difficulty Bomb Delay to December 1st 2021\",\n    \"status\": \"Final\",\n    \"minimumHardfork\": \"muirGlacier\",\n    \"requiredEIPs\": [],\n    \"gasConfig\": {},\n    \"gasPrices\": {},\n    \"vm\": {},\n    \"pow\": {\n        \"difficultyBombDelay\": {\n            \"v\": 9500000,\n            \"d\": \"the amount of blocks to delay the difficulty bomb with\"\n        }\n    }\n}); //# sourceMappingURL=3554.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vZWlwcy8zNTU0LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZTtJQUNYLFFBQVE7SUFDUixXQUFXO0lBQ1gsT0FBTztJQUNQLFVBQVU7SUFDVixtQkFBbUI7SUFDbkIsZ0JBQWdCLEVBQUU7SUFDbEIsYUFBYSxDQUFDO0lBQ2QsYUFBYSxDQUFDO0lBQ2QsTUFBTSxDQUFDO0lBQ1AsT0FBTztRQUNILHVCQUF1QjtZQUNuQixLQUFLO1lBQ0wsS0FBSztRQUNUO0lBQ0o7QUFDSixDQUFDLEVBQUMsQ0FDRixnQ0FBZ0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mcm9udGVuZC8uL25vZGVfbW9kdWxlcy93ZWIzLWV0aC1hY2NvdW50cy9saWIvZXNtL2NvbW1vbi9laXBzLzM1NTQuanM/NDk5ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCB7XG4gICAgXCJuYW1lXCI6IFwiRUlQLTM1NTRcIixcbiAgICBcImNvbW1lbnRcIjogXCJSZWR1Y3Rpb24gaW4gcmVmdW5kc1wiLFxuICAgIFwidXJsXCI6IFwiRGlmZmljdWx0eSBCb21iIERlbGF5IHRvIERlY2VtYmVyIDFzdCAyMDIxXCIsXG4gICAgXCJzdGF0dXNcIjogXCJGaW5hbFwiLFxuICAgIFwibWluaW11bUhhcmRmb3JrXCI6IFwibXVpckdsYWNpZXJcIixcbiAgICBcInJlcXVpcmVkRUlQc1wiOiBbXSxcbiAgICBcImdhc0NvbmZpZ1wiOiB7fSxcbiAgICBcImdhc1ByaWNlc1wiOiB7fSxcbiAgICBcInZtXCI6IHt9LFxuICAgIFwicG93XCI6IHtcbiAgICAgICAgXCJkaWZmaWN1bHR5Qm9tYkRlbGF5XCI6IHtcbiAgICAgICAgICAgIFwidlwiOiA5NTAwMDAwLFxuICAgICAgICAgICAgXCJkXCI6IFwidGhlIGFtb3VudCBvZiBibG9ja3MgdG8gZGVsYXkgdGhlIGRpZmZpY3VsdHkgYm9tYiB3aXRoXCJcbiAgICAgICAgfVxuICAgIH1cbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD0zNTU0LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/3554.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/3607.js":
/*!********************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/eips/3607.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    \"name\": \"EIP-3607\",\n    \"number\": 3607,\n    \"comment\": \"Reject transactions from senders with deployed code\",\n    \"url\": \"https://eips.ethereum.org/EIPS/eip-3607\",\n    \"status\": \"Final\",\n    \"minimumHardfork\": \"chainstart\",\n    \"requiredEIPs\": [],\n    \"gasConfig\": {},\n    \"gasPrices\": {},\n    \"vm\": {},\n    \"pow\": {}\n}); //# sourceMappingURL=3607.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vZWlwcy8zNjA3LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZTtJQUNYLFFBQVE7SUFDUixVQUFVO0lBQ1YsV0FBVztJQUNYLE9BQU87SUFDUCxVQUFVO0lBQ1YsbUJBQW1CO0lBQ25CLGdCQUFnQixFQUFFO0lBQ2xCLGFBQWEsQ0FBQztJQUNkLGFBQWEsQ0FBQztJQUNkLE1BQU0sQ0FBQztJQUNQLE9BQU8sQ0FBQztBQUNaLENBQUMsRUFBQyxDQUNGLGdDQUFnQyIsInNvdXJjZXMiOlsid2VicGFjazovL2Zyb250ZW5kLy4vbm9kZV9tb2R1bGVzL3dlYjMtZXRoLWFjY291bnRzL2xpYi9lc20vY29tbW9uL2VpcHMvMzYwNy5qcz82NzlmIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IHtcbiAgICBcIm5hbWVcIjogXCJFSVAtMzYwN1wiLFxuICAgIFwibnVtYmVyXCI6IDM2MDcsXG4gICAgXCJjb21tZW50XCI6IFwiUmVqZWN0IHRyYW5zYWN0aW9ucyBmcm9tIHNlbmRlcnMgd2l0aCBkZXBsb3llZCBjb2RlXCIsXG4gICAgXCJ1cmxcIjogXCJodHRwczovL2VpcHMuZXRoZXJldW0ub3JnL0VJUFMvZWlwLTM2MDdcIixcbiAgICBcInN0YXR1c1wiOiBcIkZpbmFsXCIsXG4gICAgXCJtaW5pbXVtSGFyZGZvcmtcIjogXCJjaGFpbnN0YXJ0XCIsXG4gICAgXCJyZXF1aXJlZEVJUHNcIjogW10sXG4gICAgXCJnYXNDb25maWdcIjoge30sXG4gICAgXCJnYXNQcmljZXNcIjoge30sXG4gICAgXCJ2bVwiOiB7fSxcbiAgICBcInBvd1wiOiB7fVxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPTM2MDcuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/3607.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/3651.js":
/*!********************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/eips/3651.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    \"name\": \"EIP-3651\",\n    \"number\": 3198,\n    \"comment\": \"Warm COINBASE\",\n    \"url\": \"https://eips.ethereum.org/EIPS/eip-3651\",\n    \"status\": \"Review\",\n    \"minimumHardfork\": \"london\",\n    \"requiredEIPs\": [\n        2929\n    ],\n    \"gasConfig\": {},\n    \"gasPrices\": {},\n    \"vm\": {},\n    \"pow\": {}\n}); //# sourceMappingURL=3651.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vZWlwcy8zNjUxLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZTtJQUNYLFFBQVE7SUFDUixVQUFVO0lBQ1YsV0FBVztJQUNYLE9BQU87SUFDUCxVQUFVO0lBQ1YsbUJBQW1CO0lBQ25CLGdCQUFnQjtRQUFDO0tBQUs7SUFDdEIsYUFBYSxDQUFDO0lBQ2QsYUFBYSxDQUFDO0lBQ2QsTUFBTSxDQUFDO0lBQ1AsT0FBTyxDQUFDO0FBQ1osQ0FBQyxFQUFDLENBQ0YsZ0NBQWdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vZWlwcy8zNjUxLmpzP2I0MWIiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQge1xuICAgIFwibmFtZVwiOiBcIkVJUC0zNjUxXCIsXG4gICAgXCJudW1iZXJcIjogMzE5OCxcbiAgICBcImNvbW1lbnRcIjogXCJXYXJtIENPSU5CQVNFXCIsXG4gICAgXCJ1cmxcIjogXCJodHRwczovL2VpcHMuZXRoZXJldW0ub3JnL0VJUFMvZWlwLTM2NTFcIixcbiAgICBcInN0YXR1c1wiOiBcIlJldmlld1wiLFxuICAgIFwibWluaW11bUhhcmRmb3JrXCI6IFwibG9uZG9uXCIsXG4gICAgXCJyZXF1aXJlZEVJUHNcIjogWzI5MjldLFxuICAgIFwiZ2FzQ29uZmlnXCI6IHt9LFxuICAgIFwiZ2FzUHJpY2VzXCI6IHt9LFxuICAgIFwidm1cIjoge30sXG4gICAgXCJwb3dcIjoge31cbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD0zNjUxLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/3651.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/3670.js":
/*!********************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/eips/3670.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    \"name\": \"EIP-3670\",\n    \"number\": 3670,\n    \"comment\": \"EOF - Code Validation\",\n    \"url\": \"https://eips.ethereum.org/EIPS/eip-3670\",\n    \"status\": \"Review\",\n    \"minimumHardfork\": \"london\",\n    \"requiredEIPs\": [\n        3540\n    ],\n    \"gasConfig\": {},\n    \"gasPrices\": {},\n    \"vm\": {},\n    \"pow\": {}\n}); //# sourceMappingURL=3670.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vZWlwcy8zNjcwLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZTtJQUNYLFFBQVE7SUFDUixVQUFVO0lBQ1YsV0FBVztJQUNYLE9BQU87SUFDUCxVQUFVO0lBQ1YsbUJBQW1CO0lBQ25CLGdCQUFnQjtRQUFDO0tBQUs7SUFDdEIsYUFBYSxDQUFDO0lBQ2QsYUFBYSxDQUFDO0lBQ2QsTUFBTSxDQUFDO0lBQ1AsT0FBTyxDQUFDO0FBQ1osQ0FBQyxFQUFDLENBQ0YsZ0NBQWdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vZWlwcy8zNjcwLmpzPzRkNGQiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQge1xuICAgIFwibmFtZVwiOiBcIkVJUC0zNjcwXCIsXG4gICAgXCJudW1iZXJcIjogMzY3MCxcbiAgICBcImNvbW1lbnRcIjogXCJFT0YgLSBDb2RlIFZhbGlkYXRpb25cIixcbiAgICBcInVybFwiOiBcImh0dHBzOi8vZWlwcy5ldGhlcmV1bS5vcmcvRUlQUy9laXAtMzY3MFwiLFxuICAgIFwic3RhdHVzXCI6IFwiUmV2aWV3XCIsXG4gICAgXCJtaW5pbXVtSGFyZGZvcmtcIjogXCJsb25kb25cIixcbiAgICBcInJlcXVpcmVkRUlQc1wiOiBbMzU0MF0sXG4gICAgXCJnYXNDb25maWdcIjoge30sXG4gICAgXCJnYXNQcmljZXNcIjoge30sXG4gICAgXCJ2bVwiOiB7fSxcbiAgICBcInBvd1wiOiB7fVxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPTM2NzAuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/3670.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/3675.js":
/*!********************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/eips/3675.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    \"name\": \"EIP-3675\",\n    \"number\": 3675,\n    \"comment\": \"Upgrade consensus to Proof-of-Stake\",\n    \"url\": \"https://eips.ethereum.org/EIPS/eip-3675\",\n    \"status\": \"Final\",\n    \"minimumHardfork\": \"london\",\n    \"requiredEIPs\": [],\n    \"gasConfig\": {},\n    \"gasPrices\": {},\n    \"vm\": {},\n    \"pow\": {}\n}); //# sourceMappingURL=3675.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vZWlwcy8zNjc1LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZTtJQUNYLFFBQVE7SUFDUixVQUFVO0lBQ1YsV0FBVztJQUNYLE9BQU87SUFDUCxVQUFVO0lBQ1YsbUJBQW1CO0lBQ25CLGdCQUFnQixFQUFFO0lBQ2xCLGFBQWEsQ0FBQztJQUNkLGFBQWEsQ0FBQztJQUNkLE1BQU0sQ0FBQztJQUNQLE9BQU8sQ0FBQztBQUNaLENBQUMsRUFBQyxDQUNGLGdDQUFnQyIsInNvdXJjZXMiOlsid2VicGFjazovL2Zyb250ZW5kLy4vbm9kZV9tb2R1bGVzL3dlYjMtZXRoLWFjY291bnRzL2xpYi9lc20vY29tbW9uL2VpcHMvMzY3NS5qcz82NGZjIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IHtcbiAgICBcIm5hbWVcIjogXCJFSVAtMzY3NVwiLFxuICAgIFwibnVtYmVyXCI6IDM2NzUsXG4gICAgXCJjb21tZW50XCI6IFwiVXBncmFkZSBjb25zZW5zdXMgdG8gUHJvb2Ytb2YtU3Rha2VcIixcbiAgICBcInVybFwiOiBcImh0dHBzOi8vZWlwcy5ldGhlcmV1bS5vcmcvRUlQUy9laXAtMzY3NVwiLFxuICAgIFwic3RhdHVzXCI6IFwiRmluYWxcIixcbiAgICBcIm1pbmltdW1IYXJkZm9ya1wiOiBcImxvbmRvblwiLFxuICAgIFwicmVxdWlyZWRFSVBzXCI6IFtdLFxuICAgIFwiZ2FzQ29uZmlnXCI6IHt9LFxuICAgIFwiZ2FzUHJpY2VzXCI6IHt9LFxuICAgIFwidm1cIjoge30sXG4gICAgXCJwb3dcIjoge31cbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD0zNjc1LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/3675.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/3855.js":
/*!********************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/eips/3855.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    \"name\": \"EIP-3855\",\n    \"number\": 3855,\n    \"comment\": \"PUSH0 instruction\",\n    \"url\": \"https://eips.ethereum.org/EIPS/eip-3855\",\n    \"status\": \"Review\",\n    \"minimumHardfork\": \"chainstart\",\n    \"requiredEIPs\": [],\n    \"gasConfig\": {},\n    \"gasPrices\": {\n        \"push0\": {\n            \"v\": 2,\n            \"d\": \"Base fee of the PUSH0 opcode\"\n        }\n    },\n    \"vm\": {},\n    \"pow\": {}\n}); //# sourceMappingURL=3855.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vZWlwcy8zODU1LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZTtJQUNYLFFBQVE7SUFDUixVQUFVO0lBQ1YsV0FBVztJQUNYLE9BQU87SUFDUCxVQUFVO0lBQ1YsbUJBQW1CO0lBQ25CLGdCQUFnQixFQUFFO0lBQ2xCLGFBQWEsQ0FBQztJQUNkLGFBQWE7UUFDVCxTQUFTO1lBQ0wsS0FBSztZQUNMLEtBQUs7UUFDVDtJQUNKO0lBQ0EsTUFBTSxDQUFDO0lBQ1AsT0FBTyxDQUFDO0FBQ1osQ0FBQyxFQUFDLENBQ0YsZ0NBQWdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vZWlwcy8zODU1LmpzPzU0MGMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQge1xuICAgIFwibmFtZVwiOiBcIkVJUC0zODU1XCIsXG4gICAgXCJudW1iZXJcIjogMzg1NSxcbiAgICBcImNvbW1lbnRcIjogXCJQVVNIMCBpbnN0cnVjdGlvblwiLFxuICAgIFwidXJsXCI6IFwiaHR0cHM6Ly9laXBzLmV0aGVyZXVtLm9yZy9FSVBTL2VpcC0zODU1XCIsXG4gICAgXCJzdGF0dXNcIjogXCJSZXZpZXdcIixcbiAgICBcIm1pbmltdW1IYXJkZm9ya1wiOiBcImNoYWluc3RhcnRcIixcbiAgICBcInJlcXVpcmVkRUlQc1wiOiBbXSxcbiAgICBcImdhc0NvbmZpZ1wiOiB7fSxcbiAgICBcImdhc1ByaWNlc1wiOiB7XG4gICAgICAgIFwicHVzaDBcIjoge1xuICAgICAgICAgICAgXCJ2XCI6IDIsXG4gICAgICAgICAgICBcImRcIjogXCJCYXNlIGZlZSBvZiB0aGUgUFVTSDAgb3Bjb2RlXCJcbiAgICAgICAgfVxuICAgIH0sXG4gICAgXCJ2bVwiOiB7fSxcbiAgICBcInBvd1wiOiB7fVxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPTM4NTUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/3855.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/3860.js":
/*!********************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/eips/3860.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    \"name\": \"EIP-3860\",\n    \"number\": 3860,\n    \"comment\": \"Limit and meter initcode\",\n    \"url\": \"https://eips.ethereum.org/EIPS/eip-3860\",\n    \"status\": \"Review\",\n    \"minimumHardfork\": \"spuriousDragon\",\n    \"requiredEIPs\": [],\n    \"gasConfig\": {},\n    \"gasPrices\": {\n        \"initCodeWordCost\": {\n            \"v\": 2,\n            \"d\": \"Gas to pay for each word (32 bytes) of initcode when creating a contract\"\n        }\n    },\n    \"vm\": {\n        \"maxInitCodeSize\": {\n            \"v\": 49152,\n            \"d\": \"Maximum length of initialization code when creating a contract\"\n        }\n    },\n    \"pow\": {}\n}); //# sourceMappingURL=3860.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vZWlwcy8zODYwLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZTtJQUNYLFFBQVE7SUFDUixVQUFVO0lBQ1YsV0FBVztJQUNYLE9BQU87SUFDUCxVQUFVO0lBQ1YsbUJBQW1CO0lBQ25CLGdCQUFnQixFQUFFO0lBQ2xCLGFBQWEsQ0FBQztJQUNkLGFBQWE7UUFDVCxvQkFBb0I7WUFDaEIsS0FBSztZQUNMLEtBQUs7UUFDVDtJQUNKO0lBQ0EsTUFBTTtRQUNGLG1CQUFtQjtZQUNmLEtBQUs7WUFDTCxLQUFLO1FBQ1Q7SUFDSjtJQUNBLE9BQU8sQ0FBQztBQUNaLENBQUMsRUFBQyxDQUNGLGdDQUFnQyIsInNvdXJjZXMiOlsid2VicGFjazovL2Zyb250ZW5kLy4vbm9kZV9tb2R1bGVzL3dlYjMtZXRoLWFjY291bnRzL2xpYi9lc20vY29tbW9uL2VpcHMvMzg2MC5qcz9iYTk1Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IHtcbiAgICBcIm5hbWVcIjogXCJFSVAtMzg2MFwiLFxuICAgIFwibnVtYmVyXCI6IDM4NjAsXG4gICAgXCJjb21tZW50XCI6IFwiTGltaXQgYW5kIG1ldGVyIGluaXRjb2RlXCIsXG4gICAgXCJ1cmxcIjogXCJodHRwczovL2VpcHMuZXRoZXJldW0ub3JnL0VJUFMvZWlwLTM4NjBcIixcbiAgICBcInN0YXR1c1wiOiBcIlJldmlld1wiLFxuICAgIFwibWluaW11bUhhcmRmb3JrXCI6IFwic3B1cmlvdXNEcmFnb25cIixcbiAgICBcInJlcXVpcmVkRUlQc1wiOiBbXSxcbiAgICBcImdhc0NvbmZpZ1wiOiB7fSxcbiAgICBcImdhc1ByaWNlc1wiOiB7XG4gICAgICAgIFwiaW5pdENvZGVXb3JkQ29zdFwiOiB7XG4gICAgICAgICAgICBcInZcIjogMixcbiAgICAgICAgICAgIFwiZFwiOiBcIkdhcyB0byBwYXkgZm9yIGVhY2ggd29yZCAoMzIgYnl0ZXMpIG9mIGluaXRjb2RlIHdoZW4gY3JlYXRpbmcgYSBjb250cmFjdFwiXG4gICAgICAgIH1cbiAgICB9LFxuICAgIFwidm1cIjoge1xuICAgICAgICBcIm1heEluaXRDb2RlU2l6ZVwiOiB7XG4gICAgICAgICAgICBcInZcIjogNDkxNTIsXG4gICAgICAgICAgICBcImRcIjogXCJNYXhpbXVtIGxlbmd0aCBvZiBpbml0aWFsaXphdGlvbiBjb2RlIHdoZW4gY3JlYXRpbmcgYSBjb250cmFjdFwiXG4gICAgICAgIH1cbiAgICB9LFxuICAgIFwicG93XCI6IHt9XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Mzg2MC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/3860.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/4345.js":
/*!********************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/eips/4345.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    \"name\": \"EIP-4345\",\n    \"number\": 4345,\n    \"comment\": \"Difficulty Bomb Delay to June 2022\",\n    \"url\": \"https://eips.ethereum.org/EIPS/eip-4345\",\n    \"status\": \"Final\",\n    \"minimumHardfork\": \"london\",\n    \"gasConfig\": {},\n    \"gasPrices\": {},\n    \"vm\": {},\n    \"pow\": {\n        \"difficultyBombDelay\": {\n            \"v\": 10700000,\n            \"d\": \"the amount of blocks to delay the difficulty bomb with\"\n        }\n    }\n}); //# sourceMappingURL=4345.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vZWlwcy80MzQ1LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZTtJQUNYLFFBQVE7SUFDUixVQUFVO0lBQ1YsV0FBVztJQUNYLE9BQU87SUFDUCxVQUFVO0lBQ1YsbUJBQW1CO0lBQ25CLGFBQWEsQ0FBQztJQUNkLGFBQWEsQ0FBQztJQUNkLE1BQU0sQ0FBQztJQUNQLE9BQU87UUFDSCx1QkFBdUI7WUFDbkIsS0FBSztZQUNMLEtBQUs7UUFDVDtJQUNKO0FBQ0osQ0FBQyxFQUFDLENBQ0YsZ0NBQWdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vZWlwcy80MzQ1LmpzP2FlMGMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQge1xuICAgIFwibmFtZVwiOiBcIkVJUC00MzQ1XCIsXG4gICAgXCJudW1iZXJcIjogNDM0NSxcbiAgICBcImNvbW1lbnRcIjogXCJEaWZmaWN1bHR5IEJvbWIgRGVsYXkgdG8gSnVuZSAyMDIyXCIsXG4gICAgXCJ1cmxcIjogXCJodHRwczovL2VpcHMuZXRoZXJldW0ub3JnL0VJUFMvZWlwLTQzNDVcIixcbiAgICBcInN0YXR1c1wiOiBcIkZpbmFsXCIsXG4gICAgXCJtaW5pbXVtSGFyZGZvcmtcIjogXCJsb25kb25cIixcbiAgICBcImdhc0NvbmZpZ1wiOiB7fSxcbiAgICBcImdhc1ByaWNlc1wiOiB7fSxcbiAgICBcInZtXCI6IHt9LFxuICAgIFwicG93XCI6IHtcbiAgICAgICAgXCJkaWZmaWN1bHR5Qm9tYkRlbGF5XCI6IHtcbiAgICAgICAgICAgIFwidlwiOiAxMDcwMDAwMCxcbiAgICAgICAgICAgIFwiZFwiOiBcInRoZSBhbW91bnQgb2YgYmxvY2tzIHRvIGRlbGF5IHRoZSBkaWZmaWN1bHR5IGJvbWIgd2l0aFwiXG4gICAgICAgIH1cbiAgICB9XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9NDM0NS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/4345.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/4399.js":
/*!********************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/eips/4399.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    \"name\": \"EIP-4399\",\n    \"number\": 4399,\n    \"comment\": \"Supplant DIFFICULTY opcode with PREVRANDAO\",\n    \"url\": \"https://eips.ethereum.org/EIPS/eip-4399\",\n    \"status\": \"Review\",\n    \"minimumHardfork\": \"london\",\n    \"requiredEIPs\": [],\n    \"gasConfig\": {},\n    \"gasPrices\": {},\n    \"vm\": {},\n    \"pow\": {}\n}); //# sourceMappingURL=4399.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vZWlwcy80Mzk5LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZTtJQUNYLFFBQVE7SUFDUixVQUFVO0lBQ1YsV0FBVztJQUNYLE9BQU87SUFDUCxVQUFVO0lBQ1YsbUJBQW1CO0lBQ25CLGdCQUFnQixFQUFFO0lBQ2xCLGFBQWEsQ0FBQztJQUNkLGFBQWEsQ0FBQztJQUNkLE1BQU0sQ0FBQztJQUNQLE9BQU8sQ0FBQztBQUNaLENBQUMsRUFBQyxDQUNGLGdDQUFnQyIsInNvdXJjZXMiOlsid2VicGFjazovL2Zyb250ZW5kLy4vbm9kZV9tb2R1bGVzL3dlYjMtZXRoLWFjY291bnRzL2xpYi9lc20vY29tbW9uL2VpcHMvNDM5OS5qcz84YWFlIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IHtcbiAgICBcIm5hbWVcIjogXCJFSVAtNDM5OVwiLFxuICAgIFwibnVtYmVyXCI6IDQzOTksXG4gICAgXCJjb21tZW50XCI6IFwiU3VwcGxhbnQgRElGRklDVUxUWSBvcGNvZGUgd2l0aCBQUkVWUkFOREFPXCIsXG4gICAgXCJ1cmxcIjogXCJodHRwczovL2VpcHMuZXRoZXJldW0ub3JnL0VJUFMvZWlwLTQzOTlcIixcbiAgICBcInN0YXR1c1wiOiBcIlJldmlld1wiLFxuICAgIFwibWluaW11bUhhcmRmb3JrXCI6IFwibG9uZG9uXCIsXG4gICAgXCJyZXF1aXJlZEVJUHNcIjogW10sXG4gICAgXCJnYXNDb25maWdcIjoge30sXG4gICAgXCJnYXNQcmljZXNcIjoge30sXG4gICAgXCJ2bVwiOiB7fSxcbiAgICBcInBvd1wiOiB7fVxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPTQzOTkuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/4399.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/5133.js":
/*!********************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/eips/5133.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    \"name\": \"EIP-5133\",\n    \"number\": 5133,\n    \"comment\": \"Delaying Difficulty Bomb to mid-September 2022\",\n    \"url\": \"https://eips.ethereum.org/EIPS/eip-5133\",\n    \"status\": \"Draft\",\n    \"minimumHardfork\": \"grayGlacier\",\n    \"gasConfig\": {},\n    \"gasPrices\": {},\n    \"vm\": {},\n    \"pow\": {\n        \"difficultyBombDelay\": {\n            \"v\": 11400000,\n            \"d\": \"the amount of blocks to delay the difficulty bomb with\"\n        }\n    }\n}); //# sourceMappingURL=5133.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vZWlwcy81MTMzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZTtJQUNYLFFBQVE7SUFDUixVQUFVO0lBQ1YsV0FBVztJQUNYLE9BQU87SUFDUCxVQUFVO0lBQ1YsbUJBQW1CO0lBQ25CLGFBQWEsQ0FBQztJQUNkLGFBQWEsQ0FBQztJQUNkLE1BQU0sQ0FBQztJQUNQLE9BQU87UUFDSCx1QkFBdUI7WUFDbkIsS0FBSztZQUNMLEtBQUs7UUFDVDtJQUNKO0FBQ0osQ0FBQyxFQUFDLENBQ0YsZ0NBQWdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vZWlwcy81MTMzLmpzP2M3MTUiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQge1xuICAgIFwibmFtZVwiOiBcIkVJUC01MTMzXCIsXG4gICAgXCJudW1iZXJcIjogNTEzMyxcbiAgICBcImNvbW1lbnRcIjogXCJEZWxheWluZyBEaWZmaWN1bHR5IEJvbWIgdG8gbWlkLVNlcHRlbWJlciAyMDIyXCIsXG4gICAgXCJ1cmxcIjogXCJodHRwczovL2VpcHMuZXRoZXJldW0ub3JnL0VJUFMvZWlwLTUxMzNcIixcbiAgICBcInN0YXR1c1wiOiBcIkRyYWZ0XCIsXG4gICAgXCJtaW5pbXVtSGFyZGZvcmtcIjogXCJncmF5R2xhY2llclwiLFxuICAgIFwiZ2FzQ29uZmlnXCI6IHt9LFxuICAgIFwiZ2FzUHJpY2VzXCI6IHt9LFxuICAgIFwidm1cIjoge30sXG4gICAgXCJwb3dcIjoge1xuICAgICAgICBcImRpZmZpY3VsdHlCb21iRGVsYXlcIjoge1xuICAgICAgICAgICAgXCJ2XCI6IDExNDAwMDAwLFxuICAgICAgICAgICAgXCJkXCI6IFwidGhlIGFtb3VudCBvZiBibG9ja3MgdG8gZGVsYXkgdGhlIGRpZmZpY3VsdHkgYm9tYiB3aXRoXCJcbiAgICAgICAgfVxuICAgIH1cbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD01MTMzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/5133.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/eips/index.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EIPs: () => (/* binding */ EIPs)\n/* harmony export */ });\n/* harmony import */ var _1153_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./1153.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/1153.js\");\n/* harmony import */ var _1559_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./1559.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/1559.js\");\n/* harmony import */ var _2315_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./2315.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/2315.js\");\n/* harmony import */ var _2537_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./2537.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/2537.js\");\n/* harmony import */ var _2565_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./2565.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/2565.js\");\n/* harmony import */ var _2718_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./2718.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/2718.js\");\n/* harmony import */ var _2929_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./2929.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/2929.js\");\n/* harmony import */ var _2930_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./2930.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/2930.js\");\n/* harmony import */ var _3198_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./3198.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/3198.js\");\n/* harmony import */ var _3529_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./3529.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/3529.js\");\n/* harmony import */ var _3540_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./3540.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/3540.js\");\n/* harmony import */ var _3541_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./3541.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/3541.js\");\n/* harmony import */ var _3554_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./3554.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/3554.js\");\n/* harmony import */ var _3607_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./3607.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/3607.js\");\n/* harmony import */ var _3651_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./3651.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/3651.js\");\n/* harmony import */ var _3670_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./3670.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/3670.js\");\n/* harmony import */ var _3675_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./3675.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/3675.js\");\n/* harmony import */ var _3855_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./3855.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/3855.js\");\n/* harmony import */ var _3860_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./3860.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/3860.js\");\n/* harmony import */ var _4345_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./4345.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/4345.js\");\n/* harmony import */ var _4399_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./4399.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/4399.js\");\n/* harmony import */ var _5133_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./5133.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/5133.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst EIPs = {\n    1153: _1153_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"],\n    1559: _1559_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n    2315: _2315_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\n    2537: _2537_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"],\n    2565: _2565_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"],\n    2718: _2718_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"],\n    2929: _2929_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"],\n    2930: _2930_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"],\n    3198: _3198_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"],\n    3529: _3529_js__WEBPACK_IMPORTED_MODULE_9__[\"default\"],\n    3540: _3540_js__WEBPACK_IMPORTED_MODULE_10__[\"default\"],\n    3541: _3541_js__WEBPACK_IMPORTED_MODULE_11__[\"default\"],\n    3554: _3554_js__WEBPACK_IMPORTED_MODULE_12__[\"default\"],\n    3607: _3607_js__WEBPACK_IMPORTED_MODULE_13__[\"default\"],\n    3651: _3651_js__WEBPACK_IMPORTED_MODULE_14__[\"default\"],\n    3670: _3670_js__WEBPACK_IMPORTED_MODULE_15__[\"default\"],\n    3675: _3675_js__WEBPACK_IMPORTED_MODULE_16__[\"default\"],\n    3855: _3855_js__WEBPACK_IMPORTED_MODULE_17__[\"default\"],\n    3860: _3860_js__WEBPACK_IMPORTED_MODULE_18__[\"default\"],\n    4345: _4345_js__WEBPACK_IMPORTED_MODULE_19__[\"default\"],\n    4399: _4399_js__WEBPACK_IMPORTED_MODULE_20__[\"default\"],\n    5133: _5133_js__WEBPACK_IMPORTED_MODULE_21__[\"default\"]\n}; //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vZWlwcy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBOzs7Ozs7Ozs7Ozs7Ozs7QUFlQSxHQUM4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUN2QixNQUFNc0IsT0FBTztJQUNoQixNQUFNdEIsZ0RBQUtBO0lBQ1gsTUFBTUMsZ0RBQUtBO0lBQ1gsTUFBTUMsZ0RBQUtBO0lBQ1gsTUFBTUMsZ0RBQUtBO0lBQ1gsTUFBTUMsZ0RBQUtBO0lBQ1gsTUFBTUMsZ0RBQUtBO0lBQ1gsTUFBTUMsZ0RBQUtBO0lBQ1gsTUFBTUMsZ0RBQUtBO0lBQ1gsTUFBTUMsZ0RBQUtBO0lBQ1gsTUFBTUMsZ0RBQUtBO0lBQ1gsTUFBTUMsaURBQUtBO0lBQ1gsTUFBTUMsaURBQUtBO0lBQ1gsTUFBTUMsaURBQUtBO0lBQ1gsTUFBTUMsaURBQUtBO0lBQ1gsTUFBTUMsaURBQUtBO0lBQ1gsTUFBTUMsaURBQUtBO0lBQ1gsTUFBTUMsaURBQUtBO0lBQ1gsTUFBTUMsaURBQUtBO0lBQ1gsTUFBTUMsaURBQUtBO0lBQ1gsTUFBTUMsaURBQUtBO0lBQ1gsTUFBTUMsaURBQUtBO0lBQ1gsTUFBTUMsaURBQUtBO0FBQ2YsRUFBRSxDQUNGLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL2Zyb250ZW5kLy4vbm9kZV9tb2R1bGVzL3dlYjMtZXRoLWFjY291bnRzL2xpYi9lc20vY29tbW9uL2VpcHMvaW5kZXguanM/NjExNCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuVGhpcyBmaWxlIGlzIHBhcnQgb2Ygd2ViMy5qcy5cblxud2ViMy5qcyBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5XG5pdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnlcbnRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yXG4oYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLlxuXG53ZWIzLmpzIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsXG5idXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZlxuTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZVxuR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG5cbllvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZVxuYWxvbmcgd2l0aCB3ZWIzLmpzLiAgSWYgbm90LCBzZWUgPGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LlxuKi9cbmltcG9ydCBlMTE1MyBmcm9tICcuLzExNTMuanMnO1xuaW1wb3J0IGUxNTU5IGZyb20gJy4vMTU1OS5qcyc7XG5pbXBvcnQgZTIzMTUgZnJvbSAnLi8yMzE1LmpzJztcbmltcG9ydCBlMjUzNyBmcm9tICcuLzI1MzcuanMnO1xuaW1wb3J0IGUyNTY1IGZyb20gJy4vMjU2NS5qcyc7XG5pbXBvcnQgZTI3MTggZnJvbSAnLi8yNzE4LmpzJztcbmltcG9ydCBlMjkyOSBmcm9tICcuLzI5MjkuanMnO1xuaW1wb3J0IGUyOTMwIGZyb20gJy4vMjkzMC5qcyc7XG5pbXBvcnQgZTMxOTggZnJvbSAnLi8zMTk4LmpzJztcbmltcG9ydCBlMzUyOSBmcm9tICcuLzM1MjkuanMnO1xuaW1wb3J0IGUzNTQwIGZyb20gJy4vMzU0MC5qcyc7XG5pbXBvcnQgZTM1NDEgZnJvbSAnLi8zNTQxLmpzJztcbmltcG9ydCBlMzU1NCBmcm9tICcuLzM1NTQuanMnO1xuaW1wb3J0IGUzNjA3IGZyb20gJy4vMzYwNy5qcyc7XG5pbXBvcnQgZTM2NTEgZnJvbSAnLi8zNjUxLmpzJztcbmltcG9ydCBlMzY3MCBmcm9tICcuLzM2NzAuanMnO1xuaW1wb3J0IGUzNjc1IGZyb20gJy4vMzY3NS5qcyc7XG5pbXBvcnQgZTM4NTUgZnJvbSAnLi8zODU1LmpzJztcbmltcG9ydCBlMzg2MCBmcm9tICcuLzM4NjAuanMnO1xuaW1wb3J0IGU0MzQ1IGZyb20gJy4vNDM0NS5qcyc7XG5pbXBvcnQgZTQzOTkgZnJvbSAnLi80Mzk5LmpzJztcbmltcG9ydCBlNTEzMyBmcm9tICcuLzUxMzMuanMnO1xuZXhwb3J0IGNvbnN0IEVJUHMgPSB7XG4gICAgMTE1MzogZTExNTMsXG4gICAgMTU1OTogZTE1NTksXG4gICAgMjMxNTogZTIzMTUsXG4gICAgMjUzNzogZTI1MzcsXG4gICAgMjU2NTogZTI1NjUsXG4gICAgMjcxODogZTI3MTgsXG4gICAgMjkyOTogZTI5MjksXG4gICAgMjkzMDogZTI5MzAsXG4gICAgMzE5ODogZTMxOTgsXG4gICAgMzUyOTogZTM1MjksXG4gICAgMzU0MDogZTM1NDAsXG4gICAgMzU0MTogZTM1NDEsXG4gICAgMzU1NDogZTM1NTQsXG4gICAgMzYwNzogZTM2MDcsXG4gICAgMzY1MTogZTM2NTEsXG4gICAgMzY3MDogZTM2NzAsXG4gICAgMzY3NTogZTM2NzUsXG4gICAgMzg1NTogZTM4NTUsXG4gICAgMzg2MDogZTM4NjAsXG4gICAgNDM0NTogZTQzNDUsXG4gICAgNDM5OTogZTQzOTksXG4gICAgNTEzMzogZTUxMzMsXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbImUxMTUzIiwiZTE1NTkiLCJlMjMxNSIsImUyNTM3IiwiZTI1NjUiLCJlMjcxOCIsImUyOTI5IiwiZTI5MzAiLCJlMzE5OCIsImUzNTI5IiwiZTM1NDAiLCJlMzU0MSIsImUzNTU0IiwiZTM2MDciLCJlMzY1MSIsImUzNjcwIiwiZTM2NzUiLCJlMzg1NSIsImUzODYwIiwiZTQzNDUiLCJlNDM5OSIsImU1MTMzIiwiRUlQcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/enums.js":
/*!****************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/enums.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Chain: () => (/* binding */ Chain),\n/* harmony export */   ConsensusAlgorithm: () => (/* binding */ ConsensusAlgorithm),\n/* harmony export */   ConsensusType: () => (/* binding */ ConsensusType),\n/* harmony export */   CustomChain: () => (/* binding */ CustomChain),\n/* harmony export */   Hardfork: () => (/* binding */ Hardfork)\n/* harmony export */ });\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ var Chain;\n(function(Chain) {\n    Chain[Chain[\"Mainnet\"] = 1] = \"Mainnet\";\n    Chain[Chain[\"Goerli\"] = 5] = \"Goerli\";\n    Chain[Chain[\"Sepolia\"] = 11155111] = \"Sepolia\";\n})(Chain || (Chain = {}));\nvar Hardfork;\n(function(Hardfork) {\n    Hardfork[\"Chainstart\"] = \"chainstart\";\n    Hardfork[\"Homestead\"] = \"homestead\";\n    Hardfork[\"Dao\"] = \"dao\";\n    Hardfork[\"TangerineWhistle\"] = \"tangerineWhistle\";\n    Hardfork[\"SpuriousDragon\"] = \"spuriousDragon\";\n    Hardfork[\"Byzantium\"] = \"byzantium\";\n    Hardfork[\"Constantinople\"] = \"constantinople\";\n    Hardfork[\"Petersburg\"] = \"petersburg\";\n    Hardfork[\"Istanbul\"] = \"istanbul\";\n    Hardfork[\"MuirGlacier\"] = \"muirGlacier\";\n    Hardfork[\"Berlin\"] = \"berlin\";\n    Hardfork[\"London\"] = \"london\";\n    Hardfork[\"ArrowGlacier\"] = \"arrowGlacier\";\n    Hardfork[\"GrayGlacier\"] = \"grayGlacier\";\n    Hardfork[\"MergeForkIdTransition\"] = \"mergeForkIdTransition\";\n    Hardfork[\"Merge\"] = \"merge\";\n    Hardfork[\"Shanghai\"] = \"shanghai\";\n    Hardfork[\"ShardingForkDev\"] = \"shardingFork\";\n})(Hardfork || (Hardfork = {}));\nvar ConsensusType;\n(function(ConsensusType) {\n    ConsensusType[\"ProofOfStake\"] = \"pos\";\n    ConsensusType[\"ProofOfWork\"] = \"pow\";\n    ConsensusType[\"ProofOfAuthority\"] = \"poa\";\n})(ConsensusType || (ConsensusType = {}));\nvar ConsensusAlgorithm;\n(function(ConsensusAlgorithm) {\n    ConsensusAlgorithm[\"Ethash\"] = \"ethash\";\n    ConsensusAlgorithm[\"Clique\"] = \"clique\";\n    ConsensusAlgorithm[\"Casper\"] = \"casper\";\n})(ConsensusAlgorithm || (ConsensusAlgorithm = {}));\nvar CustomChain;\n(function(CustomChain) {\n    /**\n     * Polygon (Matic) Mainnet\n     *\n     * - [Documentation](https://docs.matic.network/docs/develop/network-details/network)\n     */ CustomChain[\"PolygonMainnet\"] = \"polygon-mainnet\";\n    /**\n     * Polygon (Matic) Mumbai Testnet\n     *\n     * - [Documentation](https://docs.matic.network/docs/develop/network-details/network)\n     */ CustomChain[\"PolygonMumbai\"] = \"polygon-mumbai\";\n    /**\n     * Arbitrum Rinkeby Testnet\n     *\n     * - [Documentation](https://developer.offchainlabs.com/docs/public_testnet)\n     */ CustomChain[\"ArbitrumRinkebyTestnet\"] = \"arbitrum-rinkeby-testnet\";\n    /**\n     * Arbitrum One - mainnet for Arbitrum roll-up\n     *\n     * - [Documentation](https://developer.offchainlabs.com/public-chains)\n     */ CustomChain[\"ArbitrumOne\"] = \"arbitrum-one\";\n    /**\n     * xDai EVM sidechain with a native stable token\n     *\n     * - [Documentation](https://www.xdaichain.com/)\n     */ CustomChain[\"xDaiChain\"] = \"x-dai-chain\";\n    /**\n     * Optimistic Kovan - testnet for Optimism roll-up\n     *\n     * - [Documentation](https://community.optimism.io/docs/developers/tutorials.html)\n     */ CustomChain[\"OptimisticKovan\"] = \"optimistic-kovan\";\n    /**\n     * Optimistic Ethereum - mainnet for Optimism roll-up\n     *\n     * - [Documentation](https://community.optimism.io/docs/developers/tutorials.html)\n     */ CustomChain[\"OptimisticEthereum\"] = \"optimistic-ethereum\";\n})(CustomChain || (CustomChain = {})); //# sourceMappingURL=enums.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vZW51bXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTs7Ozs7Ozs7Ozs7Ozs7O0FBZUEsR0FDTyxJQUFJQSxNQUFNO0FBQ2hCLFVBQVVBLEtBQUs7SUFDWkEsS0FBSyxDQUFDQSxLQUFLLENBQUMsVUFBVSxHQUFHLEVBQUUsR0FBRztJQUM5QkEsS0FBSyxDQUFDQSxLQUFLLENBQUMsU0FBUyxHQUFHLEVBQUUsR0FBRztJQUM3QkEsS0FBSyxDQUFDQSxLQUFLLENBQUMsVUFBVSxHQUFHLFNBQVMsR0FBRztBQUN6QyxHQUFHQSxTQUFVQSxDQUFBQSxRQUFRLENBQUM7QUFDZixJQUFJQyxTQUFTO0FBQ25CLFVBQVVBLFFBQVE7SUFDZkEsUUFBUSxDQUFDLGFBQWEsR0FBRztJQUN6QkEsUUFBUSxDQUFDLFlBQVksR0FBRztJQUN4QkEsUUFBUSxDQUFDLE1BQU0sR0FBRztJQUNsQkEsUUFBUSxDQUFDLG1CQUFtQixHQUFHO0lBQy9CQSxRQUFRLENBQUMsaUJBQWlCLEdBQUc7SUFDN0JBLFFBQVEsQ0FBQyxZQUFZLEdBQUc7SUFDeEJBLFFBQVEsQ0FBQyxpQkFBaUIsR0FBRztJQUM3QkEsUUFBUSxDQUFDLGFBQWEsR0FBRztJQUN6QkEsUUFBUSxDQUFDLFdBQVcsR0FBRztJQUN2QkEsUUFBUSxDQUFDLGNBQWMsR0FBRztJQUMxQkEsUUFBUSxDQUFDLFNBQVMsR0FBRztJQUNyQkEsUUFBUSxDQUFDLFNBQVMsR0FBRztJQUNyQkEsUUFBUSxDQUFDLGVBQWUsR0FBRztJQUMzQkEsUUFBUSxDQUFDLGNBQWMsR0FBRztJQUMxQkEsUUFBUSxDQUFDLHdCQUF3QixHQUFHO0lBQ3BDQSxRQUFRLENBQUMsUUFBUSxHQUFHO0lBQ3BCQSxRQUFRLENBQUMsV0FBVyxHQUFHO0lBQ3ZCQSxRQUFRLENBQUMsa0JBQWtCLEdBQUc7QUFDbEMsR0FBR0EsWUFBYUEsQ0FBQUEsV0FBVyxDQUFDO0FBQ3JCLElBQUlDLGNBQWM7QUFDeEIsVUFBVUEsYUFBYTtJQUNwQkEsYUFBYSxDQUFDLGVBQWUsR0FBRztJQUNoQ0EsYUFBYSxDQUFDLGNBQWMsR0FBRztJQUMvQkEsYUFBYSxDQUFDLG1CQUFtQixHQUFHO0FBQ3hDLEdBQUdBLGlCQUFrQkEsQ0FBQUEsZ0JBQWdCLENBQUM7QUFDL0IsSUFBSUMsbUJBQW1CO0FBQzdCLFVBQVVBLGtCQUFrQjtJQUN6QkEsa0JBQWtCLENBQUMsU0FBUyxHQUFHO0lBQy9CQSxrQkFBa0IsQ0FBQyxTQUFTLEdBQUc7SUFDL0JBLGtCQUFrQixDQUFDLFNBQVMsR0FBRztBQUNuQyxHQUFHQSxzQkFBdUJBLENBQUFBLHFCQUFxQixDQUFDO0FBQ3pDLElBQUlDLFlBQVk7QUFDdEIsVUFBVUEsV0FBVztJQUNsQjs7OztLQUlDLEdBQ0RBLFdBQVcsQ0FBQyxpQkFBaUIsR0FBRztJQUNoQzs7OztLQUlDLEdBQ0RBLFdBQVcsQ0FBQyxnQkFBZ0IsR0FBRztJQUMvQjs7OztLQUlDLEdBQ0RBLFdBQVcsQ0FBQyx5QkFBeUIsR0FBRztJQUN4Qzs7OztLQUlDLEdBQ0RBLFdBQVcsQ0FBQyxjQUFjLEdBQUc7SUFDN0I7Ozs7S0FJQyxHQUNEQSxXQUFXLENBQUMsWUFBWSxHQUFHO0lBQzNCOzs7O0tBSUMsR0FDREEsV0FBVyxDQUFDLGtCQUFrQixHQUFHO0lBQ2pDOzs7O0tBSUMsR0FDREEsV0FBVyxDQUFDLHFCQUFxQixHQUFHO0FBQ3hDLEdBQUdBLGVBQWdCQSxDQUFBQSxjQUFjLENBQUMsS0FDbEMsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vZW51bXMuanM/NmE5ZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuVGhpcyBmaWxlIGlzIHBhcnQgb2Ygd2ViMy5qcy5cblxud2ViMy5qcyBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5XG5pdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnlcbnRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yXG4oYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLlxuXG53ZWIzLmpzIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsXG5idXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZlxuTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZVxuR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG5cbllvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZVxuYWxvbmcgd2l0aCB3ZWIzLmpzLiAgSWYgbm90LCBzZWUgPGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LlxuKi9cbmV4cG9ydCB2YXIgQ2hhaW47XG4oZnVuY3Rpb24gKENoYWluKSB7XG4gICAgQ2hhaW5bQ2hhaW5bXCJNYWlubmV0XCJdID0gMV0gPSBcIk1haW5uZXRcIjtcbiAgICBDaGFpbltDaGFpbltcIkdvZXJsaVwiXSA9IDVdID0gXCJHb2VybGlcIjtcbiAgICBDaGFpbltDaGFpbltcIlNlcG9saWFcIl0gPSAxMTE1NTExMV0gPSBcIlNlcG9saWFcIjtcbn0pKENoYWluIHx8IChDaGFpbiA9IHt9KSk7XG5leHBvcnQgdmFyIEhhcmRmb3JrO1xuKGZ1bmN0aW9uIChIYXJkZm9yaykge1xuICAgIEhhcmRmb3JrW1wiQ2hhaW5zdGFydFwiXSA9IFwiY2hhaW5zdGFydFwiO1xuICAgIEhhcmRmb3JrW1wiSG9tZXN0ZWFkXCJdID0gXCJob21lc3RlYWRcIjtcbiAgICBIYXJkZm9ya1tcIkRhb1wiXSA9IFwiZGFvXCI7XG4gICAgSGFyZGZvcmtbXCJUYW5nZXJpbmVXaGlzdGxlXCJdID0gXCJ0YW5nZXJpbmVXaGlzdGxlXCI7XG4gICAgSGFyZGZvcmtbXCJTcHVyaW91c0RyYWdvblwiXSA9IFwic3B1cmlvdXNEcmFnb25cIjtcbiAgICBIYXJkZm9ya1tcIkJ5emFudGl1bVwiXSA9IFwiYnl6YW50aXVtXCI7XG4gICAgSGFyZGZvcmtbXCJDb25zdGFudGlub3BsZVwiXSA9IFwiY29uc3RhbnRpbm9wbGVcIjtcbiAgICBIYXJkZm9ya1tcIlBldGVyc2J1cmdcIl0gPSBcInBldGVyc2J1cmdcIjtcbiAgICBIYXJkZm9ya1tcIklzdGFuYnVsXCJdID0gXCJpc3RhbmJ1bFwiO1xuICAgIEhhcmRmb3JrW1wiTXVpckdsYWNpZXJcIl0gPSBcIm11aXJHbGFjaWVyXCI7XG4gICAgSGFyZGZvcmtbXCJCZXJsaW5cIl0gPSBcImJlcmxpblwiO1xuICAgIEhhcmRmb3JrW1wiTG9uZG9uXCJdID0gXCJsb25kb25cIjtcbiAgICBIYXJkZm9ya1tcIkFycm93R2xhY2llclwiXSA9IFwiYXJyb3dHbGFjaWVyXCI7XG4gICAgSGFyZGZvcmtbXCJHcmF5R2xhY2llclwiXSA9IFwiZ3JheUdsYWNpZXJcIjtcbiAgICBIYXJkZm9ya1tcIk1lcmdlRm9ya0lkVHJhbnNpdGlvblwiXSA9IFwibWVyZ2VGb3JrSWRUcmFuc2l0aW9uXCI7XG4gICAgSGFyZGZvcmtbXCJNZXJnZVwiXSA9IFwibWVyZ2VcIjtcbiAgICBIYXJkZm9ya1tcIlNoYW5naGFpXCJdID0gXCJzaGFuZ2hhaVwiO1xuICAgIEhhcmRmb3JrW1wiU2hhcmRpbmdGb3JrRGV2XCJdID0gXCJzaGFyZGluZ0ZvcmtcIjtcbn0pKEhhcmRmb3JrIHx8IChIYXJkZm9yayA9IHt9KSk7XG5leHBvcnQgdmFyIENvbnNlbnN1c1R5cGU7XG4oZnVuY3Rpb24gKENvbnNlbnN1c1R5cGUpIHtcbiAgICBDb25zZW5zdXNUeXBlW1wiUHJvb2ZPZlN0YWtlXCJdID0gXCJwb3NcIjtcbiAgICBDb25zZW5zdXNUeXBlW1wiUHJvb2ZPZldvcmtcIl0gPSBcInBvd1wiO1xuICAgIENvbnNlbnN1c1R5cGVbXCJQcm9vZk9mQXV0aG9yaXR5XCJdID0gXCJwb2FcIjtcbn0pKENvbnNlbnN1c1R5cGUgfHwgKENvbnNlbnN1c1R5cGUgPSB7fSkpO1xuZXhwb3J0IHZhciBDb25zZW5zdXNBbGdvcml0aG07XG4oZnVuY3Rpb24gKENvbnNlbnN1c0FsZ29yaXRobSkge1xuICAgIENvbnNlbnN1c0FsZ29yaXRobVtcIkV0aGFzaFwiXSA9IFwiZXRoYXNoXCI7XG4gICAgQ29uc2Vuc3VzQWxnb3JpdGhtW1wiQ2xpcXVlXCJdID0gXCJjbGlxdWVcIjtcbiAgICBDb25zZW5zdXNBbGdvcml0aG1bXCJDYXNwZXJcIl0gPSBcImNhc3BlclwiO1xufSkoQ29uc2Vuc3VzQWxnb3JpdGhtIHx8IChDb25zZW5zdXNBbGdvcml0aG0gPSB7fSkpO1xuZXhwb3J0IHZhciBDdXN0b21DaGFpbjtcbihmdW5jdGlvbiAoQ3VzdG9tQ2hhaW4pIHtcbiAgICAvKipcbiAgICAgKiBQb2x5Z29uIChNYXRpYykgTWFpbm5ldFxuICAgICAqXG4gICAgICogLSBbRG9jdW1lbnRhdGlvbl0oaHR0cHM6Ly9kb2NzLm1hdGljLm5ldHdvcmsvZG9jcy9kZXZlbG9wL25ldHdvcmstZGV0YWlscy9uZXR3b3JrKVxuICAgICAqL1xuICAgIEN1c3RvbUNoYWluW1wiUG9seWdvbk1haW5uZXRcIl0gPSBcInBvbHlnb24tbWFpbm5ldFwiO1xuICAgIC8qKlxuICAgICAqIFBvbHlnb24gKE1hdGljKSBNdW1iYWkgVGVzdG5ldFxuICAgICAqXG4gICAgICogLSBbRG9jdW1lbnRhdGlvbl0oaHR0cHM6Ly9kb2NzLm1hdGljLm5ldHdvcmsvZG9jcy9kZXZlbG9wL25ldHdvcmstZGV0YWlscy9uZXR3b3JrKVxuICAgICAqL1xuICAgIEN1c3RvbUNoYWluW1wiUG9seWdvbk11bWJhaVwiXSA9IFwicG9seWdvbi1tdW1iYWlcIjtcbiAgICAvKipcbiAgICAgKiBBcmJpdHJ1bSBSaW5rZWJ5IFRlc3RuZXRcbiAgICAgKlxuICAgICAqIC0gW0RvY3VtZW50YXRpb25dKGh0dHBzOi8vZGV2ZWxvcGVyLm9mZmNoYWlubGFicy5jb20vZG9jcy9wdWJsaWNfdGVzdG5ldClcbiAgICAgKi9cbiAgICBDdXN0b21DaGFpbltcIkFyYml0cnVtUmlua2VieVRlc3RuZXRcIl0gPSBcImFyYml0cnVtLXJpbmtlYnktdGVzdG5ldFwiO1xuICAgIC8qKlxuICAgICAqIEFyYml0cnVtIE9uZSAtIG1haW5uZXQgZm9yIEFyYml0cnVtIHJvbGwtdXBcbiAgICAgKlxuICAgICAqIC0gW0RvY3VtZW50YXRpb25dKGh0dHBzOi8vZGV2ZWxvcGVyLm9mZmNoYWlubGFicy5jb20vcHVibGljLWNoYWlucylcbiAgICAgKi9cbiAgICBDdXN0b21DaGFpbltcIkFyYml0cnVtT25lXCJdID0gXCJhcmJpdHJ1bS1vbmVcIjtcbiAgICAvKipcbiAgICAgKiB4RGFpIEVWTSBzaWRlY2hhaW4gd2l0aCBhIG5hdGl2ZSBzdGFibGUgdG9rZW5cbiAgICAgKlxuICAgICAqIC0gW0RvY3VtZW50YXRpb25dKGh0dHBzOi8vd3d3LnhkYWljaGFpbi5jb20vKVxuICAgICAqL1xuICAgIEN1c3RvbUNoYWluW1wieERhaUNoYWluXCJdID0gXCJ4LWRhaS1jaGFpblwiO1xuICAgIC8qKlxuICAgICAqIE9wdGltaXN0aWMgS292YW4gLSB0ZXN0bmV0IGZvciBPcHRpbWlzbSByb2xsLXVwXG4gICAgICpcbiAgICAgKiAtIFtEb2N1bWVudGF0aW9uXShodHRwczovL2NvbW11bml0eS5vcHRpbWlzbS5pby9kb2NzL2RldmVsb3BlcnMvdHV0b3JpYWxzLmh0bWwpXG4gICAgICovXG4gICAgQ3VzdG9tQ2hhaW5bXCJPcHRpbWlzdGljS292YW5cIl0gPSBcIm9wdGltaXN0aWMta292YW5cIjtcbiAgICAvKipcbiAgICAgKiBPcHRpbWlzdGljIEV0aGVyZXVtIC0gbWFpbm5ldCBmb3IgT3B0aW1pc20gcm9sbC11cFxuICAgICAqXG4gICAgICogLSBbRG9jdW1lbnRhdGlvbl0oaHR0cHM6Ly9jb21tdW5pdHkub3B0aW1pc20uaW8vZG9jcy9kZXZlbG9wZXJzL3R1dG9yaWFscy5odG1sKVxuICAgICAqL1xuICAgIEN1c3RvbUNoYWluW1wiT3B0aW1pc3RpY0V0aGVyZXVtXCJdID0gXCJvcHRpbWlzdGljLWV0aGVyZXVtXCI7XG59KShDdXN0b21DaGFpbiB8fCAoQ3VzdG9tQ2hhaW4gPSB7fSkpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZW51bXMuanMubWFwIl0sIm5hbWVzIjpbIkNoYWluIiwiSGFyZGZvcmsiLCJDb25zZW5zdXNUeXBlIiwiQ29uc2Vuc3VzQWxnb3JpdGhtIiwiQ3VzdG9tQ2hhaW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/enums.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/arrowGlacier.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/hardforks/arrowGlacier.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    \"name\": \"arrowGlacier\",\n    \"comment\": \"HF to delay the difficulty bomb\",\n    \"url\": \"https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/arrow-glacier.md\",\n    \"status\": \"Final\",\n    \"eips\": [\n        4345\n    ],\n    \"gasConfig\": {},\n    \"gasPrices\": {},\n    \"vm\": {},\n    \"pow\": {}\n}); //# sourceMappingURL=arrowGlacier.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vaGFyZGZvcmtzL2Fycm93R2xhY2llci5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsaUVBQWU7SUFDWCxRQUFRO0lBQ1IsV0FBVztJQUNYLE9BQU87SUFDUCxVQUFVO0lBQ1YsUUFBUTtRQUFDO0tBQUs7SUFDZCxhQUFhLENBQUM7SUFDZCxhQUFhLENBQUM7SUFDZCxNQUFNLENBQUM7SUFDUCxPQUFPLENBQUM7QUFDWixDQUFDLEVBQUMsQ0FDRix3Q0FBd0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mcm9udGVuZC8uL25vZGVfbW9kdWxlcy93ZWIzLWV0aC1hY2NvdW50cy9saWIvZXNtL2NvbW1vbi9oYXJkZm9ya3MvYXJyb3dHbGFjaWVyLmpzPzU4NTciXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQge1xuICAgIFwibmFtZVwiOiBcImFycm93R2xhY2llclwiLFxuICAgIFwiY29tbWVudFwiOiBcIkhGIHRvIGRlbGF5IHRoZSBkaWZmaWN1bHR5IGJvbWJcIixcbiAgICBcInVybFwiOiBcImh0dHBzOi8vZ2l0aHViLmNvbS9ldGhlcmV1bS9leGVjdXRpb24tc3BlY3MvYmxvYi9tYXN0ZXIvbmV0d29yay11cGdyYWRlcy9tYWlubmV0LXVwZ3JhZGVzL2Fycm93LWdsYWNpZXIubWRcIixcbiAgICBcInN0YXR1c1wiOiBcIkZpbmFsXCIsXG4gICAgXCJlaXBzXCI6IFs0MzQ1XSxcbiAgICBcImdhc0NvbmZpZ1wiOiB7fSxcbiAgICBcImdhc1ByaWNlc1wiOiB7fSxcbiAgICBcInZtXCI6IHt9LFxuICAgIFwicG93XCI6IHt9XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXJyb3dHbGFjaWVyLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/arrowGlacier.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/berlin.js":
/*!***************************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/hardforks/berlin.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    \"name\": \"berlin\",\n    \"comment\": \"HF targeted for July 2020 following the Muir Glacier HF\",\n    \"url\": \"https://eips.ethereum.org/EIPS/eip-2070\",\n    \"status\": \"Final\",\n    \"eips\": [\n        2565,\n        2929,\n        2718,\n        2930\n    ]\n}); //# sourceMappingURL=berlin.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vaGFyZGZvcmtzL2Jlcmxpbi5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsaUVBQWU7SUFDWCxRQUFRO0lBQ1IsV0FBVztJQUNYLE9BQU87SUFDUCxVQUFVO0lBQ1YsUUFBUTtRQUFDO1FBQU07UUFBTTtRQUFNO0tBQUs7QUFDcEMsQ0FBQyxFQUFDLENBQ0Ysa0NBQWtDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vaGFyZGZvcmtzL2Jlcmxpbi5qcz83MzBjIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IHtcbiAgICBcIm5hbWVcIjogXCJiZXJsaW5cIixcbiAgICBcImNvbW1lbnRcIjogXCJIRiB0YXJnZXRlZCBmb3IgSnVseSAyMDIwIGZvbGxvd2luZyB0aGUgTXVpciBHbGFjaWVyIEhGXCIsXG4gICAgXCJ1cmxcIjogXCJodHRwczovL2VpcHMuZXRoZXJldW0ub3JnL0VJUFMvZWlwLTIwNzBcIixcbiAgICBcInN0YXR1c1wiOiBcIkZpbmFsXCIsXG4gICAgXCJlaXBzXCI6IFsyNTY1LCAyOTI5LCAyNzE4LCAyOTMwXVxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJlcmxpbi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/berlin.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/byzantium.js":
/*!******************************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/hardforks/byzantium.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    \"name\": \"byzantium\",\n    \"comment\": \"Hardfork with new precompiles, instructions and other protocol changes\",\n    \"url\": \"https://eips.ethereum.org/EIPS/eip-609\",\n    \"status\": \"Final\",\n    \"gasConfig\": {},\n    \"gasPrices\": {\n        \"modexpGquaddivisor\": {\n            \"v\": 20,\n            \"d\": \"Gquaddivisor from modexp precompile for gas calculation\"\n        },\n        \"ecAdd\": {\n            \"v\": 500,\n            \"d\": \"Gas costs for curve addition precompile\"\n        },\n        \"ecMul\": {\n            \"v\": 40000,\n            \"d\": \"Gas costs for curve multiplication precompile\"\n        },\n        \"ecPairing\": {\n            \"v\": 100000,\n            \"d\": \"Base gas costs for curve pairing precompile\"\n        },\n        \"ecPairingWord\": {\n            \"v\": 80000,\n            \"d\": \"Gas costs regarding curve pairing precompile input length\"\n        },\n        \"revert\": {\n            \"v\": 0,\n            \"d\": \"Base fee of the REVERT opcode\"\n        },\n        \"staticcall\": {\n            \"v\": 700,\n            \"d\": \"Base fee of the STATICCALL opcode\"\n        },\n        \"returndatasize\": {\n            \"v\": 2,\n            \"d\": \"Base fee of the RETURNDATASIZE opcode\"\n        },\n        \"returndatacopy\": {\n            \"v\": 3,\n            \"d\": \"Base fee of the RETURNDATACOPY opcode\"\n        }\n    },\n    \"vm\": {},\n    \"pow\": {\n        \"minerReward\": {\n            \"v\": \"3000000000000000000\",\n            \"d\": \"the amount a miner get rewarded for mining a block\"\n        },\n        \"difficultyBombDelay\": {\n            \"v\": 3000000,\n            \"d\": \"the amount of blocks to delay the difficulty bomb with\"\n        }\n    }\n}); //# sourceMappingURL=byzantium.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vaGFyZGZvcmtzL2J5emFudGl1bS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsaUVBQWU7SUFDWCxRQUFRO0lBQ1IsV0FBVztJQUNYLE9BQU87SUFDUCxVQUFVO0lBQ1YsYUFBYSxDQUFDO0lBQ2QsYUFBYTtRQUNULHNCQUFzQjtZQUNsQixLQUFLO1lBQ0wsS0FBSztRQUNUO1FBQ0EsU0FBUztZQUNMLEtBQUs7WUFDTCxLQUFLO1FBQ1Q7UUFDQSxTQUFTO1lBQ0wsS0FBSztZQUNMLEtBQUs7UUFDVDtRQUNBLGFBQWE7WUFDVCxLQUFLO1lBQ0wsS0FBSztRQUNUO1FBQ0EsaUJBQWlCO1lBQ2IsS0FBSztZQUNMLEtBQUs7UUFDVDtRQUNBLFVBQVU7WUFDTixLQUFLO1lBQ0wsS0FBSztRQUNUO1FBQ0EsY0FBYztZQUNWLEtBQUs7WUFDTCxLQUFLO1FBQ1Q7UUFDQSxrQkFBa0I7WUFDZCxLQUFLO1lBQ0wsS0FBSztRQUNUO1FBQ0Esa0JBQWtCO1lBQ2QsS0FBSztZQUNMLEtBQUs7UUFDVDtJQUNKO0lBQ0EsTUFBTSxDQUFDO0lBQ1AsT0FBTztRQUNILGVBQWU7WUFDWCxLQUFLO1lBQ0wsS0FBSztRQUNUO1FBQ0EsdUJBQXVCO1lBQ25CLEtBQUs7WUFDTCxLQUFLO1FBQ1Q7SUFDSjtBQUNKLENBQUMsRUFBQyxDQUNGLHFDQUFxQyIsInNvdXJjZXMiOlsid2VicGFjazovL2Zyb250ZW5kLy4vbm9kZV9tb2R1bGVzL3dlYjMtZXRoLWFjY291bnRzL2xpYi9lc20vY29tbW9uL2hhcmRmb3Jrcy9ieXphbnRpdW0uanM/NmQ4MCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCB7XG4gICAgXCJuYW1lXCI6IFwiYnl6YW50aXVtXCIsXG4gICAgXCJjb21tZW50XCI6IFwiSGFyZGZvcmsgd2l0aCBuZXcgcHJlY29tcGlsZXMsIGluc3RydWN0aW9ucyBhbmQgb3RoZXIgcHJvdG9jb2wgY2hhbmdlc1wiLFxuICAgIFwidXJsXCI6IFwiaHR0cHM6Ly9laXBzLmV0aGVyZXVtLm9yZy9FSVBTL2VpcC02MDlcIixcbiAgICBcInN0YXR1c1wiOiBcIkZpbmFsXCIsXG4gICAgXCJnYXNDb25maWdcIjoge30sXG4gICAgXCJnYXNQcmljZXNcIjoge1xuICAgICAgICBcIm1vZGV4cEdxdWFkZGl2aXNvclwiOiB7XG4gICAgICAgICAgICBcInZcIjogMjAsXG4gICAgICAgICAgICBcImRcIjogXCJHcXVhZGRpdmlzb3IgZnJvbSBtb2RleHAgcHJlY29tcGlsZSBmb3IgZ2FzIGNhbGN1bGF0aW9uXCJcbiAgICAgICAgfSxcbiAgICAgICAgXCJlY0FkZFwiOiB7XG4gICAgICAgICAgICBcInZcIjogNTAwLFxuICAgICAgICAgICAgXCJkXCI6IFwiR2FzIGNvc3RzIGZvciBjdXJ2ZSBhZGRpdGlvbiBwcmVjb21waWxlXCJcbiAgICAgICAgfSxcbiAgICAgICAgXCJlY011bFwiOiB7XG4gICAgICAgICAgICBcInZcIjogNDAwMDAsXG4gICAgICAgICAgICBcImRcIjogXCJHYXMgY29zdHMgZm9yIGN1cnZlIG11bHRpcGxpY2F0aW9uIHByZWNvbXBpbGVcIlxuICAgICAgICB9LFxuICAgICAgICBcImVjUGFpcmluZ1wiOiB7XG4gICAgICAgICAgICBcInZcIjogMTAwMDAwLFxuICAgICAgICAgICAgXCJkXCI6IFwiQmFzZSBnYXMgY29zdHMgZm9yIGN1cnZlIHBhaXJpbmcgcHJlY29tcGlsZVwiXG4gICAgICAgIH0sXG4gICAgICAgIFwiZWNQYWlyaW5nV29yZFwiOiB7XG4gICAgICAgICAgICBcInZcIjogODAwMDAsXG4gICAgICAgICAgICBcImRcIjogXCJHYXMgY29zdHMgcmVnYXJkaW5nIGN1cnZlIHBhaXJpbmcgcHJlY29tcGlsZSBpbnB1dCBsZW5ndGhcIlxuICAgICAgICB9LFxuICAgICAgICBcInJldmVydFwiOiB7XG4gICAgICAgICAgICBcInZcIjogMCxcbiAgICAgICAgICAgIFwiZFwiOiBcIkJhc2UgZmVlIG9mIHRoZSBSRVZFUlQgb3Bjb2RlXCJcbiAgICAgICAgfSxcbiAgICAgICAgXCJzdGF0aWNjYWxsXCI6IHtcbiAgICAgICAgICAgIFwidlwiOiA3MDAsXG4gICAgICAgICAgICBcImRcIjogXCJCYXNlIGZlZSBvZiB0aGUgU1RBVElDQ0FMTCBvcGNvZGVcIlxuICAgICAgICB9LFxuICAgICAgICBcInJldHVybmRhdGFzaXplXCI6IHtcbiAgICAgICAgICAgIFwidlwiOiAyLFxuICAgICAgICAgICAgXCJkXCI6IFwiQmFzZSBmZWUgb2YgdGhlIFJFVFVSTkRBVEFTSVpFIG9wY29kZVwiXG4gICAgICAgIH0sXG4gICAgICAgIFwicmV0dXJuZGF0YWNvcHlcIjoge1xuICAgICAgICAgICAgXCJ2XCI6IDMsXG4gICAgICAgICAgICBcImRcIjogXCJCYXNlIGZlZSBvZiB0aGUgUkVUVVJOREFUQUNPUFkgb3Bjb2RlXCJcbiAgICAgICAgfVxuICAgIH0sXG4gICAgXCJ2bVwiOiB7fSxcbiAgICBcInBvd1wiOiB7XG4gICAgICAgIFwibWluZXJSZXdhcmRcIjoge1xuICAgICAgICAgICAgXCJ2XCI6IFwiMzAwMDAwMDAwMDAwMDAwMDAwMFwiLFxuICAgICAgICAgICAgXCJkXCI6IFwidGhlIGFtb3VudCBhIG1pbmVyIGdldCByZXdhcmRlZCBmb3IgbWluaW5nIGEgYmxvY2tcIlxuICAgICAgICB9LFxuICAgICAgICBcImRpZmZpY3VsdHlCb21iRGVsYXlcIjoge1xuICAgICAgICAgICAgXCJ2XCI6IDMwMDAwMDAsXG4gICAgICAgICAgICBcImRcIjogXCJ0aGUgYW1vdW50IG9mIGJsb2NrcyB0byBkZWxheSB0aGUgZGlmZmljdWx0eSBib21iIHdpdGhcIlxuICAgICAgICB9XG4gICAgfVxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJ5emFudGl1bS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/byzantium.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/chainstart.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/hardforks/chainstart.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    \"name\": \"chainstart\",\n    \"comment\": \"Start of the Ethereum main chain\",\n    \"url\": \"\",\n    \"status\": \"\",\n    \"gasConfig\": {\n        \"minGasLimit\": {\n            \"v\": 5000,\n            \"d\": \"Minimum the gas limit may ever be\"\n        },\n        \"gasLimitBoundDivisor\": {\n            \"v\": 1024,\n            \"d\": \"The bound divisor of the gas limit, used in update calculations\"\n        },\n        \"maxRefundQuotient\": {\n            \"v\": 2,\n            \"d\": \"Maximum refund quotient; max tx refund is min(tx.gasUsed/maxRefundQuotient, tx.gasRefund)\"\n        }\n    },\n    \"gasPrices\": {\n        \"base\": {\n            \"v\": 2,\n            \"d\": \"Gas base cost, used e.g. for ChainID opcode (Istanbul)\"\n        },\n        \"tierStep\": {\n            \"v\": [\n                0,\n                2,\n                3,\n                5,\n                8,\n                10,\n                20\n            ],\n            \"d\": \"Once per operation, for a selection of them\"\n        },\n        \"exp\": {\n            \"v\": 10,\n            \"d\": \"Base fee of the EXP opcode\"\n        },\n        \"expByte\": {\n            \"v\": 10,\n            \"d\": \"Times ceil(log256(exponent)) for the EXP instruction\"\n        },\n        \"sha3\": {\n            \"v\": 30,\n            \"d\": \"Base fee of the SHA3 opcode\"\n        },\n        \"sha3Word\": {\n            \"v\": 6,\n            \"d\": \"Once per word of the SHA3 operation's data\"\n        },\n        \"sload\": {\n            \"v\": 50,\n            \"d\": \"Base fee of the SLOAD opcode\"\n        },\n        \"sstoreSet\": {\n            \"v\": 20000,\n            \"d\": \"Once per SSTORE operation if the zeroness changes from zero\"\n        },\n        \"sstoreReset\": {\n            \"v\": 5000,\n            \"d\": \"Once per SSTORE operation if the zeroness does not change from zero\"\n        },\n        \"sstoreRefund\": {\n            \"v\": 15000,\n            \"d\": \"Once per SSTORE operation if the zeroness changes to zero\"\n        },\n        \"jumpdest\": {\n            \"v\": 1,\n            \"d\": \"Base fee of the JUMPDEST opcode\"\n        },\n        \"log\": {\n            \"v\": 375,\n            \"d\": \"Base fee of the LOG opcode\"\n        },\n        \"logData\": {\n            \"v\": 8,\n            \"d\": \"Per byte in a LOG* operation's data\"\n        },\n        \"logTopic\": {\n            \"v\": 375,\n            \"d\": \"Multiplied by the * of the LOG*, per LOG transaction. e.g. LOG0 incurs 0 * c_txLogTopicGas, LOG4 incurs 4 * c_txLogTopicGas\"\n        },\n        \"create\": {\n            \"v\": 32000,\n            \"d\": \"Base fee of the CREATE opcode\"\n        },\n        \"call\": {\n            \"v\": 40,\n            \"d\": \"Base fee of the CALL opcode\"\n        },\n        \"callStipend\": {\n            \"v\": 2300,\n            \"d\": \"Free gas given at beginning of call\"\n        },\n        \"callValueTransfer\": {\n            \"v\": 9000,\n            \"d\": \"Paid for CALL when the value transfor is non-zero\"\n        },\n        \"callNewAccount\": {\n            \"v\": 25000,\n            \"d\": \"Paid for CALL when the destination address didn't exist prior\"\n        },\n        \"selfdestructRefund\": {\n            \"v\": 24000,\n            \"d\": \"Refunded following a selfdestruct operation\"\n        },\n        \"memory\": {\n            \"v\": 3,\n            \"d\": \"Times the address of the (highest referenced byte in memory + 1). NOTE: referencing happens on read, write and in instructions such as RETURN and CALL\"\n        },\n        \"quadCoeffDiv\": {\n            \"v\": 512,\n            \"d\": \"Divisor for the quadratic particle of the memory cost equation\"\n        },\n        \"createData\": {\n            \"v\": 200,\n            \"d\": \"\"\n        },\n        \"tx\": {\n            \"v\": 21000,\n            \"d\": \"Per transaction. NOTE: Not payable on data of calls between transactions\"\n        },\n        \"txCreation\": {\n            \"v\": 32000,\n            \"d\": \"The cost of creating a contract via tx\"\n        },\n        \"txDataZero\": {\n            \"v\": 4,\n            \"d\": \"Per byte of data attached to a transaction that equals zero. NOTE: Not payable on data of calls between transactions\"\n        },\n        \"txDataNonZero\": {\n            \"v\": 68,\n            \"d\": \"Per byte of data attached to a transaction that is not equal to zero. NOTE: Not payable on data of calls between transactions\"\n        },\n        \"copy\": {\n            \"v\": 3,\n            \"d\": \"Multiplied by the number of 32-byte words that are copied (round up) for any *COPY operation and added\"\n        },\n        \"ecRecover\": {\n            \"v\": 3000,\n            \"d\": \"\"\n        },\n        \"sha256\": {\n            \"v\": 60,\n            \"d\": \"\"\n        },\n        \"sha256Word\": {\n            \"v\": 12,\n            \"d\": \"\"\n        },\n        \"ripemd160\": {\n            \"v\": 600,\n            \"d\": \"\"\n        },\n        \"ripemd160Word\": {\n            \"v\": 120,\n            \"d\": \"\"\n        },\n        \"identity\": {\n            \"v\": 15,\n            \"d\": \"\"\n        },\n        \"identityWord\": {\n            \"v\": 3,\n            \"d\": \"\"\n        },\n        \"stop\": {\n            \"v\": 0,\n            \"d\": \"Base fee of the STOP opcode\"\n        },\n        \"add\": {\n            \"v\": 3,\n            \"d\": \"Base fee of the ADD opcode\"\n        },\n        \"mul\": {\n            \"v\": 5,\n            \"d\": \"Base fee of the MUL opcode\"\n        },\n        \"sub\": {\n            \"v\": 3,\n            \"d\": \"Base fee of the SUB opcode\"\n        },\n        \"div\": {\n            \"v\": 5,\n            \"d\": \"Base fee of the DIV opcode\"\n        },\n        \"sdiv\": {\n            \"v\": 5,\n            \"d\": \"Base fee of the SDIV opcode\"\n        },\n        \"mod\": {\n            \"v\": 5,\n            \"d\": \"Base fee of the MOD opcode\"\n        },\n        \"smod\": {\n            \"v\": 5,\n            \"d\": \"Base fee of the SMOD opcode\"\n        },\n        \"addmod\": {\n            \"v\": 8,\n            \"d\": \"Base fee of the ADDMOD opcode\"\n        },\n        \"mulmod\": {\n            \"v\": 8,\n            \"d\": \"Base fee of the MULMOD opcode\"\n        },\n        \"signextend\": {\n            \"v\": 5,\n            \"d\": \"Base fee of the SIGNEXTEND opcode\"\n        },\n        \"lt\": {\n            \"v\": 3,\n            \"d\": \"Base fee of the LT opcode\"\n        },\n        \"gt\": {\n            \"v\": 3,\n            \"d\": \"Base fee of the GT opcode\"\n        },\n        \"slt\": {\n            \"v\": 3,\n            \"d\": \"Base fee of the SLT opcode\"\n        },\n        \"sgt\": {\n            \"v\": 3,\n            \"d\": \"Base fee of the SGT opcode\"\n        },\n        \"eq\": {\n            \"v\": 3,\n            \"d\": \"Base fee of the EQ opcode\"\n        },\n        \"iszero\": {\n            \"v\": 3,\n            \"d\": \"Base fee of the ISZERO opcode\"\n        },\n        \"and\": {\n            \"v\": 3,\n            \"d\": \"Base fee of the AND opcode\"\n        },\n        \"or\": {\n            \"v\": 3,\n            \"d\": \"Base fee of the OR opcode\"\n        },\n        \"xor\": {\n            \"v\": 3,\n            \"d\": \"Base fee of the XOR opcode\"\n        },\n        \"not\": {\n            \"v\": 3,\n            \"d\": \"Base fee of the NOT opcode\"\n        },\n        \"byte\": {\n            \"v\": 3,\n            \"d\": \"Base fee of the BYTE opcode\"\n        },\n        \"address\": {\n            \"v\": 2,\n            \"d\": \"Base fee of the ADDRESS opcode\"\n        },\n        \"balance\": {\n            \"v\": 20,\n            \"d\": \"Base fee of the BALANCE opcode\"\n        },\n        \"origin\": {\n            \"v\": 2,\n            \"d\": \"Base fee of the ORIGIN opcode\"\n        },\n        \"caller\": {\n            \"v\": 2,\n            \"d\": \"Base fee of the CALLER opcode\"\n        },\n        \"callvalue\": {\n            \"v\": 2,\n            \"d\": \"Base fee of the CALLVALUE opcode\"\n        },\n        \"calldataload\": {\n            \"v\": 3,\n            \"d\": \"Base fee of the CALLDATALOAD opcode\"\n        },\n        \"calldatasize\": {\n            \"v\": 2,\n            \"d\": \"Base fee of the CALLDATASIZE opcode\"\n        },\n        \"calldatacopy\": {\n            \"v\": 3,\n            \"d\": \"Base fee of the CALLDATACOPY opcode\"\n        },\n        \"codesize\": {\n            \"v\": 2,\n            \"d\": \"Base fee of the CODESIZE opcode\"\n        },\n        \"codecopy\": {\n            \"v\": 3,\n            \"d\": \"Base fee of the CODECOPY opcode\"\n        },\n        \"gasprice\": {\n            \"v\": 2,\n            \"d\": \"Base fee of the GASPRICE opcode\"\n        },\n        \"extcodesize\": {\n            \"v\": 20,\n            \"d\": \"Base fee of the EXTCODESIZE opcode\"\n        },\n        \"extcodecopy\": {\n            \"v\": 20,\n            \"d\": \"Base fee of the EXTCODECOPY opcode\"\n        },\n        \"blockhash\": {\n            \"v\": 20,\n            \"d\": \"Base fee of the BLOCKHASH opcode\"\n        },\n        \"coinbase\": {\n            \"v\": 2,\n            \"d\": \"Base fee of the COINBASE opcode\"\n        },\n        \"timestamp\": {\n            \"v\": 2,\n            \"d\": \"Base fee of the TIMESTAMP opcode\"\n        },\n        \"number\": {\n            \"v\": 2,\n            \"d\": \"Base fee of the NUMBER opcode\"\n        },\n        \"difficulty\": {\n            \"v\": 2,\n            \"d\": \"Base fee of the DIFFICULTY opcode\"\n        },\n        \"gaslimit\": {\n            \"v\": 2,\n            \"d\": \"Base fee of the GASLIMIT opcode\"\n        },\n        \"pop\": {\n            \"v\": 2,\n            \"d\": \"Base fee of the POP opcode\"\n        },\n        \"mload\": {\n            \"v\": 3,\n            \"d\": \"Base fee of the MLOAD opcode\"\n        },\n        \"mstore\": {\n            \"v\": 3,\n            \"d\": \"Base fee of the MSTORE opcode\"\n        },\n        \"mstore8\": {\n            \"v\": 3,\n            \"d\": \"Base fee of the MSTORE8 opcode\"\n        },\n        \"sstore\": {\n            \"v\": 0,\n            \"d\": \"Base fee of the SSTORE opcode\"\n        },\n        \"jump\": {\n            \"v\": 8,\n            \"d\": \"Base fee of the JUMP opcode\"\n        },\n        \"jumpi\": {\n            \"v\": 10,\n            \"d\": \"Base fee of the JUMPI opcode\"\n        },\n        \"pc\": {\n            \"v\": 2,\n            \"d\": \"Base fee of the PC opcode\"\n        },\n        \"msize\": {\n            \"v\": 2,\n            \"d\": \"Base fee of the MSIZE opcode\"\n        },\n        \"gas\": {\n            \"v\": 2,\n            \"d\": \"Base fee of the GAS opcode\"\n        },\n        \"push\": {\n            \"v\": 3,\n            \"d\": \"Base fee of the PUSH opcode\"\n        },\n        \"dup\": {\n            \"v\": 3,\n            \"d\": \"Base fee of the DUP opcode\"\n        },\n        \"swap\": {\n            \"v\": 3,\n            \"d\": \"Base fee of the SWAP opcode\"\n        },\n        \"callcode\": {\n            \"v\": 40,\n            \"d\": \"Base fee of the CALLCODE opcode\"\n        },\n        \"return\": {\n            \"v\": 0,\n            \"d\": \"Base fee of the RETURN opcode\"\n        },\n        \"invalid\": {\n            \"v\": 0,\n            \"d\": \"Base fee of the INVALID opcode\"\n        },\n        \"selfdestruct\": {\n            \"v\": 0,\n            \"d\": \"Base fee of the SELFDESTRUCT opcode\"\n        }\n    },\n    \"vm\": {\n        \"stackLimit\": {\n            \"v\": 1024,\n            \"d\": \"Maximum size of VM stack allowed\"\n        },\n        \"callCreateDepth\": {\n            \"v\": 1024,\n            \"d\": \"Maximum depth of call/create stack\"\n        },\n        \"maxExtraDataSize\": {\n            \"v\": 32,\n            \"d\": \"Maximum size extra data may be after Genesis\"\n        }\n    },\n    \"pow\": {\n        \"minimumDifficulty\": {\n            \"v\": 131072,\n            \"d\": \"The minimum that the difficulty may ever be\"\n        },\n        \"difficultyBoundDivisor\": {\n            \"v\": 2048,\n            \"d\": \"The bound divisor of the difficulty, used in the update calculations\"\n        },\n        \"durationLimit\": {\n            \"v\": 13,\n            \"d\": \"The decision boundary on the blocktime duration used to determine whether difficulty should go up or not\"\n        },\n        \"epochDuration\": {\n            \"v\": 30000,\n            \"d\": \"Duration between proof-of-work epochs\"\n        },\n        \"timebombPeriod\": {\n            \"v\": 100000,\n            \"d\": \"Exponential difficulty timebomb period\"\n        },\n        \"minerReward\": {\n            \"v\": \"5000000000000000000\",\n            \"d\": \"the amount a miner get rewarded for mining a block\"\n        },\n        \"difficultyBombDelay\": {\n            \"v\": 0,\n            \"d\": \"the amount of blocks to delay the difficulty bomb with\"\n        }\n    }\n}); //# sourceMappingURL=chainstart.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/chainstart.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/constantinople.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/hardforks/constantinople.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    \"name\": \"constantinople\",\n    \"comment\": \"Postponed hardfork including EIP-1283 (SSTORE gas metering changes)\",\n    \"url\": \"https://eips.ethereum.org/EIPS/eip-1013\",\n    \"status\": \"Final\",\n    \"gasConfig\": {},\n    \"gasPrices\": {\n        \"netSstoreNoopGas\": {\n            \"v\": 200,\n            \"d\": \"Once per SSTORE operation if the value doesn't change\"\n        },\n        \"netSstoreInitGas\": {\n            \"v\": 20000,\n            \"d\": \"Once per SSTORE operation from clean zero\"\n        },\n        \"netSstoreCleanGas\": {\n            \"v\": 5000,\n            \"d\": \"Once per SSTORE operation from clean non-zero\"\n        },\n        \"netSstoreDirtyGas\": {\n            \"v\": 200,\n            \"d\": \"Once per SSTORE operation from dirty\"\n        },\n        \"netSstoreClearRefund\": {\n            \"v\": 15000,\n            \"d\": \"Once per SSTORE operation for clearing an originally existing storage slot\"\n        },\n        \"netSstoreResetRefund\": {\n            \"v\": 4800,\n            \"d\": \"Once per SSTORE operation for resetting to the original non-zero value\"\n        },\n        \"netSstoreResetClearRefund\": {\n            \"v\": 19800,\n            \"d\": \"Once per SSTORE operation for resetting to the original zero value\"\n        },\n        \"shl\": {\n            \"v\": 3,\n            \"d\": \"Base fee of the SHL opcode\"\n        },\n        \"shr\": {\n            \"v\": 3,\n            \"d\": \"Base fee of the SHR opcode\"\n        },\n        \"sar\": {\n            \"v\": 3,\n            \"d\": \"Base fee of the SAR opcode\"\n        },\n        \"extcodehash\": {\n            \"v\": 400,\n            \"d\": \"Base fee of the EXTCODEHASH opcode\"\n        },\n        \"create2\": {\n            \"v\": 32000,\n            \"d\": \"Base fee of the CREATE2 opcode\"\n        }\n    },\n    \"vm\": {},\n    \"pow\": {\n        \"minerReward\": {\n            \"v\": \"2000000000000000000\",\n            \"d\": \"The amount a miner gets rewarded for mining a block\"\n        },\n        \"difficultyBombDelay\": {\n            \"v\": 5000000,\n            \"d\": \"the amount of blocks to delay the difficulty bomb with\"\n        }\n    }\n}); //# sourceMappingURL=constantinople.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vaGFyZGZvcmtzL2NvbnN0YW50aW5vcGxlLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZTtJQUNYLFFBQVE7SUFDUixXQUFXO0lBQ1gsT0FBTztJQUNQLFVBQVU7SUFDVixhQUFhLENBQUM7SUFDZCxhQUFhO1FBQ1Qsb0JBQW9CO1lBQ2hCLEtBQUs7WUFDTCxLQUFLO1FBQ1Q7UUFDQSxvQkFBb0I7WUFDaEIsS0FBSztZQUNMLEtBQUs7UUFDVDtRQUNBLHFCQUFxQjtZQUNqQixLQUFLO1lBQ0wsS0FBSztRQUNUO1FBQ0EscUJBQXFCO1lBQ2pCLEtBQUs7WUFDTCxLQUFLO1FBQ1Q7UUFDQSx3QkFBd0I7WUFDcEIsS0FBSztZQUNMLEtBQUs7UUFDVDtRQUNBLHdCQUF3QjtZQUNwQixLQUFLO1lBQ0wsS0FBSztRQUNUO1FBQ0EsNkJBQTZCO1lBQ3pCLEtBQUs7WUFDTCxLQUFLO1FBQ1Q7UUFDQSxPQUFPO1lBQ0gsS0FBSztZQUNMLEtBQUs7UUFDVDtRQUNBLE9BQU87WUFDSCxLQUFLO1lBQ0wsS0FBSztRQUNUO1FBQ0EsT0FBTztZQUNILEtBQUs7WUFDTCxLQUFLO1FBQ1Q7UUFDQSxlQUFlO1lBQ1gsS0FBSztZQUNMLEtBQUs7UUFDVDtRQUNBLFdBQVc7WUFDUCxLQUFLO1lBQ0wsS0FBSztRQUNUO0lBQ0o7SUFDQSxNQUFNLENBQUM7SUFDUCxPQUFPO1FBQ0gsZUFBZTtZQUNYLEtBQUs7WUFDTCxLQUFLO1FBQ1Q7UUFDQSx1QkFBdUI7WUFDbkIsS0FBSztZQUNMLEtBQUs7UUFDVDtJQUNKO0FBQ0osQ0FBQyxFQUFDLENBQ0YsMENBQTBDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vaGFyZGZvcmtzL2NvbnN0YW50aW5vcGxlLmpzPzdjZDciXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQge1xuICAgIFwibmFtZVwiOiBcImNvbnN0YW50aW5vcGxlXCIsXG4gICAgXCJjb21tZW50XCI6IFwiUG9zdHBvbmVkIGhhcmRmb3JrIGluY2x1ZGluZyBFSVAtMTI4MyAoU1NUT1JFIGdhcyBtZXRlcmluZyBjaGFuZ2VzKVwiLFxuICAgIFwidXJsXCI6IFwiaHR0cHM6Ly9laXBzLmV0aGVyZXVtLm9yZy9FSVBTL2VpcC0xMDEzXCIsXG4gICAgXCJzdGF0dXNcIjogXCJGaW5hbFwiLFxuICAgIFwiZ2FzQ29uZmlnXCI6IHt9LFxuICAgIFwiZ2FzUHJpY2VzXCI6IHtcbiAgICAgICAgXCJuZXRTc3RvcmVOb29wR2FzXCI6IHtcbiAgICAgICAgICAgIFwidlwiOiAyMDAsXG4gICAgICAgICAgICBcImRcIjogXCJPbmNlIHBlciBTU1RPUkUgb3BlcmF0aW9uIGlmIHRoZSB2YWx1ZSBkb2Vzbid0IGNoYW5nZVwiXG4gICAgICAgIH0sXG4gICAgICAgIFwibmV0U3N0b3JlSW5pdEdhc1wiOiB7XG4gICAgICAgICAgICBcInZcIjogMjAwMDAsXG4gICAgICAgICAgICBcImRcIjogXCJPbmNlIHBlciBTU1RPUkUgb3BlcmF0aW9uIGZyb20gY2xlYW4gemVyb1wiXG4gICAgICAgIH0sXG4gICAgICAgIFwibmV0U3N0b3JlQ2xlYW5HYXNcIjoge1xuICAgICAgICAgICAgXCJ2XCI6IDUwMDAsXG4gICAgICAgICAgICBcImRcIjogXCJPbmNlIHBlciBTU1RPUkUgb3BlcmF0aW9uIGZyb20gY2xlYW4gbm9uLXplcm9cIlxuICAgICAgICB9LFxuICAgICAgICBcIm5ldFNzdG9yZURpcnR5R2FzXCI6IHtcbiAgICAgICAgICAgIFwidlwiOiAyMDAsXG4gICAgICAgICAgICBcImRcIjogXCJPbmNlIHBlciBTU1RPUkUgb3BlcmF0aW9uIGZyb20gZGlydHlcIlxuICAgICAgICB9LFxuICAgICAgICBcIm5ldFNzdG9yZUNsZWFyUmVmdW5kXCI6IHtcbiAgICAgICAgICAgIFwidlwiOiAxNTAwMCxcbiAgICAgICAgICAgIFwiZFwiOiBcIk9uY2UgcGVyIFNTVE9SRSBvcGVyYXRpb24gZm9yIGNsZWFyaW5nIGFuIG9yaWdpbmFsbHkgZXhpc3Rpbmcgc3RvcmFnZSBzbG90XCJcbiAgICAgICAgfSxcbiAgICAgICAgXCJuZXRTc3RvcmVSZXNldFJlZnVuZFwiOiB7XG4gICAgICAgICAgICBcInZcIjogNDgwMCxcbiAgICAgICAgICAgIFwiZFwiOiBcIk9uY2UgcGVyIFNTVE9SRSBvcGVyYXRpb24gZm9yIHJlc2V0dGluZyB0byB0aGUgb3JpZ2luYWwgbm9uLXplcm8gdmFsdWVcIlxuICAgICAgICB9LFxuICAgICAgICBcIm5ldFNzdG9yZVJlc2V0Q2xlYXJSZWZ1bmRcIjoge1xuICAgICAgICAgICAgXCJ2XCI6IDE5ODAwLFxuICAgICAgICAgICAgXCJkXCI6IFwiT25jZSBwZXIgU1NUT1JFIG9wZXJhdGlvbiBmb3IgcmVzZXR0aW5nIHRvIHRoZSBvcmlnaW5hbCB6ZXJvIHZhbHVlXCJcbiAgICAgICAgfSxcbiAgICAgICAgXCJzaGxcIjoge1xuICAgICAgICAgICAgXCJ2XCI6IDMsXG4gICAgICAgICAgICBcImRcIjogXCJCYXNlIGZlZSBvZiB0aGUgU0hMIG9wY29kZVwiXG4gICAgICAgIH0sXG4gICAgICAgIFwic2hyXCI6IHtcbiAgICAgICAgICAgIFwidlwiOiAzLFxuICAgICAgICAgICAgXCJkXCI6IFwiQmFzZSBmZWUgb2YgdGhlIFNIUiBvcGNvZGVcIlxuICAgICAgICB9LFxuICAgICAgICBcInNhclwiOiB7XG4gICAgICAgICAgICBcInZcIjogMyxcbiAgICAgICAgICAgIFwiZFwiOiBcIkJhc2UgZmVlIG9mIHRoZSBTQVIgb3Bjb2RlXCJcbiAgICAgICAgfSxcbiAgICAgICAgXCJleHRjb2RlaGFzaFwiOiB7XG4gICAgICAgICAgICBcInZcIjogNDAwLFxuICAgICAgICAgICAgXCJkXCI6IFwiQmFzZSBmZWUgb2YgdGhlIEVYVENPREVIQVNIIG9wY29kZVwiXG4gICAgICAgIH0sXG4gICAgICAgIFwiY3JlYXRlMlwiOiB7XG4gICAgICAgICAgICBcInZcIjogMzIwMDAsXG4gICAgICAgICAgICBcImRcIjogXCJCYXNlIGZlZSBvZiB0aGUgQ1JFQVRFMiBvcGNvZGVcIlxuICAgICAgICB9XG4gICAgfSxcbiAgICBcInZtXCI6IHt9LFxuICAgIFwicG93XCI6IHtcbiAgICAgICAgXCJtaW5lclJld2FyZFwiOiB7XG4gICAgICAgICAgICBcInZcIjogXCIyMDAwMDAwMDAwMDAwMDAwMDAwXCIsXG4gICAgICAgICAgICBcImRcIjogXCJUaGUgYW1vdW50IGEgbWluZXIgZ2V0cyByZXdhcmRlZCBmb3IgbWluaW5nIGEgYmxvY2tcIlxuICAgICAgICB9LFxuICAgICAgICBcImRpZmZpY3VsdHlCb21iRGVsYXlcIjoge1xuICAgICAgICAgICAgXCJ2XCI6IDUwMDAwMDAsXG4gICAgICAgICAgICBcImRcIjogXCJ0aGUgYW1vdW50IG9mIGJsb2NrcyB0byBkZWxheSB0aGUgZGlmZmljdWx0eSBib21iIHdpdGhcIlxuICAgICAgICB9XG4gICAgfVxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvbnN0YW50aW5vcGxlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/constantinople.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/dao.js":
/*!************************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/hardforks/dao.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    \"name\": \"dao\",\n    \"comment\": \"DAO rescue hardfork\",\n    \"url\": \"https://eips.ethereum.org/EIPS/eip-779\",\n    \"status\": \"Final\",\n    \"gasConfig\": {},\n    \"gasPrices\": {},\n    \"vm\": {},\n    \"pow\": {}\n}); //# sourceMappingURL=dao.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vaGFyZGZvcmtzL2Rhby5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsaUVBQWU7SUFDWCxRQUFRO0lBQ1IsV0FBVztJQUNYLE9BQU87SUFDUCxVQUFVO0lBQ1YsYUFBYSxDQUFDO0lBQ2QsYUFBYSxDQUFDO0lBQ2QsTUFBTSxDQUFDO0lBQ1AsT0FBTyxDQUFDO0FBQ1osQ0FBQyxFQUFDLENBQ0YsK0JBQStCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vaGFyZGZvcmtzL2Rhby5qcz9mMmU0Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IHtcbiAgICBcIm5hbWVcIjogXCJkYW9cIixcbiAgICBcImNvbW1lbnRcIjogXCJEQU8gcmVzY3VlIGhhcmRmb3JrXCIsXG4gICAgXCJ1cmxcIjogXCJodHRwczovL2VpcHMuZXRoZXJldW0ub3JnL0VJUFMvZWlwLTc3OVwiLFxuICAgIFwic3RhdHVzXCI6IFwiRmluYWxcIixcbiAgICBcImdhc0NvbmZpZ1wiOiB7fSxcbiAgICBcImdhc1ByaWNlc1wiOiB7fSxcbiAgICBcInZtXCI6IHt9LFxuICAgIFwicG93XCI6IHt9XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGFvLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/dao.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/grayGlacier.js":
/*!********************************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/hardforks/grayGlacier.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    \"name\": \"grayGlacier\",\n    \"comment\": \"Delaying the difficulty bomb to Mid September 2022\",\n    \"url\": \"https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/gray-glacier.md\",\n    \"status\": \"Draft\",\n    \"eips\": [\n        5133\n    ],\n    \"gasConfig\": {},\n    \"gasPrices\": {},\n    \"vm\": {},\n    \"pow\": {}\n}); //# sourceMappingURL=grayGlacier.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vaGFyZGZvcmtzL2dyYXlHbGFjaWVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZTtJQUNYLFFBQVE7SUFDUixXQUFXO0lBQ1gsT0FBTztJQUNQLFVBQVU7SUFDVixRQUFRO1FBQUM7S0FBSztJQUNkLGFBQWEsQ0FBQztJQUNkLGFBQWEsQ0FBQztJQUNkLE1BQU0sQ0FBQztJQUNQLE9BQU8sQ0FBQztBQUNaLENBQUMsRUFBQyxDQUNGLHVDQUF1QyIsInNvdXJjZXMiOlsid2VicGFjazovL2Zyb250ZW5kLy4vbm9kZV9tb2R1bGVzL3dlYjMtZXRoLWFjY291bnRzL2xpYi9lc20vY29tbW9uL2hhcmRmb3Jrcy9ncmF5R2xhY2llci5qcz83Zjk1Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IHtcbiAgICBcIm5hbWVcIjogXCJncmF5R2xhY2llclwiLFxuICAgIFwiY29tbWVudFwiOiBcIkRlbGF5aW5nIHRoZSBkaWZmaWN1bHR5IGJvbWIgdG8gTWlkIFNlcHRlbWJlciAyMDIyXCIsXG4gICAgXCJ1cmxcIjogXCJodHRwczovL2dpdGh1Yi5jb20vZXRoZXJldW0vZXhlY3V0aW9uLXNwZWNzL2Jsb2IvbWFzdGVyL25ldHdvcmstdXBncmFkZXMvbWFpbm5ldC11cGdyYWRlcy9ncmF5LWdsYWNpZXIubWRcIixcbiAgICBcInN0YXR1c1wiOiBcIkRyYWZ0XCIsXG4gICAgXCJlaXBzXCI6IFs1MTMzXSxcbiAgICBcImdhc0NvbmZpZ1wiOiB7fSxcbiAgICBcImdhc1ByaWNlc1wiOiB7fSxcbiAgICBcInZtXCI6IHt9LFxuICAgIFwicG93XCI6IHt9XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z3JheUdsYWNpZXIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/grayGlacier.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/homestead.js":
/*!******************************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/hardforks/homestead.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    \"name\": \"homestead\",\n    \"comment\": \"Homestead hardfork with protocol and network changes\",\n    \"url\": \"https://eips.ethereum.org/EIPS/eip-606\",\n    \"status\": \"Final\",\n    \"gasConfig\": {},\n    \"gasPrices\": {\n        \"delegatecall\": {\n            \"v\": 40,\n            \"d\": \"Base fee of the DELEGATECALL opcode\"\n        }\n    },\n    \"vm\": {},\n    \"pow\": {}\n}); //# sourceMappingURL=homestead.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vaGFyZGZvcmtzL2hvbWVzdGVhZC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsaUVBQWU7SUFDWCxRQUFRO0lBQ1IsV0FBVztJQUNYLE9BQU87SUFDUCxVQUFVO0lBQ1YsYUFBYSxDQUFDO0lBQ2QsYUFBYTtRQUNULGdCQUFnQjtZQUNaLEtBQUs7WUFDTCxLQUFLO1FBQ1Q7SUFDSjtJQUNBLE1BQU0sQ0FBQztJQUNQLE9BQU8sQ0FBQztBQUNaLENBQUMsRUFBQyxDQUNGLHFDQUFxQyIsInNvdXJjZXMiOlsid2VicGFjazovL2Zyb250ZW5kLy4vbm9kZV9tb2R1bGVzL3dlYjMtZXRoLWFjY291bnRzL2xpYi9lc20vY29tbW9uL2hhcmRmb3Jrcy9ob21lc3RlYWQuanM/ZmU2YyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCB7XG4gICAgXCJuYW1lXCI6IFwiaG9tZXN0ZWFkXCIsXG4gICAgXCJjb21tZW50XCI6IFwiSG9tZXN0ZWFkIGhhcmRmb3JrIHdpdGggcHJvdG9jb2wgYW5kIG5ldHdvcmsgY2hhbmdlc1wiLFxuICAgIFwidXJsXCI6IFwiaHR0cHM6Ly9laXBzLmV0aGVyZXVtLm9yZy9FSVBTL2VpcC02MDZcIixcbiAgICBcInN0YXR1c1wiOiBcIkZpbmFsXCIsXG4gICAgXCJnYXNDb25maWdcIjoge30sXG4gICAgXCJnYXNQcmljZXNcIjoge1xuICAgICAgICBcImRlbGVnYXRlY2FsbFwiOiB7XG4gICAgICAgICAgICBcInZcIjogNDAsXG4gICAgICAgICAgICBcImRcIjogXCJCYXNlIGZlZSBvZiB0aGUgREVMRUdBVEVDQUxMIG9wY29kZVwiXG4gICAgICAgIH1cbiAgICB9LFxuICAgIFwidm1cIjoge30sXG4gICAgXCJwb3dcIjoge31cbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1ob21lc3RlYWQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/homestead.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/index.js":
/*!**************************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/hardforks/index.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   hardforks: () => (/* binding */ hardforks)\n/* harmony export */ });\n/* harmony import */ var _chainstart_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chainstart.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/chainstart.js\");\n/* harmony import */ var _dao_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dao.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/dao.js\");\n/* harmony import */ var _homestead_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./homestead.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/homestead.js\");\n/* harmony import */ var _tangerineWhistle_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./tangerineWhistle.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/tangerineWhistle.js\");\n/* harmony import */ var _spuriousDragon_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./spuriousDragon.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/spuriousDragon.js\");\n/* harmony import */ var _byzantium_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./byzantium.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/byzantium.js\");\n/* harmony import */ var _constantinople_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./constantinople.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/constantinople.js\");\n/* harmony import */ var _petersburg_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./petersburg.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/petersburg.js\");\n/* harmony import */ var _istanbul_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./istanbul.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/istanbul.js\");\n/* harmony import */ var _muirGlacier_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./muirGlacier.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/muirGlacier.js\");\n/* harmony import */ var _berlin_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./berlin.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/berlin.js\");\n/* harmony import */ var _london_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./london.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/london.js\");\n/* harmony import */ var _shanghai_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./shanghai.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/shanghai.js\");\n/* harmony import */ var _arrowGlacier_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./arrowGlacier.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/arrowGlacier.js\");\n/* harmony import */ var _grayGlacier_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./grayGlacier.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/grayGlacier.js\");\n/* harmony import */ var _mergeForkIdTransition_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./mergeForkIdTransition.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/mergeForkIdTransition.js\");\n/* harmony import */ var _merge_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./merge.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/merge.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst hardforks = {\n    chainstart: _chainstart_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"],\n    homestead: _homestead_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\n    dao: _dao_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n    tangerineWhistle: _tangerineWhistle_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"],\n    spuriousDragon: _spuriousDragon_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"],\n    byzantium: _byzantium_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"],\n    constantinople: _constantinople_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"],\n    petersburg: _petersburg_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"],\n    istanbul: _istanbul_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"],\n    muirGlacier: _muirGlacier_js__WEBPACK_IMPORTED_MODULE_9__[\"default\"],\n    berlin: _berlin_js__WEBPACK_IMPORTED_MODULE_10__[\"default\"],\n    london: _london_js__WEBPACK_IMPORTED_MODULE_11__[\"default\"],\n    shanghai: _shanghai_js__WEBPACK_IMPORTED_MODULE_12__[\"default\"],\n    arrowGlacier: _arrowGlacier_js__WEBPACK_IMPORTED_MODULE_13__[\"default\"],\n    grayGlacier: _grayGlacier_js__WEBPACK_IMPORTED_MODULE_14__[\"default\"],\n    mergeForkIdTransition: _mergeForkIdTransition_js__WEBPACK_IMPORTED_MODULE_15__[\"default\"],\n    merge: _merge_js__WEBPACK_IMPORTED_MODULE_16__[\"default\"]\n}; //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vaGFyZGZvcmtzL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBOzs7Ozs7Ozs7Ozs7Ozs7QUFlQSxHQUN5QztBQUNkO0FBQ1k7QUFDYztBQUNKO0FBQ1Y7QUFDVTtBQUNSO0FBQ0o7QUFDTTtBQUNWO0FBQ0E7QUFDSTtBQUNRO0FBQ0Y7QUFDb0I7QUFDaEM7QUFDeEIsTUFBTWlCLFlBQVk7SUFDckJqQixVQUFVQSx3REFBQUE7SUFDVkUsU0FBU0EsdURBQUFBO0lBQ1RELEdBQUdBLGlEQUFBQTtJQUNIRSxnQkFBZ0JBLDhEQUFBQTtJQUNoQkMsY0FBY0EsNERBQUFBO0lBQ2RDLFNBQVNBLHVEQUFBQTtJQUNUQyxjQUFjQSw0REFBQUE7SUFDZEMsVUFBVUEsd0RBQUFBO0lBQ1ZDLFFBQVFBLHNEQUFBQTtJQUNSQyxXQUFXQSx5REFBQUE7SUFDWEMsTUFBTUEscURBQUFBO0lBQ05DLE1BQU1BLHFEQUFBQTtJQUNOQyxRQUFRQSx1REFBQUE7SUFDUkMsWUFBWUEsMkRBQUFBO0lBQ1pDLFdBQVdBLDBEQUFBQTtJQUNYQyxxQkFBcUJBLG9FQUFBQTtJQUNyQkMsS0FBS0Esb0RBQUFBO0FBQ1QsRUFBRSxDQUNGLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL2Zyb250ZW5kLy4vbm9kZV9tb2R1bGVzL3dlYjMtZXRoLWFjY291bnRzL2xpYi9lc20vY29tbW9uL2hhcmRmb3Jrcy9pbmRleC5qcz9jYjI2Il0sInNvdXJjZXNDb250ZW50IjpbIi8qXG5UaGlzIGZpbGUgaXMgcGFydCBvZiB3ZWIzLmpzLlxuXG53ZWIzLmpzIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnlcbml0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieVxudGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSwgb3JcbihhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uXG5cbndlYjMuanMgaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCxcbmJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mXG5NRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlXG5HTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy5cblxuWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG5hbG9uZyB3aXRoIHdlYjMuanMuICBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uXG4qL1xuaW1wb3J0IGNoYWluc3RhcnQgZnJvbSAnLi9jaGFpbnN0YXJ0LmpzJztcbmltcG9ydCBkYW8gZnJvbSAnLi9kYW8uanMnO1xuaW1wb3J0IGhvbWVzdGVhZCBmcm9tICcuL2hvbWVzdGVhZC5qcyc7XG5pbXBvcnQgdGFuZ2VyaW5lV2hpc3RsZSBmcm9tICcuL3RhbmdlcmluZVdoaXN0bGUuanMnO1xuaW1wb3J0IHNwdXJpb3VzRHJhZ29uIGZyb20gJy4vc3B1cmlvdXNEcmFnb24uanMnO1xuaW1wb3J0IGJ5emFudGl1bSBmcm9tICcuL2J5emFudGl1bS5qcyc7XG5pbXBvcnQgY29uc3RhbnRpbm9wbGUgZnJvbSAnLi9jb25zdGFudGlub3BsZS5qcyc7XG5pbXBvcnQgcGV0ZXJzYnVyZyBmcm9tICcuL3BldGVyc2J1cmcuanMnO1xuaW1wb3J0IGlzdGFuYnVsIGZyb20gJy4vaXN0YW5idWwuanMnO1xuaW1wb3J0IG11aXJHbGFjaWVyIGZyb20gJy4vbXVpckdsYWNpZXIuanMnO1xuaW1wb3J0IGJlcmxpbiBmcm9tICcuL2Jlcmxpbi5qcyc7XG5pbXBvcnQgbG9uZG9uIGZyb20gJy4vbG9uZG9uLmpzJztcbmltcG9ydCBzaGFuZ2hhaSBmcm9tICcuL3NoYW5naGFpLmpzJztcbmltcG9ydCBhcnJvd0dsYWNpZXIgZnJvbSAnLi9hcnJvd0dsYWNpZXIuanMnO1xuaW1wb3J0IGdyYXlHbGFjaWVyIGZyb20gJy4vZ3JheUdsYWNpZXIuanMnO1xuaW1wb3J0IG1lcmdlRm9ya0lkVHJhbnNpdGlvbiBmcm9tICcuL21lcmdlRm9ya0lkVHJhbnNpdGlvbi5qcyc7XG5pbXBvcnQgbWVyZ2UgZnJvbSAnLi9tZXJnZS5qcyc7XG5leHBvcnQgY29uc3QgaGFyZGZvcmtzID0ge1xuICAgIGNoYWluc3RhcnQsXG4gICAgaG9tZXN0ZWFkLFxuICAgIGRhbyxcbiAgICB0YW5nZXJpbmVXaGlzdGxlLFxuICAgIHNwdXJpb3VzRHJhZ29uLFxuICAgIGJ5emFudGl1bSxcbiAgICBjb25zdGFudGlub3BsZSxcbiAgICBwZXRlcnNidXJnLFxuICAgIGlzdGFuYnVsLFxuICAgIG11aXJHbGFjaWVyLFxuICAgIGJlcmxpbixcbiAgICBsb25kb24sXG4gICAgc2hhbmdoYWksXG4gICAgYXJyb3dHbGFjaWVyLFxuICAgIGdyYXlHbGFjaWVyLFxuICAgIG1lcmdlRm9ya0lkVHJhbnNpdGlvbixcbiAgICBtZXJnZSxcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOlsiY2hhaW5zdGFydCIsImRhbyIsImhvbWVzdGVhZCIsInRhbmdlcmluZVdoaXN0bGUiLCJzcHVyaW91c0RyYWdvbiIsImJ5emFudGl1bSIsImNvbnN0YW50aW5vcGxlIiwicGV0ZXJzYnVyZyIsImlzdGFuYnVsIiwibXVpckdsYWNpZXIiLCJiZXJsaW4iLCJsb25kb24iLCJzaGFuZ2hhaSIsImFycm93R2xhY2llciIsImdyYXlHbGFjaWVyIiwibWVyZ2VGb3JrSWRUcmFuc2l0aW9uIiwibWVyZ2UiLCJoYXJkZm9ya3MiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/istanbul.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/hardforks/istanbul.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    \"name\": \"istanbul\",\n    \"comment\": \"HF targeted for December 2019 following the Constantinople/Petersburg HF\",\n    \"url\": \"https://eips.ethereum.org/EIPS/eip-1679\",\n    \"status\": \"Final\",\n    \"gasConfig\": {},\n    \"gasPrices\": {\n        \"blake2Round\": {\n            \"v\": 1,\n            \"d\": \"Gas cost per round for the Blake2 F precompile\"\n        },\n        \"ecAdd\": {\n            \"v\": 150,\n            \"d\": \"Gas costs for curve addition precompile\"\n        },\n        \"ecMul\": {\n            \"v\": 6000,\n            \"d\": \"Gas costs for curve multiplication precompile\"\n        },\n        \"ecPairing\": {\n            \"v\": 45000,\n            \"d\": \"Base gas costs for curve pairing precompile\"\n        },\n        \"ecPairingWord\": {\n            \"v\": 34000,\n            \"d\": \"Gas costs regarding curve pairing precompile input length\"\n        },\n        \"txDataNonZero\": {\n            \"v\": 16,\n            \"d\": \"Per byte of data attached to a transaction that is not equal to zero. NOTE: Not payable on data of calls between transactions\"\n        },\n        \"sstoreSentryGasEIP2200\": {\n            \"v\": 2300,\n            \"d\": \"Minimum gas required to be present for an SSTORE call, not consumed\"\n        },\n        \"sstoreNoopGasEIP2200\": {\n            \"v\": 800,\n            \"d\": \"Once per SSTORE operation if the value doesn't change\"\n        },\n        \"sstoreDirtyGasEIP2200\": {\n            \"v\": 800,\n            \"d\": \"Once per SSTORE operation if a dirty value is changed\"\n        },\n        \"sstoreInitGasEIP2200\": {\n            \"v\": 20000,\n            \"d\": \"Once per SSTORE operation from clean zero to non-zero\"\n        },\n        \"sstoreInitRefundEIP2200\": {\n            \"v\": 19200,\n            \"d\": \"Once per SSTORE operation for resetting to the original zero value\"\n        },\n        \"sstoreCleanGasEIP2200\": {\n            \"v\": 5000,\n            \"d\": \"Once per SSTORE operation from clean non-zero to something else\"\n        },\n        \"sstoreCleanRefundEIP2200\": {\n            \"v\": 4200,\n            \"d\": \"Once per SSTORE operation for resetting to the original non-zero value\"\n        },\n        \"sstoreClearRefundEIP2200\": {\n            \"v\": 15000,\n            \"d\": \"Once per SSTORE operation for clearing an originally existing storage slot\"\n        },\n        \"balance\": {\n            \"v\": 700,\n            \"d\": \"Base fee of the BALANCE opcode\"\n        },\n        \"extcodehash\": {\n            \"v\": 700,\n            \"d\": \"Base fee of the EXTCODEHASH opcode\"\n        },\n        \"chainid\": {\n            \"v\": 2,\n            \"d\": \"Base fee of the CHAINID opcode\"\n        },\n        \"selfbalance\": {\n            \"v\": 5,\n            \"d\": \"Base fee of the SELFBALANCE opcode\"\n        },\n        \"sload\": {\n            \"v\": 800,\n            \"d\": \"Base fee of the SLOAD opcode\"\n        }\n    },\n    \"vm\": {},\n    \"pow\": {}\n}); //# sourceMappingURL=istanbul.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vaGFyZGZvcmtzL2lzdGFuYnVsLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZTtJQUNYLFFBQVE7SUFDUixXQUFXO0lBQ1gsT0FBTztJQUNQLFVBQVU7SUFDVixhQUFhLENBQUM7SUFDZCxhQUFhO1FBQ1QsZUFBZTtZQUNYLEtBQUs7WUFDTCxLQUFLO1FBQ1Q7UUFDQSxTQUFTO1lBQ0wsS0FBSztZQUNMLEtBQUs7UUFDVDtRQUNBLFNBQVM7WUFDTCxLQUFLO1lBQ0wsS0FBSztRQUNUO1FBQ0EsYUFBYTtZQUNULEtBQUs7WUFDTCxLQUFLO1FBQ1Q7UUFDQSxpQkFBaUI7WUFDYixLQUFLO1lBQ0wsS0FBSztRQUNUO1FBQ0EsaUJBQWlCO1lBQ2IsS0FBSztZQUNMLEtBQUs7UUFDVDtRQUNBLDBCQUEwQjtZQUN0QixLQUFLO1lBQ0wsS0FBSztRQUNUO1FBQ0Esd0JBQXdCO1lBQ3BCLEtBQUs7WUFDTCxLQUFLO1FBQ1Q7UUFDQSx5QkFBeUI7WUFDckIsS0FBSztZQUNMLEtBQUs7UUFDVDtRQUNBLHdCQUF3QjtZQUNwQixLQUFLO1lBQ0wsS0FBSztRQUNUO1FBQ0EsMkJBQTJCO1lBQ3ZCLEtBQUs7WUFDTCxLQUFLO1FBQ1Q7UUFDQSx5QkFBeUI7WUFDckIsS0FBSztZQUNMLEtBQUs7UUFDVDtRQUNBLDRCQUE0QjtZQUN4QixLQUFLO1lBQ0wsS0FBSztRQUNUO1FBQ0EsNEJBQTRCO1lBQ3hCLEtBQUs7WUFDTCxLQUFLO1FBQ1Q7UUFDQSxXQUFXO1lBQ1AsS0FBSztZQUNMLEtBQUs7UUFDVDtRQUNBLGVBQWU7WUFDWCxLQUFLO1lBQ0wsS0FBSztRQUNUO1FBQ0EsV0FBVztZQUNQLEtBQUs7WUFDTCxLQUFLO1FBQ1Q7UUFDQSxlQUFlO1lBQ1gsS0FBSztZQUNMLEtBQUs7UUFDVDtRQUNBLFNBQVM7WUFDTCxLQUFLO1lBQ0wsS0FBSztRQUNUO0lBQ0o7SUFDQSxNQUFNLENBQUM7SUFDUCxPQUFPLENBQUM7QUFDWixDQUFDLEVBQUMsQ0FDRixvQ0FBb0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mcm9udGVuZC8uL25vZGVfbW9kdWxlcy93ZWIzLWV0aC1hY2NvdW50cy9saWIvZXNtL2NvbW1vbi9oYXJkZm9ya3MvaXN0YW5idWwuanM/YTFkZiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCB7XG4gICAgXCJuYW1lXCI6IFwiaXN0YW5idWxcIixcbiAgICBcImNvbW1lbnRcIjogXCJIRiB0YXJnZXRlZCBmb3IgRGVjZW1iZXIgMjAxOSBmb2xsb3dpbmcgdGhlIENvbnN0YW50aW5vcGxlL1BldGVyc2J1cmcgSEZcIixcbiAgICBcInVybFwiOiBcImh0dHBzOi8vZWlwcy5ldGhlcmV1bS5vcmcvRUlQUy9laXAtMTY3OVwiLFxuICAgIFwic3RhdHVzXCI6IFwiRmluYWxcIixcbiAgICBcImdhc0NvbmZpZ1wiOiB7fSxcbiAgICBcImdhc1ByaWNlc1wiOiB7XG4gICAgICAgIFwiYmxha2UyUm91bmRcIjoge1xuICAgICAgICAgICAgXCJ2XCI6IDEsXG4gICAgICAgICAgICBcImRcIjogXCJHYXMgY29zdCBwZXIgcm91bmQgZm9yIHRoZSBCbGFrZTIgRiBwcmVjb21waWxlXCJcbiAgICAgICAgfSxcbiAgICAgICAgXCJlY0FkZFwiOiB7XG4gICAgICAgICAgICBcInZcIjogMTUwLFxuICAgICAgICAgICAgXCJkXCI6IFwiR2FzIGNvc3RzIGZvciBjdXJ2ZSBhZGRpdGlvbiBwcmVjb21waWxlXCJcbiAgICAgICAgfSxcbiAgICAgICAgXCJlY011bFwiOiB7XG4gICAgICAgICAgICBcInZcIjogNjAwMCxcbiAgICAgICAgICAgIFwiZFwiOiBcIkdhcyBjb3N0cyBmb3IgY3VydmUgbXVsdGlwbGljYXRpb24gcHJlY29tcGlsZVwiXG4gICAgICAgIH0sXG4gICAgICAgIFwiZWNQYWlyaW5nXCI6IHtcbiAgICAgICAgICAgIFwidlwiOiA0NTAwMCxcbiAgICAgICAgICAgIFwiZFwiOiBcIkJhc2UgZ2FzIGNvc3RzIGZvciBjdXJ2ZSBwYWlyaW5nIHByZWNvbXBpbGVcIlxuICAgICAgICB9LFxuICAgICAgICBcImVjUGFpcmluZ1dvcmRcIjoge1xuICAgICAgICAgICAgXCJ2XCI6IDM0MDAwLFxuICAgICAgICAgICAgXCJkXCI6IFwiR2FzIGNvc3RzIHJlZ2FyZGluZyBjdXJ2ZSBwYWlyaW5nIHByZWNvbXBpbGUgaW5wdXQgbGVuZ3RoXCJcbiAgICAgICAgfSxcbiAgICAgICAgXCJ0eERhdGFOb25aZXJvXCI6IHtcbiAgICAgICAgICAgIFwidlwiOiAxNixcbiAgICAgICAgICAgIFwiZFwiOiBcIlBlciBieXRlIG9mIGRhdGEgYXR0YWNoZWQgdG8gYSB0cmFuc2FjdGlvbiB0aGF0IGlzIG5vdCBlcXVhbCB0byB6ZXJvLiBOT1RFOiBOb3QgcGF5YWJsZSBvbiBkYXRhIG9mIGNhbGxzIGJldHdlZW4gdHJhbnNhY3Rpb25zXCJcbiAgICAgICAgfSxcbiAgICAgICAgXCJzc3RvcmVTZW50cnlHYXNFSVAyMjAwXCI6IHtcbiAgICAgICAgICAgIFwidlwiOiAyMzAwLFxuICAgICAgICAgICAgXCJkXCI6IFwiTWluaW11bSBnYXMgcmVxdWlyZWQgdG8gYmUgcHJlc2VudCBmb3IgYW4gU1NUT1JFIGNhbGwsIG5vdCBjb25zdW1lZFwiXG4gICAgICAgIH0sXG4gICAgICAgIFwic3N0b3JlTm9vcEdhc0VJUDIyMDBcIjoge1xuICAgICAgICAgICAgXCJ2XCI6IDgwMCxcbiAgICAgICAgICAgIFwiZFwiOiBcIk9uY2UgcGVyIFNTVE9SRSBvcGVyYXRpb24gaWYgdGhlIHZhbHVlIGRvZXNuJ3QgY2hhbmdlXCJcbiAgICAgICAgfSxcbiAgICAgICAgXCJzc3RvcmVEaXJ0eUdhc0VJUDIyMDBcIjoge1xuICAgICAgICAgICAgXCJ2XCI6IDgwMCxcbiAgICAgICAgICAgIFwiZFwiOiBcIk9uY2UgcGVyIFNTVE9SRSBvcGVyYXRpb24gaWYgYSBkaXJ0eSB2YWx1ZSBpcyBjaGFuZ2VkXCJcbiAgICAgICAgfSxcbiAgICAgICAgXCJzc3RvcmVJbml0R2FzRUlQMjIwMFwiOiB7XG4gICAgICAgICAgICBcInZcIjogMjAwMDAsXG4gICAgICAgICAgICBcImRcIjogXCJPbmNlIHBlciBTU1RPUkUgb3BlcmF0aW9uIGZyb20gY2xlYW4gemVybyB0byBub24temVyb1wiXG4gICAgICAgIH0sXG4gICAgICAgIFwic3N0b3JlSW5pdFJlZnVuZEVJUDIyMDBcIjoge1xuICAgICAgICAgICAgXCJ2XCI6IDE5MjAwLFxuICAgICAgICAgICAgXCJkXCI6IFwiT25jZSBwZXIgU1NUT1JFIG9wZXJhdGlvbiBmb3IgcmVzZXR0aW5nIHRvIHRoZSBvcmlnaW5hbCB6ZXJvIHZhbHVlXCJcbiAgICAgICAgfSxcbiAgICAgICAgXCJzc3RvcmVDbGVhbkdhc0VJUDIyMDBcIjoge1xuICAgICAgICAgICAgXCJ2XCI6IDUwMDAsXG4gICAgICAgICAgICBcImRcIjogXCJPbmNlIHBlciBTU1RPUkUgb3BlcmF0aW9uIGZyb20gY2xlYW4gbm9uLXplcm8gdG8gc29tZXRoaW5nIGVsc2VcIlxuICAgICAgICB9LFxuICAgICAgICBcInNzdG9yZUNsZWFuUmVmdW5kRUlQMjIwMFwiOiB7XG4gICAgICAgICAgICBcInZcIjogNDIwMCxcbiAgICAgICAgICAgIFwiZFwiOiBcIk9uY2UgcGVyIFNTVE9SRSBvcGVyYXRpb24gZm9yIHJlc2V0dGluZyB0byB0aGUgb3JpZ2luYWwgbm9uLXplcm8gdmFsdWVcIlxuICAgICAgICB9LFxuICAgICAgICBcInNzdG9yZUNsZWFyUmVmdW5kRUlQMjIwMFwiOiB7XG4gICAgICAgICAgICBcInZcIjogMTUwMDAsXG4gICAgICAgICAgICBcImRcIjogXCJPbmNlIHBlciBTU1RPUkUgb3BlcmF0aW9uIGZvciBjbGVhcmluZyBhbiBvcmlnaW5hbGx5IGV4aXN0aW5nIHN0b3JhZ2Ugc2xvdFwiXG4gICAgICAgIH0sXG4gICAgICAgIFwiYmFsYW5jZVwiOiB7XG4gICAgICAgICAgICBcInZcIjogNzAwLFxuICAgICAgICAgICAgXCJkXCI6IFwiQmFzZSBmZWUgb2YgdGhlIEJBTEFOQ0Ugb3Bjb2RlXCJcbiAgICAgICAgfSxcbiAgICAgICAgXCJleHRjb2RlaGFzaFwiOiB7XG4gICAgICAgICAgICBcInZcIjogNzAwLFxuICAgICAgICAgICAgXCJkXCI6IFwiQmFzZSBmZWUgb2YgdGhlIEVYVENPREVIQVNIIG9wY29kZVwiXG4gICAgICAgIH0sXG4gICAgICAgIFwiY2hhaW5pZFwiOiB7XG4gICAgICAgICAgICBcInZcIjogMixcbiAgICAgICAgICAgIFwiZFwiOiBcIkJhc2UgZmVlIG9mIHRoZSBDSEFJTklEIG9wY29kZVwiXG4gICAgICAgIH0sXG4gICAgICAgIFwic2VsZmJhbGFuY2VcIjoge1xuICAgICAgICAgICAgXCJ2XCI6IDUsXG4gICAgICAgICAgICBcImRcIjogXCJCYXNlIGZlZSBvZiB0aGUgU0VMRkJBTEFOQ0Ugb3Bjb2RlXCJcbiAgICAgICAgfSxcbiAgICAgICAgXCJzbG9hZFwiOiB7XG4gICAgICAgICAgICBcInZcIjogODAwLFxuICAgICAgICAgICAgXCJkXCI6IFwiQmFzZSBmZWUgb2YgdGhlIFNMT0FEIG9wY29kZVwiXG4gICAgICAgIH1cbiAgICB9LFxuICAgIFwidm1cIjoge30sXG4gICAgXCJwb3dcIjoge31cbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pc3RhbmJ1bC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/istanbul.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/london.js":
/*!***************************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/hardforks/london.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    \"name\": \"london\",\n    \"comment\": \"HF targeted for July 2021 following the Berlin fork\",\n    \"url\": \"https://github.com/ethereum/eth1.0-specs/blob/master/network-upgrades/mainnet-upgrades/london.md\",\n    \"status\": \"Final\",\n    \"eips\": [\n        1559,\n        3198,\n        3529,\n        3541\n    ]\n}); //# sourceMappingURL=london.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vaGFyZGZvcmtzL2xvbmRvbi5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsaUVBQWU7SUFDWCxRQUFRO0lBQ1IsV0FBVztJQUNYLE9BQU87SUFDUCxVQUFVO0lBQ1YsUUFBUTtRQUFDO1FBQU07UUFBTTtRQUFNO0tBQUs7QUFDcEMsQ0FBQyxFQUFDLENBQ0Ysa0NBQWtDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vaGFyZGZvcmtzL2xvbmRvbi5qcz85OGExIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IHtcbiAgICBcIm5hbWVcIjogXCJsb25kb25cIixcbiAgICBcImNvbW1lbnRcIjogXCJIRiB0YXJnZXRlZCBmb3IgSnVseSAyMDIxIGZvbGxvd2luZyB0aGUgQmVybGluIGZvcmtcIixcbiAgICBcInVybFwiOiBcImh0dHBzOi8vZ2l0aHViLmNvbS9ldGhlcmV1bS9ldGgxLjAtc3BlY3MvYmxvYi9tYXN0ZXIvbmV0d29yay11cGdyYWRlcy9tYWlubmV0LXVwZ3JhZGVzL2xvbmRvbi5tZFwiLFxuICAgIFwic3RhdHVzXCI6IFwiRmluYWxcIixcbiAgICBcImVpcHNcIjogWzE1NTksIDMxOTgsIDM1MjksIDM1NDFdXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bG9uZG9uLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/london.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/merge.js":
/*!**************************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/hardforks/merge.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    \"name\": \"merge\",\n    \"comment\": \"Hardfork to upgrade the consensus mechanism to Proof-of-Stake\",\n    \"url\": \"https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/merge.md\",\n    \"status\": \"Final\",\n    \"consensus\": {\n        \"type\": \"pos\",\n        \"algorithm\": \"casper\",\n        \"casper\": {}\n    },\n    \"eips\": [\n        3675,\n        4399\n    ]\n}); //# sourceMappingURL=merge.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vaGFyZGZvcmtzL21lcmdlLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZTtJQUNYLFFBQVE7SUFDUixXQUFXO0lBQ1gsT0FBTztJQUNQLFVBQVU7SUFDVixhQUFhO1FBQ1QsUUFBUTtRQUNSLGFBQWE7UUFDYixVQUFVLENBQUM7SUFDZjtJQUNBLFFBQVE7UUFBQztRQUFNO0tBQUs7QUFDeEIsQ0FBQyxFQUFDLENBQ0YsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vaGFyZGZvcmtzL21lcmdlLmpzPzM0ZWEiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQge1xuICAgIFwibmFtZVwiOiBcIm1lcmdlXCIsXG4gICAgXCJjb21tZW50XCI6IFwiSGFyZGZvcmsgdG8gdXBncmFkZSB0aGUgY29uc2Vuc3VzIG1lY2hhbmlzbSB0byBQcm9vZi1vZi1TdGFrZVwiLFxuICAgIFwidXJsXCI6IFwiaHR0cHM6Ly9naXRodWIuY29tL2V0aGVyZXVtL2V4ZWN1dGlvbi1zcGVjcy9ibG9iL21hc3Rlci9uZXR3b3JrLXVwZ3JhZGVzL21haW5uZXQtdXBncmFkZXMvbWVyZ2UubWRcIixcbiAgICBcInN0YXR1c1wiOiBcIkZpbmFsXCIsXG4gICAgXCJjb25zZW5zdXNcIjoge1xuICAgICAgICBcInR5cGVcIjogXCJwb3NcIixcbiAgICAgICAgXCJhbGdvcml0aG1cIjogXCJjYXNwZXJcIixcbiAgICAgICAgXCJjYXNwZXJcIjoge31cbiAgICB9LFxuICAgIFwiZWlwc1wiOiBbMzY3NSwgNDM5OV1cbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1tZXJnZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/merge.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/mergeForkIdTransition.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/hardforks/mergeForkIdTransition.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    \"name\": \"mergeForkIdTransition\",\n    \"comment\": \"Pre-merge hardfork to fork off non-upgraded clients\",\n    \"url\": \"https://eips.ethereum.org/EIPS/eip-3675\",\n    \"status\": \"Draft\",\n    \"eips\": []\n}); //# sourceMappingURL=mergeForkIdTransition.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vaGFyZGZvcmtzL21lcmdlRm9ya0lkVHJhbnNpdGlvbi5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsaUVBQWU7SUFDWCxRQUFRO0lBQ1IsV0FBVztJQUNYLE9BQU87SUFDUCxVQUFVO0lBQ1YsUUFBUSxFQUFFO0FBQ2QsQ0FBQyxFQUFDLENBQ0YsaURBQWlEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vaGFyZGZvcmtzL21lcmdlRm9ya0lkVHJhbnNpdGlvbi5qcz84NzI4Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IHtcbiAgICBcIm5hbWVcIjogXCJtZXJnZUZvcmtJZFRyYW5zaXRpb25cIixcbiAgICBcImNvbW1lbnRcIjogXCJQcmUtbWVyZ2UgaGFyZGZvcmsgdG8gZm9yayBvZmYgbm9uLXVwZ3JhZGVkIGNsaWVudHNcIixcbiAgICBcInVybFwiOiBcImh0dHBzOi8vZWlwcy5ldGhlcmV1bS5vcmcvRUlQUy9laXAtMzY3NVwiLFxuICAgIFwic3RhdHVzXCI6IFwiRHJhZnRcIixcbiAgICBcImVpcHNcIjogW11cbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1tZXJnZUZvcmtJZFRyYW5zaXRpb24uanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/mergeForkIdTransition.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/muirGlacier.js":
/*!********************************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/hardforks/muirGlacier.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    \"name\": \"muirGlacier\",\n    \"comment\": \"HF to delay the difficulty bomb\",\n    \"url\": \"https://eips.ethereum.org/EIPS/eip-2384\",\n    \"status\": \"Final\",\n    \"gasConfig\": {},\n    \"gasPrices\": {},\n    \"vm\": {},\n    \"pow\": {\n        \"difficultyBombDelay\": {\n            \"v\": 9000000,\n            \"d\": \"the amount of blocks to delay the difficulty bomb with\"\n        }\n    }\n}); //# sourceMappingURL=muirGlacier.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vaGFyZGZvcmtzL211aXJHbGFjaWVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZTtJQUNYLFFBQVE7SUFDUixXQUFXO0lBQ1gsT0FBTztJQUNQLFVBQVU7SUFDVixhQUFhLENBQUM7SUFDZCxhQUFhLENBQUM7SUFDZCxNQUFNLENBQUM7SUFDUCxPQUFPO1FBQ0gsdUJBQXVCO1lBQ25CLEtBQUs7WUFDTCxLQUFLO1FBQ1Q7SUFDSjtBQUNKLENBQUMsRUFBQyxDQUNGLHVDQUF1QyIsInNvdXJjZXMiOlsid2VicGFjazovL2Zyb250ZW5kLy4vbm9kZV9tb2R1bGVzL3dlYjMtZXRoLWFjY291bnRzL2xpYi9lc20vY29tbW9uL2hhcmRmb3Jrcy9tdWlyR2xhY2llci5qcz8xYTQ2Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IHtcbiAgICBcIm5hbWVcIjogXCJtdWlyR2xhY2llclwiLFxuICAgIFwiY29tbWVudFwiOiBcIkhGIHRvIGRlbGF5IHRoZSBkaWZmaWN1bHR5IGJvbWJcIixcbiAgICBcInVybFwiOiBcImh0dHBzOi8vZWlwcy5ldGhlcmV1bS5vcmcvRUlQUy9laXAtMjM4NFwiLFxuICAgIFwic3RhdHVzXCI6IFwiRmluYWxcIixcbiAgICBcImdhc0NvbmZpZ1wiOiB7fSxcbiAgICBcImdhc1ByaWNlc1wiOiB7fSxcbiAgICBcInZtXCI6IHt9LFxuICAgIFwicG93XCI6IHtcbiAgICAgICAgXCJkaWZmaWN1bHR5Qm9tYkRlbGF5XCI6IHtcbiAgICAgICAgICAgIFwidlwiOiA5MDAwMDAwLFxuICAgICAgICAgICAgXCJkXCI6IFwidGhlIGFtb3VudCBvZiBibG9ja3MgdG8gZGVsYXkgdGhlIGRpZmZpY3VsdHkgYm9tYiB3aXRoXCJcbiAgICAgICAgfVxuICAgIH1cbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1tdWlyR2xhY2llci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/muirGlacier.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/petersburg.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/hardforks/petersburg.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    \"name\": \"petersburg\",\n    \"comment\": \"Aka constantinopleFix, removes EIP-1283, activate together with or after constantinople\",\n    \"url\": \"https://eips.ethereum.org/EIPS/eip-1716\",\n    \"status\": \"Final\",\n    \"gasConfig\": {},\n    \"gasPrices\": {\n        \"netSstoreNoopGas\": {\n            \"v\": null,\n            \"d\": \"Removed along EIP-1283\"\n        },\n        \"netSstoreInitGas\": {\n            \"v\": null,\n            \"d\": \"Removed along EIP-1283\"\n        },\n        \"netSstoreCleanGas\": {\n            \"v\": null,\n            \"d\": \"Removed along EIP-1283\"\n        },\n        \"netSstoreDirtyGas\": {\n            \"v\": null,\n            \"d\": \"Removed along EIP-1283\"\n        },\n        \"netSstoreClearRefund\": {\n            \"v\": null,\n            \"d\": \"Removed along EIP-1283\"\n        },\n        \"netSstoreResetRefund\": {\n            \"v\": null,\n            \"d\": \"Removed along EIP-1283\"\n        },\n        \"netSstoreResetClearRefund\": {\n            \"v\": null,\n            \"d\": \"Removed along EIP-1283\"\n        }\n    },\n    \"vm\": {},\n    \"pow\": {}\n}); //# sourceMappingURL=petersburg.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vaGFyZGZvcmtzL3BldGVyc2J1cmcuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGlFQUFlO0lBQ1gsUUFBUTtJQUNSLFdBQVc7SUFDWCxPQUFPO0lBQ1AsVUFBVTtJQUNWLGFBQWEsQ0FBQztJQUNkLGFBQWE7UUFDVCxvQkFBb0I7WUFDaEIsS0FBSztZQUNMLEtBQUs7UUFDVDtRQUNBLG9CQUFvQjtZQUNoQixLQUFLO1lBQ0wsS0FBSztRQUNUO1FBQ0EscUJBQXFCO1lBQ2pCLEtBQUs7WUFDTCxLQUFLO1FBQ1Q7UUFDQSxxQkFBcUI7WUFDakIsS0FBSztZQUNMLEtBQUs7UUFDVDtRQUNBLHdCQUF3QjtZQUNwQixLQUFLO1lBQ0wsS0FBSztRQUNUO1FBQ0Esd0JBQXdCO1lBQ3BCLEtBQUs7WUFDTCxLQUFLO1FBQ1Q7UUFDQSw2QkFBNkI7WUFDekIsS0FBSztZQUNMLEtBQUs7UUFDVDtJQUNKO0lBQ0EsTUFBTSxDQUFDO0lBQ1AsT0FBTyxDQUFDO0FBQ1osQ0FBQyxFQUFDLENBQ0Ysc0NBQXNDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vaGFyZGZvcmtzL3BldGVyc2J1cmcuanM/ZTY1NiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCB7XG4gICAgXCJuYW1lXCI6IFwicGV0ZXJzYnVyZ1wiLFxuICAgIFwiY29tbWVudFwiOiBcIkFrYSBjb25zdGFudGlub3BsZUZpeCwgcmVtb3ZlcyBFSVAtMTI4MywgYWN0aXZhdGUgdG9nZXRoZXIgd2l0aCBvciBhZnRlciBjb25zdGFudGlub3BsZVwiLFxuICAgIFwidXJsXCI6IFwiaHR0cHM6Ly9laXBzLmV0aGVyZXVtLm9yZy9FSVBTL2VpcC0xNzE2XCIsXG4gICAgXCJzdGF0dXNcIjogXCJGaW5hbFwiLFxuICAgIFwiZ2FzQ29uZmlnXCI6IHt9LFxuICAgIFwiZ2FzUHJpY2VzXCI6IHtcbiAgICAgICAgXCJuZXRTc3RvcmVOb29wR2FzXCI6IHtcbiAgICAgICAgICAgIFwidlwiOiBudWxsLFxuICAgICAgICAgICAgXCJkXCI6IFwiUmVtb3ZlZCBhbG9uZyBFSVAtMTI4M1wiXG4gICAgICAgIH0sXG4gICAgICAgIFwibmV0U3N0b3JlSW5pdEdhc1wiOiB7XG4gICAgICAgICAgICBcInZcIjogbnVsbCxcbiAgICAgICAgICAgIFwiZFwiOiBcIlJlbW92ZWQgYWxvbmcgRUlQLTEyODNcIlxuICAgICAgICB9LFxuICAgICAgICBcIm5ldFNzdG9yZUNsZWFuR2FzXCI6IHtcbiAgICAgICAgICAgIFwidlwiOiBudWxsLFxuICAgICAgICAgICAgXCJkXCI6IFwiUmVtb3ZlZCBhbG9uZyBFSVAtMTI4M1wiXG4gICAgICAgIH0sXG4gICAgICAgIFwibmV0U3N0b3JlRGlydHlHYXNcIjoge1xuICAgICAgICAgICAgXCJ2XCI6IG51bGwsXG4gICAgICAgICAgICBcImRcIjogXCJSZW1vdmVkIGFsb25nIEVJUC0xMjgzXCJcbiAgICAgICAgfSxcbiAgICAgICAgXCJuZXRTc3RvcmVDbGVhclJlZnVuZFwiOiB7XG4gICAgICAgICAgICBcInZcIjogbnVsbCxcbiAgICAgICAgICAgIFwiZFwiOiBcIlJlbW92ZWQgYWxvbmcgRUlQLTEyODNcIlxuICAgICAgICB9LFxuICAgICAgICBcIm5ldFNzdG9yZVJlc2V0UmVmdW5kXCI6IHtcbiAgICAgICAgICAgIFwidlwiOiBudWxsLFxuICAgICAgICAgICAgXCJkXCI6IFwiUmVtb3ZlZCBhbG9uZyBFSVAtMTI4M1wiXG4gICAgICAgIH0sXG4gICAgICAgIFwibmV0U3N0b3JlUmVzZXRDbGVhclJlZnVuZFwiOiB7XG4gICAgICAgICAgICBcInZcIjogbnVsbCxcbiAgICAgICAgICAgIFwiZFwiOiBcIlJlbW92ZWQgYWxvbmcgRUlQLTEyODNcIlxuICAgICAgICB9XG4gICAgfSxcbiAgICBcInZtXCI6IHt9LFxuICAgIFwicG93XCI6IHt9XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGV0ZXJzYnVyZy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/petersburg.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/shanghai.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/hardforks/shanghai.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    \"name\": \"shanghai\",\n    \"comment\": \"Next feature hardfork after the merge hardfork having withdrawals, warm coinbase, push0, limit/meter initcode\",\n    \"url\": \"https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/shanghai.md\",\n    \"status\": \"Final\",\n    \"eips\": [\n        3651,\n        3855,\n        3860,\n        4895\n    ]\n}); //# sourceMappingURL=shanghai.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vaGFyZGZvcmtzL3NoYW5naGFpLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZTtJQUNYLFFBQVE7SUFDUixXQUFXO0lBQ1gsT0FBTztJQUNQLFVBQVU7SUFDVixRQUFRO1FBQUM7UUFBTTtRQUFNO1FBQU07S0FBSztBQUNwQyxDQUFDLEVBQUMsQ0FDRixvQ0FBb0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mcm9udGVuZC8uL25vZGVfbW9kdWxlcy93ZWIzLWV0aC1hY2NvdW50cy9saWIvZXNtL2NvbW1vbi9oYXJkZm9ya3Mvc2hhbmdoYWkuanM/NGE4NyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCB7XG4gICAgXCJuYW1lXCI6IFwic2hhbmdoYWlcIixcbiAgICBcImNvbW1lbnRcIjogXCJOZXh0IGZlYXR1cmUgaGFyZGZvcmsgYWZ0ZXIgdGhlIG1lcmdlIGhhcmRmb3JrIGhhdmluZyB3aXRoZHJhd2Fscywgd2FybSBjb2luYmFzZSwgcHVzaDAsIGxpbWl0L21ldGVyIGluaXRjb2RlXCIsXG4gICAgXCJ1cmxcIjogXCJodHRwczovL2dpdGh1Yi5jb20vZXRoZXJldW0vZXhlY3V0aW9uLXNwZWNzL2Jsb2IvbWFzdGVyL25ldHdvcmstdXBncmFkZXMvbWFpbm5ldC11cGdyYWRlcy9zaGFuZ2hhaS5tZFwiLFxuICAgIFwic3RhdHVzXCI6IFwiRmluYWxcIixcbiAgICBcImVpcHNcIjogWzM2NTEsIDM4NTUsIDM4NjAsIDQ4OTVdXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2hhbmdoYWkuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/shanghai.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/spuriousDragon.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/hardforks/spuriousDragon.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    \"name\": \"spuriousDragon\",\n    \"comment\": \"HF with EIPs for simple replay attack protection, EXP cost increase, state trie clearing, contract code size limit\",\n    \"url\": \"https://eips.ethereum.org/EIPS/eip-607\",\n    \"status\": \"Final\",\n    \"gasConfig\": {},\n    \"gasPrices\": {\n        \"expByte\": {\n            \"v\": 50,\n            \"d\": \"Times ceil(log256(exponent)) for the EXP instruction\"\n        }\n    },\n    \"vm\": {\n        \"maxCodeSize\": {\n            \"v\": 24576,\n            \"d\": \"Maximum length of contract code\"\n        }\n    },\n    \"pow\": {}\n}); //# sourceMappingURL=spuriousDragon.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vaGFyZGZvcmtzL3NwdXJpb3VzRHJhZ29uLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZTtJQUNYLFFBQVE7SUFDUixXQUFXO0lBQ1gsT0FBTztJQUNQLFVBQVU7SUFDVixhQUFhLENBQUM7SUFDZCxhQUFhO1FBQ1QsV0FBVztZQUNQLEtBQUs7WUFDTCxLQUFLO1FBQ1Q7SUFDSjtJQUNBLE1BQU07UUFDRixlQUFlO1lBQ1gsS0FBSztZQUNMLEtBQUs7UUFDVDtJQUNKO0lBQ0EsT0FBTyxDQUFDO0FBQ1osQ0FBQyxFQUFDLENBQ0YsMENBQTBDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vaGFyZGZvcmtzL3NwdXJpb3VzRHJhZ29uLmpzPzc2OTYiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQge1xuICAgIFwibmFtZVwiOiBcInNwdXJpb3VzRHJhZ29uXCIsXG4gICAgXCJjb21tZW50XCI6IFwiSEYgd2l0aCBFSVBzIGZvciBzaW1wbGUgcmVwbGF5IGF0dGFjayBwcm90ZWN0aW9uLCBFWFAgY29zdCBpbmNyZWFzZSwgc3RhdGUgdHJpZSBjbGVhcmluZywgY29udHJhY3QgY29kZSBzaXplIGxpbWl0XCIsXG4gICAgXCJ1cmxcIjogXCJodHRwczovL2VpcHMuZXRoZXJldW0ub3JnL0VJUFMvZWlwLTYwN1wiLFxuICAgIFwic3RhdHVzXCI6IFwiRmluYWxcIixcbiAgICBcImdhc0NvbmZpZ1wiOiB7fSxcbiAgICBcImdhc1ByaWNlc1wiOiB7XG4gICAgICAgIFwiZXhwQnl0ZVwiOiB7XG4gICAgICAgICAgICBcInZcIjogNTAsXG4gICAgICAgICAgICBcImRcIjogXCJUaW1lcyBjZWlsKGxvZzI1NihleHBvbmVudCkpIGZvciB0aGUgRVhQIGluc3RydWN0aW9uXCJcbiAgICAgICAgfVxuICAgIH0sXG4gICAgXCJ2bVwiOiB7XG4gICAgICAgIFwibWF4Q29kZVNpemVcIjoge1xuICAgICAgICAgICAgXCJ2XCI6IDI0NTc2LFxuICAgICAgICAgICAgXCJkXCI6IFwiTWF4aW11bSBsZW5ndGggb2YgY29udHJhY3QgY29kZVwiXG4gICAgICAgIH1cbiAgICB9LFxuICAgIFwicG93XCI6IHt9XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3B1cmlvdXNEcmFnb24uanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/spuriousDragon.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/tangerineWhistle.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/hardforks/tangerineWhistle.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    \"name\": \"tangerineWhistle\",\n    \"comment\": \"Hardfork with gas cost changes for IO-heavy operations\",\n    \"url\": \"https://eips.ethereum.org/EIPS/eip-608\",\n    \"status\": \"Final\",\n    \"gasConfig\": {},\n    \"gasPrices\": {\n        \"sload\": {\n            \"v\": 200,\n            \"d\": \"Once per SLOAD operation\"\n        },\n        \"call\": {\n            \"v\": 700,\n            \"d\": \"Once per CALL operation & message call transaction\"\n        },\n        \"extcodesize\": {\n            \"v\": 700,\n            \"d\": \"Base fee of the EXTCODESIZE opcode\"\n        },\n        \"extcodecopy\": {\n            \"v\": 700,\n            \"d\": \"Base fee of the EXTCODECOPY opcode\"\n        },\n        \"balance\": {\n            \"v\": 400,\n            \"d\": \"Base fee of the BALANCE opcode\"\n        },\n        \"delegatecall\": {\n            \"v\": 700,\n            \"d\": \"Base fee of the DELEGATECALL opcode\"\n        },\n        \"callcode\": {\n            \"v\": 700,\n            \"d\": \"Base fee of the CALLCODE opcode\"\n        },\n        \"selfdestruct\": {\n            \"v\": 5000,\n            \"d\": \"Base fee of the SELFDESTRUCT opcode\"\n        }\n    },\n    \"vm\": {},\n    \"pow\": {}\n}); //# sourceMappingURL=tangerineWhistle.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vaGFyZGZvcmtzL3RhbmdlcmluZVdoaXN0bGUuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGlFQUFlO0lBQ1gsUUFBUTtJQUNSLFdBQVc7SUFDWCxPQUFPO0lBQ1AsVUFBVTtJQUNWLGFBQWEsQ0FBQztJQUNkLGFBQWE7UUFDVCxTQUFTO1lBQ0wsS0FBSztZQUNMLEtBQUs7UUFDVDtRQUNBLFFBQVE7WUFDSixLQUFLO1lBQ0wsS0FBSztRQUNUO1FBQ0EsZUFBZTtZQUNYLEtBQUs7WUFDTCxLQUFLO1FBQ1Q7UUFDQSxlQUFlO1lBQ1gsS0FBSztZQUNMLEtBQUs7UUFDVDtRQUNBLFdBQVc7WUFDUCxLQUFLO1lBQ0wsS0FBSztRQUNUO1FBQ0EsZ0JBQWdCO1lBQ1osS0FBSztZQUNMLEtBQUs7UUFDVDtRQUNBLFlBQVk7WUFDUixLQUFLO1lBQ0wsS0FBSztRQUNUO1FBQ0EsZ0JBQWdCO1lBQ1osS0FBSztZQUNMLEtBQUs7UUFDVDtJQUNKO0lBQ0EsTUFBTSxDQUFDO0lBQ1AsT0FBTyxDQUFDO0FBQ1osQ0FBQyxFQUFDLENBQ0YsNENBQTRDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vaGFyZGZvcmtzL3RhbmdlcmluZVdoaXN0bGUuanM/MGJiYiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCB7XG4gICAgXCJuYW1lXCI6IFwidGFuZ2VyaW5lV2hpc3RsZVwiLFxuICAgIFwiY29tbWVudFwiOiBcIkhhcmRmb3JrIHdpdGggZ2FzIGNvc3QgY2hhbmdlcyBmb3IgSU8taGVhdnkgb3BlcmF0aW9uc1wiLFxuICAgIFwidXJsXCI6IFwiaHR0cHM6Ly9laXBzLmV0aGVyZXVtLm9yZy9FSVBTL2VpcC02MDhcIixcbiAgICBcInN0YXR1c1wiOiBcIkZpbmFsXCIsXG4gICAgXCJnYXNDb25maWdcIjoge30sXG4gICAgXCJnYXNQcmljZXNcIjoge1xuICAgICAgICBcInNsb2FkXCI6IHtcbiAgICAgICAgICAgIFwidlwiOiAyMDAsXG4gICAgICAgICAgICBcImRcIjogXCJPbmNlIHBlciBTTE9BRCBvcGVyYXRpb25cIlxuICAgICAgICB9LFxuICAgICAgICBcImNhbGxcIjoge1xuICAgICAgICAgICAgXCJ2XCI6IDcwMCxcbiAgICAgICAgICAgIFwiZFwiOiBcIk9uY2UgcGVyIENBTEwgb3BlcmF0aW9uICYgbWVzc2FnZSBjYWxsIHRyYW5zYWN0aW9uXCJcbiAgICAgICAgfSxcbiAgICAgICAgXCJleHRjb2Rlc2l6ZVwiOiB7XG4gICAgICAgICAgICBcInZcIjogNzAwLFxuICAgICAgICAgICAgXCJkXCI6IFwiQmFzZSBmZWUgb2YgdGhlIEVYVENPREVTSVpFIG9wY29kZVwiXG4gICAgICAgIH0sXG4gICAgICAgIFwiZXh0Y29kZWNvcHlcIjoge1xuICAgICAgICAgICAgXCJ2XCI6IDcwMCxcbiAgICAgICAgICAgIFwiZFwiOiBcIkJhc2UgZmVlIG9mIHRoZSBFWFRDT0RFQ09QWSBvcGNvZGVcIlxuICAgICAgICB9LFxuICAgICAgICBcImJhbGFuY2VcIjoge1xuICAgICAgICAgICAgXCJ2XCI6IDQwMCxcbiAgICAgICAgICAgIFwiZFwiOiBcIkJhc2UgZmVlIG9mIHRoZSBCQUxBTkNFIG9wY29kZVwiXG4gICAgICAgIH0sXG4gICAgICAgIFwiZGVsZWdhdGVjYWxsXCI6IHtcbiAgICAgICAgICAgIFwidlwiOiA3MDAsXG4gICAgICAgICAgICBcImRcIjogXCJCYXNlIGZlZSBvZiB0aGUgREVMRUdBVEVDQUxMIG9wY29kZVwiXG4gICAgICAgIH0sXG4gICAgICAgIFwiY2FsbGNvZGVcIjoge1xuICAgICAgICAgICAgXCJ2XCI6IDcwMCxcbiAgICAgICAgICAgIFwiZFwiOiBcIkJhc2UgZmVlIG9mIHRoZSBDQUxMQ09ERSBvcGNvZGVcIlxuICAgICAgICB9LFxuICAgICAgICBcInNlbGZkZXN0cnVjdFwiOiB7XG4gICAgICAgICAgICBcInZcIjogNTAwMCxcbiAgICAgICAgICAgIFwiZFwiOiBcIkJhc2UgZmVlIG9mIHRoZSBTRUxGREVTVFJVQ1Qgb3Bjb2RlXCJcbiAgICAgICAgfVxuICAgIH0sXG4gICAgXCJ2bVwiOiB7fSxcbiAgICBcInBvd1wiOiB7fVxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXRhbmdlcmluZVdoaXN0bGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/tangerineWhistle.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/index.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Chain: () => (/* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_1__.Chain),\n/* harmony export */   Common: () => (/* reexport safe */ _common_js__WEBPACK_IMPORTED_MODULE_0__.Common),\n/* harmony export */   ConsensusAlgorithm: () => (/* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_1__.ConsensusAlgorithm),\n/* harmony export */   ConsensusType: () => (/* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_1__.ConsensusType),\n/* harmony export */   CustomChain: () => (/* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_1__.CustomChain),\n/* harmony export */   Hardfork: () => (/* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_1__.Hardfork),\n/* harmony export */   TypeOutput: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.TypeOutput),\n/* harmony export */   assertIsUint8Array: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_3__.assertIsUint8Array),\n/* harmony export */   bigIntToHex: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_3__.bigIntToHex),\n/* harmony export */   bigIntToUint8Array: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_3__.bigIntToUint8Array),\n/* harmony export */   bigIntToUnpaddedUint8Array: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_3__.bigIntToUnpaddedUint8Array),\n/* harmony export */   ecrecover: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_3__.ecrecover),\n/* harmony export */   intToUint8Array: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_3__.intToUint8Array),\n/* harmony export */   padToEven: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_3__.padToEven),\n/* harmony export */   parseGethGenesis: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_3__.parseGethGenesis),\n/* harmony export */   setLengthLeft: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_3__.setLengthLeft),\n/* harmony export */   stripHexPrefix: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_3__.stripHexPrefix),\n/* harmony export */   stripZeros: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_3__.stripZeros),\n/* harmony export */   toType: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_3__.toType),\n/* harmony export */   toUint8Array: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_3__.toUint8Array),\n/* harmony export */   uint8ArrayToBigInt: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_3__.uint8ArrayToBigInt),\n/* harmony export */   unpadUint8Array: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_3__.unpadUint8Array),\n/* harmony export */   zeros: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_3__.zeros)\n/* harmony export */ });\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/common.js\");\n/* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./enums.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/enums.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./types.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/types.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/utils.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ // @ethereumjs/common version 3.1.1\n\n\n\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7Ozs7Ozs7Ozs7Ozs7OztBQWVBLEdBQ0EsbUNBQW1DO0FBQ1A7QUFDRDtBQUNBO0FBQ0EsQ0FDM0IsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vaW5kZXguanM/YjlkZiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuVGhpcyBmaWxlIGlzIHBhcnQgb2Ygd2ViMy5qcy5cblxud2ViMy5qcyBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5XG5pdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnlcbnRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yXG4oYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLlxuXG53ZWIzLmpzIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsXG5idXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZlxuTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZVxuR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG5cbllvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZVxuYWxvbmcgd2l0aCB3ZWIzLmpzLiAgSWYgbm90LCBzZWUgPGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LlxuKi9cbi8vIEBldGhlcmV1bWpzL2NvbW1vbiB2ZXJzaW9uIDMuMS4xXG5leHBvcnQgKiBmcm9tICcuL2NvbW1vbi5qcyc7XG5leHBvcnQgKiBmcm9tICcuL2VudW1zLmpzJztcbmV4cG9ydCAqIGZyb20gJy4vdHlwZXMuanMnO1xuZXhwb3J0ICogZnJvbSAnLi91dGlscy5qcyc7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/types.js":
/*!****************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/types.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TypeOutput: () => (/* binding */ TypeOutput)\n/* harmony export */ });\n/**\n * Type output options\n */ var TypeOutput;\n(function(TypeOutput) {\n    TypeOutput[TypeOutput[\"Number\"] = 0] = \"Number\";\n    TypeOutput[TypeOutput[\"BigInt\"] = 1] = \"BigInt\";\n    TypeOutput[TypeOutput[\"Uint8Array\"] = 2] = \"Uint8Array\";\n    TypeOutput[TypeOutput[\"PrefixedHexString\"] = 3] = \"PrefixedHexString\";\n})(TypeOutput || (TypeOutput = {})); //# sourceMappingURL=types.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vdHlwZXMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBOztDQUVDLEdBQ00sSUFBSUEsV0FBVztBQUNyQixVQUFVQSxVQUFVO0lBQ2pCQSxVQUFVLENBQUNBLFVBQVUsQ0FBQyxTQUFTLEdBQUcsRUFBRSxHQUFHO0lBQ3ZDQSxVQUFVLENBQUNBLFVBQVUsQ0FBQyxTQUFTLEdBQUcsRUFBRSxHQUFHO0lBQ3ZDQSxVQUFVLENBQUNBLFVBQVUsQ0FBQyxhQUFhLEdBQUcsRUFBRSxHQUFHO0lBQzNDQSxVQUFVLENBQUNBLFVBQVUsQ0FBQyxvQkFBb0IsR0FBRyxFQUFFLEdBQUc7QUFDdEQsR0FBR0EsY0FBZUEsQ0FBQUEsYUFBYSxDQUFDLEtBQ2hDLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL2Zyb250ZW5kLy4vbm9kZV9tb2R1bGVzL3dlYjMtZXRoLWFjY291bnRzL2xpYi9lc20vY29tbW9uL3R5cGVzLmpzP2U4ZjciXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBUeXBlIG91dHB1dCBvcHRpb25zXG4gKi9cbmV4cG9ydCB2YXIgVHlwZU91dHB1dDtcbihmdW5jdGlvbiAoVHlwZU91dHB1dCkge1xuICAgIFR5cGVPdXRwdXRbVHlwZU91dHB1dFtcIk51bWJlclwiXSA9IDBdID0gXCJOdW1iZXJcIjtcbiAgICBUeXBlT3V0cHV0W1R5cGVPdXRwdXRbXCJCaWdJbnRcIl0gPSAxXSA9IFwiQmlnSW50XCI7XG4gICAgVHlwZU91dHB1dFtUeXBlT3V0cHV0W1wiVWludDhBcnJheVwiXSA9IDJdID0gXCJVaW50OEFycmF5XCI7XG4gICAgVHlwZU91dHB1dFtUeXBlT3V0cHV0W1wiUHJlZml4ZWRIZXhTdHJpbmdcIl0gPSAzXSA9IFwiUHJlZml4ZWRIZXhTdHJpbmdcIjtcbn0pKFR5cGVPdXRwdXQgfHwgKFR5cGVPdXRwdXQgPSB7fSkpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dHlwZXMuanMubWFwIl0sIm5hbWVzIjpbIlR5cGVPdXRwdXQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/types.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/utils.js":
/*!****************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/utils.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   assertIsUint8Array: () => (/* binding */ assertIsUint8Array),\n/* harmony export */   bigIntToHex: () => (/* binding */ bigIntToHex),\n/* harmony export */   bigIntToUint8Array: () => (/* binding */ bigIntToUint8Array),\n/* harmony export */   bigIntToUnpaddedUint8Array: () => (/* binding */ bigIntToUnpaddedUint8Array),\n/* harmony export */   ecrecover: () => (/* binding */ ecrecover),\n/* harmony export */   intToUint8Array: () => (/* binding */ intToUint8Array),\n/* harmony export */   padToEven: () => (/* binding */ padToEven),\n/* harmony export */   parseGethGenesis: () => (/* binding */ parseGethGenesis),\n/* harmony export */   setLengthLeft: () => (/* binding */ setLengthLeft),\n/* harmony export */   stripHexPrefix: () => (/* binding */ stripHexPrefix),\n/* harmony export */   stripZeros: () => (/* binding */ stripZeros),\n/* harmony export */   toType: () => (/* binding */ toType),\n/* harmony export */   toUint8Array: () => (/* binding */ toUint8Array),\n/* harmony export */   uint8ArrayToBigInt: () => (/* binding */ uint8ArrayToBigInt),\n/* harmony export */   unpadUint8Array: () => (/* binding */ unpadUint8Array),\n/* harmony export */   zeros: () => (/* binding */ zeros)\n/* harmony export */ });\n/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-validator */ \"(ssr)/./node_modules/web3-validator/lib/esm/index.js\");\n/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-utils */ \"(ssr)/./node_modules/web3-utils/lib/esm/index.js\");\n/* harmony import */ var _tx_constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../tx/constants.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/tx/constants.js\");\n/* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./enums.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/enums.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./types.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/types.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ \n\n\n\n\n/**\n * Removes '0x' from a given `String` if present\n * @param str the string value\n * @returns the string without 0x prefix\n */ const stripHexPrefix = (str)=>{\n    if (typeof str !== \"string\") throw new Error(`[stripHexPrefix] input must be type 'string', received ${typeof str}`);\n    return (0,web3_validator__WEBPACK_IMPORTED_MODULE_0__.isHexPrefixed)(str) ? str.slice(2) : str;\n};\n/**\n * Transforms Geth formatted nonce (i.e. hex string) to 8 byte 0x-prefixed string used internally\n * @param nonce string parsed from the Geth genesis file\n * @returns nonce as a 0x-prefixed 8 byte string\n */ function formatNonce(nonce) {\n    if (!nonce || nonce === \"0x0\") {\n        return \"0x0000000000000000\";\n    }\n    if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_0__.isHexPrefixed)(nonce)) {\n        return `0x${stripHexPrefix(nonce).padStart(16, \"0\")}`;\n    }\n    return `0x${nonce.padStart(16, \"0\")}`;\n}\n/**\n * Converts a `Number` into a hex `String`\n * @param {Number} i\n * @return {String}\n */ const intToHex = function(i) {\n    if (!Number.isSafeInteger(i) || i < 0) {\n        throw new Error(`Received an invalid integer type: ${i}`);\n    }\n    return `0x${i.toString(16)}`;\n};\n/**\n * Converts Geth genesis parameters to an EthereumJS compatible `CommonOpts` object\n * @param json object representing the Geth genesis file\n * @param optional mergeForkIdPostMerge which clarifies the placement of MergeForkIdTransition\n * hardfork, which by default is post merge as with the merged eth networks but could also come\n * before merge like in kiln genesis\n * @returns genesis parameters in a `CommonOpts` compliant object\n */ function parseGethParams(json, mergeForkIdPostMerge = true) {\n    var _a, _b;\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    const { name, config, difficulty, mixHash, gasLimit, coinbase, baseFeePerGas } = json;\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    let { extraData, timestamp, nonce } = json;\n    const genesisTimestamp = Number(timestamp);\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    const { chainId } = config;\n    // geth is not strictly putting empty fields with a 0x prefix\n    if (extraData === \"\") {\n        extraData = \"0x\";\n    }\n    // geth may use number for timestamp\n    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_0__.isHexPrefixed)(timestamp)) {\n        // eslint-disable-next-line radix\n        timestamp = intToHex(parseInt(timestamp));\n    }\n    // geth may not give us a nonce strictly formatted to an 8 byte hex string\n    if (nonce.length !== 18) {\n        nonce = formatNonce(nonce);\n    }\n    // EIP155 and EIP158 are both part of Spurious Dragon hardfork and must occur at the same time\n    // but have different configuration parameters in geth genesis parameters\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    if (config.eip155Block !== config.eip158Block) {\n        throw new Error(\"EIP155 block number must equal EIP 158 block number since both are part of SpuriousDragon hardfork and the client only supports activating the full hardfork\");\n    }\n    const params = {\n        name,\n        chainId,\n        networkId: chainId,\n        genesis: {\n            timestamp,\n            // eslint-disable-next-line radix\n            gasLimit: parseInt(gasLimit),\n            // eslint-disable-next-line radix\n            difficulty: parseInt(difficulty),\n            nonce,\n            extraData,\n            mixHash,\n            coinbase,\n            baseFeePerGas\n        },\n        hardfork: undefined,\n        hardforks: [],\n        bootstrapNodes: [],\n        consensus: // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        config.clique !== undefined ? {\n            type: \"poa\",\n            algorithm: \"clique\",\n            clique: {\n                // The recent geth genesis seems to be using blockperiodseconds\n                // and epochlength for clique specification\n                // see: https://hackmd.io/PqZgMpnkSWCWv5joJoFymQ\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-assignment\n                period: (_a = config.clique.period) !== null && _a !== void 0 ? _a : config.clique.blockperiodseconds,\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,  @typescript-eslint/no-unsafe-assignment\n                epoch: (_b = config.clique.epoch) !== null && _b !== void 0 ? _b : config.clique.epochlength\n            }\n        } : {\n            type: \"pow\",\n            algorithm: \"ethash\",\n            ethash: {}\n        }\n    };\n    const forkMap = {\n        [_enums_js__WEBPACK_IMPORTED_MODULE_3__.Hardfork.Homestead]: {\n            name: \"homesteadBlock\"\n        },\n        [_enums_js__WEBPACK_IMPORTED_MODULE_3__.Hardfork.Dao]: {\n            name: \"daoForkBlock\"\n        },\n        [_enums_js__WEBPACK_IMPORTED_MODULE_3__.Hardfork.TangerineWhistle]: {\n            name: \"eip150Block\"\n        },\n        [_enums_js__WEBPACK_IMPORTED_MODULE_3__.Hardfork.SpuriousDragon]: {\n            name: \"eip155Block\"\n        },\n        [_enums_js__WEBPACK_IMPORTED_MODULE_3__.Hardfork.Byzantium]: {\n            name: \"byzantiumBlock\"\n        },\n        [_enums_js__WEBPACK_IMPORTED_MODULE_3__.Hardfork.Constantinople]: {\n            name: \"constantinopleBlock\"\n        },\n        [_enums_js__WEBPACK_IMPORTED_MODULE_3__.Hardfork.Petersburg]: {\n            name: \"petersburgBlock\"\n        },\n        [_enums_js__WEBPACK_IMPORTED_MODULE_3__.Hardfork.Istanbul]: {\n            name: \"istanbulBlock\"\n        },\n        [_enums_js__WEBPACK_IMPORTED_MODULE_3__.Hardfork.MuirGlacier]: {\n            name: \"muirGlacierBlock\"\n        },\n        [_enums_js__WEBPACK_IMPORTED_MODULE_3__.Hardfork.Berlin]: {\n            name: \"berlinBlock\"\n        },\n        [_enums_js__WEBPACK_IMPORTED_MODULE_3__.Hardfork.London]: {\n            name: \"londonBlock\"\n        },\n        [_enums_js__WEBPACK_IMPORTED_MODULE_3__.Hardfork.MergeForkIdTransition]: {\n            name: \"mergeForkBlock\",\n            postMerge: mergeForkIdPostMerge\n        },\n        [_enums_js__WEBPACK_IMPORTED_MODULE_3__.Hardfork.Shanghai]: {\n            name: \"shanghaiTime\",\n            postMerge: true,\n            isTimestamp: true\n        },\n        [_enums_js__WEBPACK_IMPORTED_MODULE_3__.Hardfork.ShardingForkDev]: {\n            name: \"shardingForkTime\",\n            postMerge: true,\n            isTimestamp: true\n        }\n    };\n    // forkMapRev is the map from config field name to Hardfork\n    const forkMapRev = Object.keys(forkMap).reduce((acc, elem)=>{\n        acc[forkMap[elem].name] = elem;\n        return acc;\n    }, {});\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n    const configHardforkNames = Object.keys(config).filter(// eslint-disable-next-line no-null/no-null, @typescript-eslint/no-unsafe-member-access\n    (key)=>forkMapRev[key] !== undefined && config[key] !== undefined && config[key] !== null);\n    params.hardforks = configHardforkNames.map((nameBlock)=>({\n            name: forkMapRev[nameBlock],\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            block: // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            forkMap[forkMapRev[nameBlock]].isTimestamp === true || // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            typeof config[nameBlock] !== \"number\" ? null : config[nameBlock],\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            timestamp: // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            forkMap[forkMapRev[nameBlock]].isTimestamp === true && // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            typeof config[nameBlock] === \"number\" ? config[nameBlock] : undefined\n        }))// eslint-disable-next-line no-null/no-null\n    .filter((fork)=>fork.block !== null || fork.timestamp !== undefined);\n    params.hardforks.sort((a, b)=>{\n        var _a, _b;\n        return ((_a = a.block) !== null && _a !== void 0 ? _a : Infinity) - ((_b = b.block) !== null && _b !== void 0 ? _b : Infinity);\n    });\n    params.hardforks.sort((a, b)=>{\n        var _a, _b;\n        return ((_a = a.timestamp) !== null && _a !== void 0 ? _a : genesisTimestamp) - ((_b = b.timestamp) !== null && _b !== void 0 ? _b : genesisTimestamp);\n    });\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    if (config.terminalTotalDifficulty !== undefined) {\n        // Following points need to be considered for placement of merge hf\n        // - Merge hardfork can't be placed at genesis\n        // - Place merge hf before any hardforks that require CL participation for e.g. withdrawals\n        // - Merge hardfork has to be placed just after genesis if any of the genesis hardforks make CL\n        //   necessary for e.g. withdrawals\n        const mergeConfig = {\n            name: _enums_js__WEBPACK_IMPORTED_MODULE_3__.Hardfork.Merge,\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-assignment\n            ttd: config.terminalTotalDifficulty,\n            // eslint-disable-next-line no-null/no-null\n            block: null\n        };\n        // Merge hardfork has to be placed before first hardfork that is dependent on merge\n        const postMergeIndex = params.hardforks.findIndex(// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        (hf)=>{\n            var _a;\n            return ((_a = forkMap[hf.name]) === null || _a === void 0 ? void 0 : _a.postMerge) === true;\n        });\n        if (postMergeIndex !== -1) {\n            params.hardforks.splice(postMergeIndex, 0, mergeConfig);\n        } else {\n            params.hardforks.push(mergeConfig);\n        }\n    }\n    const latestHardfork = params.hardforks.length > 0 ? params.hardforks.slice(-1)[0] : undefined;\n    params.hardfork = latestHardfork === null || latestHardfork === void 0 ? void 0 : latestHardfork.name;\n    params.hardforks.unshift({\n        name: _enums_js__WEBPACK_IMPORTED_MODULE_3__.Hardfork.Chainstart,\n        block: 0\n    });\n    return params;\n}\n/**\n * Parses a genesis.json exported from Geth into parameters for Common instance\n * @param json representing the Geth genesis file\n * @param name optional chain name\n * @returns parsed params\n */ function parseGethGenesis(json, name, mergeForkIdPostMerge) {\n    try {\n        if ([\n            \"config\",\n            \"difficulty\",\n            \"gasLimit\",\n            \"alloc\"\n        ].some((field)=>!(field in json))) {\n            throw new Error(\"Invalid format, expected geth genesis fields missing\");\n        }\n        if (name !== undefined) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, no-param-reassign\n            json.name = name;\n        }\n        return parseGethParams(json, mergeForkIdPostMerge);\n    } catch (e) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/restrict-template-expressions\n        throw new Error(`Error parsing parameters file: ${e.message}`);\n    }\n}\n/**\n * Pads a `String` to have an even length\n * @param value\n * @return output\n */ function padToEven(value) {\n    let a = value;\n    if (typeof a !== \"string\") {\n        throw new Error(`[padToEven] value must be type 'string', received ${typeof a}`);\n    }\n    if (a.length % 2) a = `0${a}`;\n    return a;\n}\n/**\n * Converts an `Number` to a `Uint8Array`\n * @param {Number} i\n * @return {Uint8Array}\n */ const intToUint8Array = function(i) {\n    const hex = intToHex(i);\n    return (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.hexToBytes)(`0x${padToEven(hex.slice(2))}`);\n};\n/**\n * Attempts to turn a value into a `Uint8Array`.\n * Inputs supported: `Uint8Array` `String` (hex-prefixed), `Number`, null/undefined, `BigInt` and other objects\n * with a `toArray()` or `toUint8Array()` method.\n * @param v the value\n */ const toUint8Array = function(v) {\n    // eslint-disable-next-line no-null/no-null\n    if (v === null || v === undefined) {\n        return new Uint8Array();\n    }\n    if (v instanceof Uint8Array) {\n        return v;\n    }\n    if (Array.isArray(v)) {\n        return Uint8Array.from(v);\n    }\n    if (typeof v === \"string\") {\n        if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_0__.isHexString)(v)) {\n            throw new Error(`Cannot convert string to Uint8Array. only supports 0x-prefixed hex strings and this string was given: ${v}`);\n        }\n        return (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.hexToBytes)(padToEven(stripHexPrefix(v)));\n    }\n    if (typeof v === \"number\") {\n        return toUint8Array((0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.numberToHex)(v));\n    }\n    if (typeof v === \"bigint\") {\n        if (v < BigInt(0)) {\n            throw new Error(`Cannot convert negative bigint to Uint8Array. Given: ${v}`);\n        }\n        let n = v.toString(16);\n        if (n.length % 2) n = `0${n}`;\n        return toUint8Array(`0x${n}`);\n    }\n    if (v.toArray) {\n        // converts a BN to a Uint8Array\n        return Uint8Array.from(v.toArray());\n    }\n    throw new Error(\"invalid type\");\n};\n/**\n * Converts a {@link Uint8Array} to a {@link bigint}\n */ function uint8ArrayToBigInt(buf) {\n    const hex = (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.bytesToHex)(buf);\n    if (hex === \"0x\") {\n        return BigInt(0);\n    }\n    return BigInt(hex);\n}\n/**\n * Converts a {@link bigint} to a {@link Uint8Array}\n */ function bigIntToUint8Array(num) {\n    return toUint8Array(`0x${num.toString(16)}`);\n}\n/**\n * Returns a Uint8Array filled with 0s.\n * @param bytes the number of bytes the Uint8Array should be\n */ const zeros = function(bytes) {\n    return new Uint8Array(bytes).fill(0);\n};\n/**\n * Pads a `Uint8Array` with zeros till it has `length` bytes.\n * Truncates the beginning or end of input if its length exceeds `length`.\n * @param msg the value to pad (Uint8Array)\n * @param length the number of bytes the output should be\n * @param right whether to start padding form the left or right\n * @return (Uint8Array)\n */ const setLength = function(msg, length, right) {\n    const buf = zeros(length);\n    if (right) {\n        if (msg.length < length) {\n            buf.set(msg);\n            return buf;\n        }\n        return msg.subarray(0, length);\n    }\n    if (msg.length < length) {\n        buf.set(msg, length - msg.length);\n        return buf;\n    }\n    return msg.subarray(-length);\n};\n/**\n * Throws if input is not a Uint8Array\n * @param {Uint8Array} input value to check\n */ function assertIsUint8Array(input) {\n    if (!(input instanceof Uint8Array)) {\n        // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n        const msg = `This method only supports Uint8Array but input was: ${input}`;\n        throw new Error(msg);\n    }\n}\n/**\n * Left Pads a `Uint8Array` with leading zeros till it has `length` bytes.\n * Or it truncates the beginning if it exceeds.\n * @param msg the value to pad (Uint8Array)\n * @param length the number of bytes the output should be\n * @return (Uint8Array)\n */ const setLengthLeft = function(msg, length) {\n    assertIsUint8Array(msg);\n    return setLength(msg, length, false);\n};\n/**\n * Trims leading zeros from a `Uint8Array`, `String` or `Number[]`.\n * @param a (Uint8Array|Array|String)\n * @return (Uint8Array|Array|String)\n */ function stripZeros(a) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-assignment\n    let first = a[0];\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\n    while(a.length > 0 && first.toString() === \"0\"){\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-assignment, prefer-destructuring, @typescript-eslint/no-unsafe-call, no-param-reassign\n        a = a.slice(1);\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, prefer-destructuring, @typescript-eslint/no-unsafe-member-access\n        first = a[0];\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return a;\n}\n/**\n * Trims leading zeros from a `Uint8Array`.\n * @param a (Uint8Array)\n * @return (Uint8Array)\n */ const unpadUint8Array = function(a) {\n    assertIsUint8Array(a);\n    return stripZeros(a);\n};\n/**\n * Converts a {@link bigint} to a `0x` prefixed hex string\n */ const bigIntToHex = (num)=>`0x${num.toString(16)}`;\n/**\n * Convert value from bigint to an unpadded Uint8Array\n * (useful for RLP transport)\n * @param value value to convert\n */ function bigIntToUnpaddedUint8Array(value) {\n    return unpadUint8Array(bigIntToUint8Array(value));\n}\nfunction calculateSigRecovery(v, chainId) {\n    if (v === BigInt(0) || v === BigInt(1)) return v;\n    if (chainId === undefined) {\n        return v - BigInt(27);\n    }\n    return v - (chainId * BigInt(2) + BigInt(35));\n}\nfunction isValidSigRecovery(recovery) {\n    return recovery === BigInt(0) || recovery === BigInt(1);\n}\n/**\n * ECDSA public key recovery from signature.\n * NOTE: Accepts `v === 0 | v === 1` for EIP1559 transactions\n * @returns Recovered public key\n */ const ecrecover = function(msgHash, v, r, s, chainId) {\n    const recovery = calculateSigRecovery(v, chainId);\n    if (!isValidSigRecovery(recovery)) {\n        throw new Error(\"Invalid signature v value\");\n    }\n    const senderPubKey = new _tx_constants_js__WEBPACK_IMPORTED_MODULE_2__.secp256k1.Signature(uint8ArrayToBigInt(r), uint8ArrayToBigInt(s)).addRecoveryBit(Number(recovery)).recoverPublicKey(msgHash).toRawBytes(false);\n    return senderPubKey.slice(1);\n};\nfunction toType(input, outputType) {\n    // eslint-disable-next-line no-null/no-null\n    if (input === null) {\n        // eslint-disable-next-line no-null/no-null\n        return null;\n    }\n    if (input === undefined) {\n        return undefined;\n    }\n    if (typeof input === \"string\" && !(0,web3_validator__WEBPACK_IMPORTED_MODULE_0__.isHexString)(input)) {\n        throw new Error(`A string must be provided with a 0x-prefix, given: ${input}`);\n    } else if (typeof input === \"number\" && !Number.isSafeInteger(input)) {\n        throw new Error(\"The provided number is greater than MAX_SAFE_INTEGER (please use an alternative input type)\");\n    }\n    const output = toUint8Array(input);\n    switch(outputType){\n        case _types_js__WEBPACK_IMPORTED_MODULE_4__.TypeOutput.Uint8Array:\n            return output;\n        case _types_js__WEBPACK_IMPORTED_MODULE_4__.TypeOutput.BigInt:\n            return uint8ArrayToBigInt(output);\n        case _types_js__WEBPACK_IMPORTED_MODULE_4__.TypeOutput.Number:\n            {\n                const bigInt = uint8ArrayToBigInt(output);\n                if (bigInt > BigInt(Number.MAX_SAFE_INTEGER)) {\n                    throw new Error(\"The provided number is greater than MAX_SAFE_INTEGER (please use an alternative output type)\");\n                }\n                return Number(bigInt);\n            }\n        case _types_js__WEBPACK_IMPORTED_MODULE_4__.TypeOutput.PrefixedHexString:\n            return (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.bytesToHex)(output);\n        default:\n            throw new Error(\"unknown outputType\");\n    }\n} //# sourceMappingURL=utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/index.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AccessListEIP2930Transaction: () => (/* reexport safe */ _tx_index_js__WEBPACK_IMPORTED_MODULE_5__.AccessListEIP2930Transaction),\n/* harmony export */   BaseTransaction: () => (/* reexport safe */ _tx_index_js__WEBPACK_IMPORTED_MODULE_5__.BaseTransaction),\n/* harmony export */   Capability: () => (/* reexport safe */ _tx_index_js__WEBPACK_IMPORTED_MODULE_5__.Capability),\n/* harmony export */   Chain: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_4__.Chain),\n/* harmony export */   Common: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_4__.Common),\n/* harmony export */   ConsensusAlgorithm: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_4__.ConsensusAlgorithm),\n/* harmony export */   ConsensusType: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_4__.ConsensusType),\n/* harmony export */   CustomChain: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_4__.CustomChain),\n/* harmony export */   FeeMarketEIP1559Transaction: () => (/* reexport safe */ _tx_index_js__WEBPACK_IMPORTED_MODULE_5__.FeeMarketEIP1559Transaction),\n/* harmony export */   Hardfork: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_4__.Hardfork),\n/* harmony export */   Transaction: () => (/* reexport safe */ _tx_index_js__WEBPACK_IMPORTED_MODULE_5__.Transaction),\n/* harmony export */   TransactionFactory: () => (/* reexport safe */ _tx_index_js__WEBPACK_IMPORTED_MODULE_5__.TransactionFactory),\n/* harmony export */   TypeOutput: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_4__.TypeOutput),\n/* harmony export */   Wallet: () => (/* reexport safe */ _wallet_js__WEBPACK_IMPORTED_MODULE_0__.Wallet),\n/* harmony export */   assertIsUint8Array: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_4__.assertIsUint8Array),\n/* harmony export */   bigIntToHex: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_4__.bigIntToHex),\n/* harmony export */   bigIntToUint8Array: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_4__.bigIntToUint8Array),\n/* harmony export */   bigIntToUnpaddedUint8Array: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_4__.bigIntToUnpaddedUint8Array),\n/* harmony export */   create: () => (/* reexport safe */ _account_js__WEBPACK_IMPORTED_MODULE_1__.create),\n/* harmony export */   decrypt: () => (/* reexport safe */ _account_js__WEBPACK_IMPORTED_MODULE_1__.decrypt),\n/* harmony export */   ecrecover: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_4__.ecrecover),\n/* harmony export */   encrypt: () => (/* reexport safe */ _account_js__WEBPACK_IMPORTED_MODULE_1__.encrypt),\n/* harmony export */   hashMessage: () => (/* reexport safe */ _account_js__WEBPACK_IMPORTED_MODULE_1__.hashMessage),\n/* harmony export */   intToUint8Array: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_4__.intToUint8Array),\n/* harmony export */   isAccessList: () => (/* reexport safe */ _tx_index_js__WEBPACK_IMPORTED_MODULE_5__.isAccessList),\n/* harmony export */   isAccessListUint8Array: () => (/* reexport safe */ _tx_index_js__WEBPACK_IMPORTED_MODULE_5__.isAccessListUint8Array),\n/* harmony export */   keyStoreSchema: () => (/* reexport safe */ _schemas_js__WEBPACK_IMPORTED_MODULE_3__.keyStoreSchema),\n/* harmony export */   padToEven: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_4__.padToEven),\n/* harmony export */   parseAndValidatePrivateKey: () => (/* reexport safe */ _account_js__WEBPACK_IMPORTED_MODULE_1__.parseAndValidatePrivateKey),\n/* harmony export */   parseGethGenesis: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_4__.parseGethGenesis),\n/* harmony export */   privateKeyToAccount: () => (/* reexport safe */ _account_js__WEBPACK_IMPORTED_MODULE_1__.privateKeyToAccount),\n/* harmony export */   privateKeyToAddress: () => (/* reexport safe */ _account_js__WEBPACK_IMPORTED_MODULE_1__.privateKeyToAddress),\n/* harmony export */   privateKeyToPublicKey: () => (/* reexport safe */ _account_js__WEBPACK_IMPORTED_MODULE_1__.privateKeyToPublicKey),\n/* harmony export */   recover: () => (/* reexport safe */ _account_js__WEBPACK_IMPORTED_MODULE_1__.recover),\n/* harmony export */   recoverTransaction: () => (/* reexport safe */ _account_js__WEBPACK_IMPORTED_MODULE_1__.recoverTransaction),\n/* harmony export */   setLengthLeft: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_4__.setLengthLeft),\n/* harmony export */   sign: () => (/* reexport safe */ _account_js__WEBPACK_IMPORTED_MODULE_1__.sign),\n/* harmony export */   signTransaction: () => (/* reexport safe */ _account_js__WEBPACK_IMPORTED_MODULE_1__.signTransaction),\n/* harmony export */   stripHexPrefix: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_4__.stripHexPrefix),\n/* harmony export */   stripZeros: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_4__.stripZeros),\n/* harmony export */   toType: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_4__.toType),\n/* harmony export */   toUint8Array: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_4__.toUint8Array),\n/* harmony export */   txUtils: () => (/* reexport safe */ _tx_index_js__WEBPACK_IMPORTED_MODULE_5__.txUtils),\n/* harmony export */   uint8ArrayToBigInt: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_4__.uint8ArrayToBigInt),\n/* harmony export */   unpadUint8Array: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_4__.unpadUint8Array),\n/* harmony export */   zeros: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_4__.zeros)\n/* harmony export */ });\n/* harmony import */ var _wallet_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./wallet.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/wallet.js\");\n/* harmony import */ var _account_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./account.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/account.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./types.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/types.js\");\n/* harmony import */ var _schemas_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./schemas.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/schemas.js\");\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./common/index.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/index.js\");\n/* harmony import */ var _tx_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./tx/index.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/tx/index.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ /**\n * The web3.eth.accounts contains functions to generate Ethereum accounts and sign transactions and data.\n *\n * **_NOTE:_** This package has NOT been audited and might potentially be unsafe. Take precautions to clear memory properly, store the private keys safely, and test transaction receiving and sending functionality properly before using in production!\n *\n *\n * To use this package standalone and use its methods use:\n * ```ts\n * import { create, decrypt } from 'web3-eth-accounts'; // ....\n * ```\n *\n * To use this package within the web3 object use:\n *\n * ```ts\n * import Web3 from 'web3';\n *\n * const web3 = new Web3(Web3.givenProvider || 'ws://some.local-or-remote.node:8546');\n * // now you have access to the accounts class\n * web3.eth.accounts.create();\n * ```\n */ \n\n\n\n\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7Ozs7Ozs7Ozs7Ozs7OztBQWVBLEdBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0NBb0JDLEdBQzJCO0FBQ0M7QUFDRjtBQUNFO0FBQ0s7QUFDSixDQUM5QixpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mcm9udGVuZC8uL25vZGVfbW9kdWxlcy93ZWIzLWV0aC1hY2NvdW50cy9saWIvZXNtL2luZGV4LmpzP2Y2ZTAiXSwic291cmNlc0NvbnRlbnQiOlsiLypcblRoaXMgZmlsZSBpcyBwYXJ0IG9mIHdlYjMuanMuXG5cbndlYjMuanMgaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeVxuaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5XG50aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBlaXRoZXIgdmVyc2lvbiAzIG9mIHRoZSBMaWNlbnNlLCBvclxuKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi5cblxud2ViMy5qcyBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLFxuYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2Zcbk1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGVcbkdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLlxuXG5Zb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2VcbmFsb25nIHdpdGggd2ViMy5qcy4gIElmIG5vdCwgc2VlIDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi5cbiovXG4vKipcbiAqIFRoZSB3ZWIzLmV0aC5hY2NvdW50cyBjb250YWlucyBmdW5jdGlvbnMgdG8gZ2VuZXJhdGUgRXRoZXJldW0gYWNjb3VudHMgYW5kIHNpZ24gdHJhbnNhY3Rpb25zIGFuZCBkYXRhLlxuICpcbiAqICoqX05PVEU6XyoqIFRoaXMgcGFja2FnZSBoYXMgTk9UIGJlZW4gYXVkaXRlZCBhbmQgbWlnaHQgcG90ZW50aWFsbHkgYmUgdW5zYWZlLiBUYWtlIHByZWNhdXRpb25zIHRvIGNsZWFyIG1lbW9yeSBwcm9wZXJseSwgc3RvcmUgdGhlIHByaXZhdGUga2V5cyBzYWZlbHksIGFuZCB0ZXN0IHRyYW5zYWN0aW9uIHJlY2VpdmluZyBhbmQgc2VuZGluZyBmdW5jdGlvbmFsaXR5IHByb3Blcmx5IGJlZm9yZSB1c2luZyBpbiBwcm9kdWN0aW9uIVxuICpcbiAqXG4gKiBUbyB1c2UgdGhpcyBwYWNrYWdlIHN0YW5kYWxvbmUgYW5kIHVzZSBpdHMgbWV0aG9kcyB1c2U6XG4gKiBgYGB0c1xuICogaW1wb3J0IHsgY3JlYXRlLCBkZWNyeXB0IH0gZnJvbSAnd2ViMy1ldGgtYWNjb3VudHMnOyAvLyAuLi4uXG4gKiBgYGBcbiAqXG4gKiBUbyB1c2UgdGhpcyBwYWNrYWdlIHdpdGhpbiB0aGUgd2ViMyBvYmplY3QgdXNlOlxuICpcbiAqIGBgYHRzXG4gKiBpbXBvcnQgV2ViMyBmcm9tICd3ZWIzJztcbiAqXG4gKiBjb25zdCB3ZWIzID0gbmV3IFdlYjMoV2ViMy5naXZlblByb3ZpZGVyIHx8ICd3czovL3NvbWUubG9jYWwtb3ItcmVtb3RlLm5vZGU6ODU0NicpO1xuICogLy8gbm93IHlvdSBoYXZlIGFjY2VzcyB0byB0aGUgYWNjb3VudHMgY2xhc3NcbiAqIHdlYjMuZXRoLmFjY291bnRzLmNyZWF0ZSgpO1xuICogYGBgXG4gKi9cbmV4cG9ydCAqIGZyb20gJy4vd2FsbGV0LmpzJztcbmV4cG9ydCAqIGZyb20gJy4vYWNjb3VudC5qcyc7XG5leHBvcnQgKiBmcm9tICcuL3R5cGVzLmpzJztcbmV4cG9ydCAqIGZyb20gJy4vc2NoZW1hcy5qcyc7XG5leHBvcnQgKiBmcm9tICcuL2NvbW1vbi9pbmRleC5qcyc7XG5leHBvcnQgKiBmcm9tICcuL3R4L2luZGV4LmpzJztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/schemas.js":
/*!***********************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/schemas.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   keyStoreSchema: () => (/* binding */ keyStoreSchema)\n/* harmony export */ });\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ const keyStoreSchema = {\n    type: \"object\",\n    required: [\n        \"crypto\",\n        \"id\",\n        \"version\",\n        \"address\"\n    ],\n    properties: {\n        crypto: {\n            type: \"object\",\n            required: [\n                \"cipher\",\n                \"ciphertext\",\n                \"cipherparams\",\n                \"kdf\",\n                \"kdfparams\",\n                \"mac\"\n            ],\n            properties: {\n                cipher: {\n                    type: \"string\"\n                },\n                ciphertext: {\n                    type: \"string\"\n                },\n                cipherparams: {\n                    type: \"object\"\n                },\n                kdf: {\n                    type: \"string\"\n                },\n                kdfparams: {\n                    type: \"object\"\n                },\n                salt: {\n                    type: \"string\"\n                },\n                mac: {\n                    type: \"string\"\n                }\n            }\n        },\n        id: {\n            type: \"string\"\n        },\n        version: {\n            type: \"number\"\n        },\n        address: {\n            type: \"string\"\n        }\n    }\n}; //# sourceMappingURL=schemas.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9zY2hlbWFzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7Ozs7Ozs7Ozs7Ozs7O0FBZUEsR0FDTyxNQUFNQSxpQkFBaUI7SUFDMUJDLE1BQU07SUFDTkMsVUFBVTtRQUFDO1FBQVU7UUFBTTtRQUFXO0tBQVU7SUFDaERDLFlBQVk7UUFDUkMsUUFBUTtZQUNKSCxNQUFNO1lBQ05DLFVBQVU7Z0JBQUM7Z0JBQVU7Z0JBQWM7Z0JBQWdCO2dCQUFPO2dCQUFhO2FBQU07WUFDN0VDLFlBQVk7Z0JBQ1JFLFFBQVE7b0JBQUVKLE1BQU07Z0JBQVM7Z0JBQ3pCSyxZQUFZO29CQUFFTCxNQUFNO2dCQUFTO2dCQUM3Qk0sY0FBYztvQkFBRU4sTUFBTTtnQkFBUztnQkFDL0JPLEtBQUs7b0JBQUVQLE1BQU07Z0JBQVM7Z0JBQ3RCUSxXQUFXO29CQUFFUixNQUFNO2dCQUFTO2dCQUM1QlMsTUFBTTtvQkFBRVQsTUFBTTtnQkFBUztnQkFDdkJVLEtBQUs7b0JBQUVWLE1BQU07Z0JBQVM7WUFDMUI7UUFDSjtRQUNBVyxJQUFJO1lBQUVYLE1BQU07UUFBUztRQUNyQlksU0FBUztZQUFFWixNQUFNO1FBQVM7UUFDMUJhLFNBQVM7WUFBRWIsTUFBTTtRQUFTO0lBQzlCO0FBQ0osRUFBRSxDQUNGLG1DQUFtQyIsInNvdXJjZXMiOlsid2VicGFjazovL2Zyb250ZW5kLy4vbm9kZV9tb2R1bGVzL3dlYjMtZXRoLWFjY291bnRzL2xpYi9lc20vc2NoZW1hcy5qcz9mMmRhIl0sInNvdXJjZXNDb250ZW50IjpbIi8qXG5UaGlzIGZpbGUgaXMgcGFydCBvZiB3ZWIzLmpzLlxuXG53ZWIzLmpzIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnlcbml0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieVxudGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSwgb3JcbihhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uXG5cbndlYjMuanMgaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCxcbmJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mXG5NRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlXG5HTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy5cblxuWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG5hbG9uZyB3aXRoIHdlYjMuanMuICBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uXG4qL1xuZXhwb3J0IGNvbnN0IGtleVN0b3JlU2NoZW1hID0ge1xuICAgIHR5cGU6ICdvYmplY3QnLFxuICAgIHJlcXVpcmVkOiBbJ2NyeXB0bycsICdpZCcsICd2ZXJzaW9uJywgJ2FkZHJlc3MnXSxcbiAgICBwcm9wZXJ0aWVzOiB7XG4gICAgICAgIGNyeXB0bzoge1xuICAgICAgICAgICAgdHlwZTogJ29iamVjdCcsXG4gICAgICAgICAgICByZXF1aXJlZDogWydjaXBoZXInLCAnY2lwaGVydGV4dCcsICdjaXBoZXJwYXJhbXMnLCAna2RmJywgJ2tkZnBhcmFtcycsICdtYWMnXSxcbiAgICAgICAgICAgIHByb3BlcnRpZXM6IHtcbiAgICAgICAgICAgICAgICBjaXBoZXI6IHsgdHlwZTogJ3N0cmluZycgfSxcbiAgICAgICAgICAgICAgICBjaXBoZXJ0ZXh0OiB7IHR5cGU6ICdzdHJpbmcnIH0sXG4gICAgICAgICAgICAgICAgY2lwaGVycGFyYW1zOiB7IHR5cGU6ICdvYmplY3QnIH0sXG4gICAgICAgICAgICAgICAga2RmOiB7IHR5cGU6ICdzdHJpbmcnIH0sXG4gICAgICAgICAgICAgICAga2RmcGFyYW1zOiB7IHR5cGU6ICdvYmplY3QnIH0sXG4gICAgICAgICAgICAgICAgc2FsdDogeyB0eXBlOiAnc3RyaW5nJyB9LFxuICAgICAgICAgICAgICAgIG1hYzogeyB0eXBlOiAnc3RyaW5nJyB9LFxuICAgICAgICAgICAgfSxcbiAgICAgICAgfSxcbiAgICAgICAgaWQ6IHsgdHlwZTogJ3N0cmluZycgfSxcbiAgICAgICAgdmVyc2lvbjogeyB0eXBlOiAnbnVtYmVyJyB9LFxuICAgICAgICBhZGRyZXNzOiB7IHR5cGU6ICdzdHJpbmcnIH0sXG4gICAgfSxcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zY2hlbWFzLmpzLm1hcCJdLCJuYW1lcyI6WyJrZXlTdG9yZVNjaGVtYSIsInR5cGUiLCJyZXF1aXJlZCIsInByb3BlcnRpZXMiLCJjcnlwdG8iLCJjaXBoZXIiLCJjaXBoZXJ0ZXh0IiwiY2lwaGVycGFyYW1zIiwia2RmIiwia2RmcGFyYW1zIiwic2FsdCIsIm1hYyIsImlkIiwidmVyc2lvbiIsImFkZHJlc3MiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/schemas.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/tx/address.js":
/*!**************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/tx/address.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Address: () => (/* binding */ Address)\n/* harmony export */ });\n/* harmony import */ var ethereum_cryptography_keccak_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ethereum-cryptography/keccak.js */ \"(ssr)/./node_modules/ethereum-cryptography/esm/keccak.js\");\n/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-utils */ \"(ssr)/./node_modules/web3-utils/lib/esm/index.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./constants.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/tx/constants.js\");\n/* harmony import */ var _common_utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../common/utils.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/utils.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ \n\n\n\nclass Address {\n    constructor(buf){\n        if (buf.length !== 20) {\n            throw new Error(\"Invalid address length\");\n        }\n        this.buf = buf;\n    }\n    /**\n     * Returns the zero address.\n     */ static zero() {\n        return new Address((0,_common_utils_js__WEBPACK_IMPORTED_MODULE_3__.zeros)(20));\n    }\n    /**\n     * Is address equal to another.\n     */ equals(address) {\n        return (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.uint8ArrayEquals)(this.buf, address.buf);\n    }\n    /**\n     * Is address zero.\n     */ isZero() {\n        return this.equals(Address.zero());\n    }\n    /**\n     * Returns hex encoding of address.\n     */ toString() {\n        return (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.bytesToHex)(this.buf);\n    }\n    /**\n     * Returns Uint8Array representation of address.\n     */ toArray() {\n        return this.buf;\n    }\n    /**\n     * Returns the ethereum address of a given public key.\n     * Accepts \"Ethereum public keys\" and SEC1 encoded keys.\n     * @param pubKey The two points of an uncompressed key, unless sanitize is enabled\n     * @param sanitize Accept public keys in other formats\n     */ static publicToAddress(_pubKey, sanitize = false) {\n        let pubKey = _pubKey;\n        (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_3__.assertIsUint8Array)(pubKey);\n        if (sanitize && pubKey.length !== 64) {\n            pubKey = _constants_js__WEBPACK_IMPORTED_MODULE_2__.secp256k1.ProjectivePoint.fromHex(pubKey).toRawBytes(false).slice(1);\n        }\n        if (pubKey.length !== 64) {\n            throw new Error(\"Expected pubKey to be of length 64\");\n        }\n        // Only take the lower 160bits of the hash\n        return (0,ethereum_cryptography_keccak_js__WEBPACK_IMPORTED_MODULE_0__.keccak256)(pubKey).slice(-20);\n    }\n} //# sourceMappingURL=address.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS90eC9hZGRyZXNzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7Ozs7Ozs7Ozs7Ozs7OztBQWVBLEdBQzREO0FBQ0Y7QUFDZjtBQUNvQjtBQUN4RCxNQUFNTTtJQUNUQyxZQUFZQyxHQUFHLENBQUU7UUFDYixJQUFJQSxJQUFJQyxNQUFNLEtBQUssSUFBSTtZQUNuQixNQUFNLElBQUlDLE1BQU07UUFDcEI7UUFDQSxJQUFJLENBQUNGLEdBQUcsR0FBR0E7SUFDZjtJQUNBOztLQUVDLEdBQ0QsT0FBT0csT0FBTztRQUNWLE9BQU8sSUFBSUwsUUFBUUQsdURBQUtBLENBQUM7SUFDN0I7SUFDQTs7S0FFQyxHQUNETyxPQUFPQyxPQUFPLEVBQUU7UUFDWixPQUFPWCw0REFBZ0JBLENBQUMsSUFBSSxDQUFDTSxHQUFHLEVBQUVLLFFBQVFMLEdBQUc7SUFDakQ7SUFDQTs7S0FFQyxHQUNETSxTQUFTO1FBQ0wsT0FBTyxJQUFJLENBQUNGLE1BQU0sQ0FBQ04sUUFBUUssSUFBSTtJQUNuQztJQUNBOztLQUVDLEdBQ0RJLFdBQVc7UUFDUCxPQUFPZCxzREFBVUEsQ0FBQyxJQUFJLENBQUNPLEdBQUc7SUFDOUI7SUFDQTs7S0FFQyxHQUNEUSxVQUFVO1FBQ04sT0FBTyxJQUFJLENBQUNSLEdBQUc7SUFDbkI7SUFDQTs7Ozs7S0FLQyxHQUNELE9BQU9TLGdCQUFnQkMsT0FBTyxFQUFFQyxXQUFXLEtBQUssRUFBRTtRQUM5QyxJQUFJQyxTQUFTRjtRQUNiZCxvRUFBa0JBLENBQUNnQjtRQUNuQixJQUFJRCxZQUFZQyxPQUFPWCxNQUFNLEtBQUssSUFBSTtZQUNsQ1csU0FBU2pCLG9EQUFTQSxDQUFDa0IsZUFBZSxDQUFDQyxPQUFPLENBQUNGLFFBQVFHLFVBQVUsQ0FBQyxPQUFPQyxLQUFLLENBQUM7UUFDL0U7UUFDQSxJQUFJSixPQUFPWCxNQUFNLEtBQUssSUFBSTtZQUN0QixNQUFNLElBQUlDLE1BQU07UUFDcEI7UUFDQSwwQ0FBMEM7UUFDMUMsT0FBT1YsMEVBQVNBLENBQUNvQixRQUFRSSxLQUFLLENBQUMsQ0FBQztJQUNwQztBQUNKLEVBQ0EsbUNBQW1DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS90eC9hZGRyZXNzLmpzPzQ2MzEiXSwic291cmNlc0NvbnRlbnQiOlsiLypcblRoaXMgZmlsZSBpcyBwYXJ0IG9mIHdlYjMuanMuXG5cbndlYjMuanMgaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeVxuaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5XG50aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBlaXRoZXIgdmVyc2lvbiAzIG9mIHRoZSBMaWNlbnNlLCBvclxuKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi5cblxud2ViMy5qcyBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLFxuYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2Zcbk1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGVcbkdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLlxuXG5Zb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2VcbmFsb25nIHdpdGggd2ViMy5qcy4gIElmIG5vdCwgc2VlIDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi5cbiovXG5pbXBvcnQgeyBrZWNjYWsyNTYgfSBmcm9tICdldGhlcmV1bS1jcnlwdG9ncmFwaHkva2VjY2FrLmpzJztcbmltcG9ydCB7IGJ5dGVzVG9IZXgsIHVpbnQ4QXJyYXlFcXVhbHMgfSBmcm9tICd3ZWIzLXV0aWxzJztcbmltcG9ydCB7IHNlY3AyNTZrMSB9IGZyb20gJy4vY29uc3RhbnRzLmpzJztcbmltcG9ydCB7IGFzc2VydElzVWludDhBcnJheSwgemVyb3MgfSBmcm9tICcuLi9jb21tb24vdXRpbHMuanMnO1xuZXhwb3J0IGNsYXNzIEFkZHJlc3Mge1xuICAgIGNvbnN0cnVjdG9yKGJ1Zikge1xuICAgICAgICBpZiAoYnVmLmxlbmd0aCAhPT0gMjApIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignSW52YWxpZCBhZGRyZXNzIGxlbmd0aCcpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuYnVmID0gYnVmO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIHRoZSB6ZXJvIGFkZHJlc3MuXG4gICAgICovXG4gICAgc3RhdGljIHplcm8oKSB7XG4gICAgICAgIHJldHVybiBuZXcgQWRkcmVzcyh6ZXJvcygyMCkpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBJcyBhZGRyZXNzIGVxdWFsIHRvIGFub3RoZXIuXG4gICAgICovXG4gICAgZXF1YWxzKGFkZHJlc3MpIHtcbiAgICAgICAgcmV0dXJuIHVpbnQ4QXJyYXlFcXVhbHModGhpcy5idWYsIGFkZHJlc3MuYnVmKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogSXMgYWRkcmVzcyB6ZXJvLlxuICAgICAqL1xuICAgIGlzWmVybygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZXF1YWxzKEFkZHJlc3MuemVybygpKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmV0dXJucyBoZXggZW5jb2Rpbmcgb2YgYWRkcmVzcy5cbiAgICAgKi9cbiAgICB0b1N0cmluZygpIHtcbiAgICAgICAgcmV0dXJuIGJ5dGVzVG9IZXgodGhpcy5idWYpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIFVpbnQ4QXJyYXkgcmVwcmVzZW50YXRpb24gb2YgYWRkcmVzcy5cbiAgICAgKi9cbiAgICB0b0FycmF5KCkge1xuICAgICAgICByZXR1cm4gdGhpcy5idWY7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJldHVybnMgdGhlIGV0aGVyZXVtIGFkZHJlc3Mgb2YgYSBnaXZlbiBwdWJsaWMga2V5LlxuICAgICAqIEFjY2VwdHMgXCJFdGhlcmV1bSBwdWJsaWMga2V5c1wiIGFuZCBTRUMxIGVuY29kZWQga2V5cy5cbiAgICAgKiBAcGFyYW0gcHViS2V5IFRoZSB0d28gcG9pbnRzIG9mIGFuIHVuY29tcHJlc3NlZCBrZXksIHVubGVzcyBzYW5pdGl6ZSBpcyBlbmFibGVkXG4gICAgICogQHBhcmFtIHNhbml0aXplIEFjY2VwdCBwdWJsaWMga2V5cyBpbiBvdGhlciBmb3JtYXRzXG4gICAgICovXG4gICAgc3RhdGljIHB1YmxpY1RvQWRkcmVzcyhfcHViS2V5LCBzYW5pdGl6ZSA9IGZhbHNlKSB7XG4gICAgICAgIGxldCBwdWJLZXkgPSBfcHViS2V5O1xuICAgICAgICBhc3NlcnRJc1VpbnQ4QXJyYXkocHViS2V5KTtcbiAgICAgICAgaWYgKHNhbml0aXplICYmIHB1YktleS5sZW5ndGggIT09IDY0KSB7XG4gICAgICAgICAgICBwdWJLZXkgPSBzZWNwMjU2azEuUHJvamVjdGl2ZVBvaW50LmZyb21IZXgocHViS2V5KS50b1Jhd0J5dGVzKGZhbHNlKS5zbGljZSgxKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAocHViS2V5Lmxlbmd0aCAhPT0gNjQpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignRXhwZWN0ZWQgcHViS2V5IHRvIGJlIG9mIGxlbmd0aCA2NCcpO1xuICAgICAgICB9XG4gICAgICAgIC8vIE9ubHkgdGFrZSB0aGUgbG93ZXIgMTYwYml0cyBvZiB0aGUgaGFzaFxuICAgICAgICByZXR1cm4ga2VjY2FrMjU2KHB1YktleSkuc2xpY2UoLTIwKTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hZGRyZXNzLmpzLm1hcCJdLCJuYW1lcyI6WyJrZWNjYWsyNTYiLCJieXRlc1RvSGV4IiwidWludDhBcnJheUVxdWFscyIsInNlY3AyNTZrMSIsImFzc2VydElzVWludDhBcnJheSIsInplcm9zIiwiQWRkcmVzcyIsImNvbnN0cnVjdG9yIiwiYnVmIiwibGVuZ3RoIiwiRXJyb3IiLCJ6ZXJvIiwiZXF1YWxzIiwiYWRkcmVzcyIsImlzWmVybyIsInRvU3RyaW5nIiwidG9BcnJheSIsInB1YmxpY1RvQWRkcmVzcyIsIl9wdWJLZXkiLCJzYW5pdGl6ZSIsInB1YktleSIsIlByb2plY3RpdmVQb2ludCIsImZyb21IZXgiLCJ0b1Jhd0J5dGVzIiwic2xpY2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/tx/address.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/tx/baseTransaction.js":
/*!**********************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/tx/baseTransaction.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BaseTransaction: () => (/* binding */ BaseTransaction)\n/* harmony export */ });\n/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-utils */ \"(ssr)/./node_modules/web3-utils/lib/esm/index.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constants.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/tx/constants.js\");\n/* harmony import */ var _common_utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common/utils.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/utils.js\");\n/* harmony import */ var _common_common_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../common/common.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/common.js\");\n/* harmony import */ var _common_enums_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../common/enums.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/enums.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./types.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/tx/types.js\");\n/* harmony import */ var _address_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./address.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/tx/address.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/tx/utils.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ \n\n\n\n\n\n\n\n/**\n * This base class will likely be subject to further\n * refactoring along the introduction of additional tx types\n * on the Ethereum network.\n *\n * It is therefore not recommended to use directly.\n */ class BaseTransaction {\n    constructor(txData, opts){\n        var _a, _b;\n        this.cache = {\n            hash: undefined,\n            dataFee: undefined\n        };\n        /**\n         * List of tx type defining EIPs,\n         * e.g. 1559 (fee market) and 2930 (access lists)\n         * for FeeMarketEIP1559Transaction objects\n         */ this.activeCapabilities = [];\n        /**\n         * The default chain the tx falls back to if no Common\n         * is provided and if the chain can't be derived from\n         * a passed in chainId (only EIP-2718 typed txs) or\n         * EIP-155 signature (legacy txs).\n         *\n         * @hidden\n         */ this.DEFAULT_CHAIN = _common_enums_js__WEBPACK_IMPORTED_MODULE_4__.Chain.Mainnet;\n        /**\n         * The default HF if the tx type is active on that HF\n         * or the first greater HF where the tx is active.\n         *\n         * @hidden\n         */ this.DEFAULT_HARDFORK = _common_enums_js__WEBPACK_IMPORTED_MODULE_4__.Hardfork.Merge;\n        const { nonce, gasLimit, to, value, data, v, r, s, type } = txData;\n        this._type = Number((0,_common_utils_js__WEBPACK_IMPORTED_MODULE_2__.uint8ArrayToBigInt)((0,_common_utils_js__WEBPACK_IMPORTED_MODULE_2__.toUint8Array)(type)));\n        this.txOptions = opts;\n        const toB = (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_2__.toUint8Array)(to === \"\" ? \"0x\" : to);\n        const vB = (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_2__.toUint8Array)(v === \"\" ? \"0x\" : v);\n        const rB = (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_2__.toUint8Array)(r === \"\" ? \"0x\" : r);\n        const sB = (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_2__.toUint8Array)(s === \"\" ? \"0x\" : s);\n        this.nonce = (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_2__.uint8ArrayToBigInt)((0,_common_utils_js__WEBPACK_IMPORTED_MODULE_2__.toUint8Array)(nonce === \"\" ? \"0x\" : nonce));\n        this.gasLimit = (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_2__.uint8ArrayToBigInt)((0,_common_utils_js__WEBPACK_IMPORTED_MODULE_2__.toUint8Array)(gasLimit === \"\" ? \"0x\" : gasLimit));\n        this.to = toB.length > 0 ? new _address_js__WEBPACK_IMPORTED_MODULE_6__.Address(toB) : undefined;\n        this.value = (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_2__.uint8ArrayToBigInt)((0,_common_utils_js__WEBPACK_IMPORTED_MODULE_2__.toUint8Array)(value === \"\" ? \"0x\" : value));\n        this.data = (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_2__.toUint8Array)(data === \"\" ? \"0x\" : data);\n        this.v = vB.length > 0 ? (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_2__.uint8ArrayToBigInt)(vB) : undefined;\n        this.r = rB.length > 0 ? (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_2__.uint8ArrayToBigInt)(rB) : undefined;\n        this.s = sB.length > 0 ? (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_2__.uint8ArrayToBigInt)(sB) : undefined;\n        this._validateCannotExceedMaxInteger({\n            value: this.value,\n            r: this.r,\n            s: this.s\n        });\n        // geth limits gasLimit to 2^64-1\n        this._validateCannotExceedMaxInteger({\n            gasLimit: this.gasLimit\n        }, 64);\n        // EIP-2681 limits nonce to 2^64-1 (cannot equal 2^64-1)\n        this._validateCannotExceedMaxInteger({\n            nonce: this.nonce\n        }, 64, true);\n        // eslint-disable-next-line no-null/no-null\n        const createContract = this.to === undefined || this.to === null;\n        const allowUnlimitedInitCodeSize = (_a = opts.allowUnlimitedInitCodeSize) !== null && _a !== void 0 ? _a : false;\n        const common = (_b = opts.common) !== null && _b !== void 0 ? _b : this._getCommon();\n        if (createContract && common.isActivatedEIP(3860) && !allowUnlimitedInitCodeSize) {\n            (0,_utils_js__WEBPACK_IMPORTED_MODULE_7__.checkMaxInitCodeSize)(common, this.data.length);\n        }\n    }\n    /**\n     * Returns the transaction type.\n     *\n     * Note: legacy txs will return tx type `0`.\n     */ get type() {\n        return this._type;\n    }\n    /**\n     * Checks if a tx type defining capability is active\n     * on a tx, for example the EIP-1559 fee market mechanism\n     * or the EIP-2930 access list feature.\n     *\n     * Note that this is different from the tx type itself,\n     * so EIP-2930 access lists can very well be active\n     * on an EIP-1559 tx for example.\n     *\n     * This method can be useful for feature checks if the\n     * tx type is unknown (e.g. when instantiated with\n     * the tx factory).\n     *\n     * See `Capabilites` in the `types` module for a reference\n     * on all supported capabilities.\n     */ supports(capability) {\n        return this.activeCapabilities.includes(capability);\n    }\n    validate(stringError = false) {\n        const errors = [];\n        if (this.getBaseFee() > this.gasLimit) {\n            errors.push(`gasLimit is too low. given ${this.gasLimit}, need at least ${this.getBaseFee()}`);\n        }\n        if (this.isSigned() && !this.verifySignature()) {\n            errors.push(\"Invalid Signature\");\n        }\n        return stringError ? errors : errors.length === 0;\n    }\n    _validateYParity() {\n        const { v } = this;\n        if (v !== undefined && v !== BigInt(0) && v !== BigInt(1)) {\n            const msg = this._errorMsg(\"The y-parity of the transaction should either be 0 or 1\");\n            throw new Error(msg);\n        }\n    }\n    /**\n     * EIP-2: All transaction signatures whose s-value is greater than secp256k1n/2are considered invalid.\n     * Reasoning: https://ethereum.stackexchange.com/a/55728\n     */ _validateHighS() {\n        const { s } = this;\n        if (this.common.gteHardfork(\"homestead\") && s !== undefined && s > _constants_js__WEBPACK_IMPORTED_MODULE_1__.SECP256K1_ORDER_DIV_2) {\n            const msg = this._errorMsg(\"Invalid Signature: s-values greater than secp256k1n/2 are considered invalid\");\n            throw new Error(msg);\n        }\n    }\n    /**\n     * The minimum amount of gas the tx must have (DataFee + TxFee + Creation Fee)\n     */ getBaseFee() {\n        const txFee = this.common.param(\"gasPrices\", \"tx\");\n        let fee = this.getDataFee();\n        if (txFee) fee += txFee;\n        if (this.common.gteHardfork(\"homestead\") && this.toCreationAddress()) {\n            const txCreationFee = this.common.param(\"gasPrices\", \"txCreation\");\n            if (txCreationFee) fee += txCreationFee;\n        }\n        return fee;\n    }\n    /**\n     * The amount of gas paid for the data in this tx\n     */ getDataFee() {\n        const txDataZero = this.common.param(\"gasPrices\", \"txDataZero\");\n        const txDataNonZero = this.common.param(\"gasPrices\", \"txDataNonZero\");\n        let cost = BigInt(0);\n        // eslint-disable-next-line @typescript-eslint/prefer-for-of\n        for(let i = 0; i < this.data.length; i += 1){\n            // eslint-disable-next-line @typescript-eslint/no-unused-expressions, no-unused-expressions\n            this.data[i] === 0 ? cost += txDataZero : cost += txDataNonZero;\n        }\n        // eslint-disable-next-line no-null/no-null\n        if ((this.to === undefined || this.to === null) && this.common.isActivatedEIP(3860)) {\n            const dataLength = BigInt(Math.ceil(this.data.length / 32));\n            const initCodeCost = this.common.param(\"gasPrices\", \"initCodeWordCost\") * dataLength;\n            cost += initCodeCost;\n        }\n        return cost;\n    }\n    /**\n     * If the tx's `to` is to the creation address\n     */ toCreationAddress() {\n        return this.to === undefined || this.to.buf.length === 0;\n    }\n    isSigned() {\n        const { v, r, s } = this;\n        if (v === undefined || r === undefined || s === undefined) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Determines if the signature is valid\n     */ verifySignature() {\n        try {\n            // Main signature verification is done in `getSenderPublicKey()`\n            const publicKey = this.getSenderPublicKey();\n            return (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_2__.unpadUint8Array)(publicKey).length !== 0;\n        } catch (e) {\n            return false;\n        }\n    }\n    /**\n     * Returns the sender's address\n     */ getSenderAddress() {\n        return new _address_js__WEBPACK_IMPORTED_MODULE_6__.Address(_address_js__WEBPACK_IMPORTED_MODULE_6__.Address.publicToAddress(this.getSenderPublicKey()));\n    }\n    /**\n     * Signs a transaction.\n     *\n     * Note that the signed tx is returned as a new object,\n     * use as follows:\n     * ```javascript\n     * const signedTx = tx.sign(privateKey)\n     * ```\n     */ sign(privateKey) {\n        if (privateKey.length !== 32) {\n            const msg = this._errorMsg(\"Private key must be 32 bytes in length.\");\n            throw new Error(msg);\n        }\n        // Hack for the constellation that we have got a legacy tx after spuriousDragon with a non-EIP155 conforming signature\n        // and want to recreate a signature (where EIP155 should be applied)\n        // Leaving this hack lets the legacy.spec.ts -> sign(), verifySignature() test fail\n        // 2021-06-23\n        let hackApplied = false;\n        if (this.type === 0 && this.common.gteHardfork(\"spuriousDragon\") && !this.supports(_types_js__WEBPACK_IMPORTED_MODULE_5__.Capability.EIP155ReplayProtection)) {\n            this.activeCapabilities.push(_types_js__WEBPACK_IMPORTED_MODULE_5__.Capability.EIP155ReplayProtection);\n            hackApplied = true;\n        }\n        const msgHash = this.getMessageToSign(true);\n        const { v, r, s } = this._ecsign(msgHash, privateKey);\n        const tx = this._processSignature(v, r, s);\n        // Hack part 2\n        if (hackApplied) {\n            const index = this.activeCapabilities.indexOf(_types_js__WEBPACK_IMPORTED_MODULE_5__.Capability.EIP155ReplayProtection);\n            if (index > -1) {\n                this.activeCapabilities.splice(index, 1);\n            }\n        }\n        return tx;\n    }\n    /**\n     * Does chain ID checks on common and returns a common\n     * to be used on instantiation\n     * @hidden\n     *\n     * @param common - {@link Common} instance from tx options\n     * @param chainId - Chain ID from tx options (typed txs) or signature (legacy tx)\n     */ _getCommon(common, chainId) {\n        var _a;\n        // Chain ID provided\n        if (chainId !== undefined) {\n            const chainIdBigInt = (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_2__.uint8ArrayToBigInt)((0,_common_utils_js__WEBPACK_IMPORTED_MODULE_2__.toUint8Array)(chainId));\n            if (common) {\n                if (common.chainId() !== chainIdBigInt) {\n                    const msg = this._errorMsg(\"The chain ID does not match the chain ID of Common\");\n                    throw new Error(msg);\n                }\n                // Common provided, chain ID does match\n                // -> Return provided Common\n                return common.copy();\n            }\n            if (_common_common_js__WEBPACK_IMPORTED_MODULE_3__.Common.isSupportedChainId(chainIdBigInt)) {\n                // No Common, chain ID supported by Common\n                // -> Instantiate Common with chain ID\n                return new _common_common_js__WEBPACK_IMPORTED_MODULE_3__.Common({\n                    chain: chainIdBigInt,\n                    hardfork: this.DEFAULT_HARDFORK\n                });\n            }\n            // No Common, chain ID not supported by Common\n            // -> Instantiate custom Common derived from DEFAULT_CHAIN\n            return _common_common_js__WEBPACK_IMPORTED_MODULE_3__.Common.custom({\n                name: \"custom-chain\",\n                networkId: chainIdBigInt,\n                chainId: chainIdBigInt\n            }, {\n                baseChain: this.DEFAULT_CHAIN,\n                hardfork: this.DEFAULT_HARDFORK\n            });\n        }\n        // No chain ID provided\n        // -> return Common provided or create new default Common\n        return (_a = common === null || common === void 0 ? void 0 : common.copy()) !== null && _a !== void 0 ? _a : new _common_common_js__WEBPACK_IMPORTED_MODULE_3__.Common({\n            chain: this.DEFAULT_CHAIN,\n            hardfork: this.DEFAULT_HARDFORK\n        });\n    }\n    /**\n     * Validates that an object with BigInt values cannot exceed the specified bit limit.\n     * @param values Object containing string keys and BigInt values\n     * @param bits Number of bits to check (64 or 256)\n     * @param cannotEqual Pass true if the number also cannot equal one less the maximum value\n     */ _validateCannotExceedMaxInteger(values, bits = 256, cannotEqual = false) {\n        for (const [key, value] of Object.entries(values)){\n            switch(bits){\n                case 64:\n                    if (cannotEqual) {\n                        if (value !== undefined && value >= _constants_js__WEBPACK_IMPORTED_MODULE_1__.MAX_UINT64) {\n                            const msg = this._errorMsg(`${key} cannot equal or exceed MAX_UINT64 (2^64-1), given ${value}`);\n                            throw new Error(msg);\n                        }\n                    } else if (value !== undefined && value > _constants_js__WEBPACK_IMPORTED_MODULE_1__.MAX_UINT64) {\n                        const msg = this._errorMsg(`${key} cannot exceed MAX_UINT64 (2^64-1), given ${value}`);\n                        throw new Error(msg);\n                    }\n                    break;\n                case 256:\n                    if (cannotEqual) {\n                        if (value !== undefined && value >= _constants_js__WEBPACK_IMPORTED_MODULE_1__.MAX_INTEGER) {\n                            const msg = this._errorMsg(`${key} cannot equal or exceed MAX_INTEGER (2^256-1), given ${value}`);\n                            throw new Error(msg);\n                        }\n                    } else if (value !== undefined && value > _constants_js__WEBPACK_IMPORTED_MODULE_1__.MAX_INTEGER) {\n                        const msg = this._errorMsg(`${key} cannot exceed MAX_INTEGER (2^256-1), given ${value}`);\n                        throw new Error(msg);\n                    }\n                    break;\n                default:\n                    {\n                        const msg = this._errorMsg(\"unimplemented bits value\");\n                        throw new Error(msg);\n                    }\n            }\n        }\n    }\n    static _validateNotArray(values) {\n        const txDataKeys = [\n            \"nonce\",\n            \"gasPrice\",\n            \"gasLimit\",\n            \"to\",\n            \"value\",\n            \"data\",\n            \"v\",\n            \"r\",\n            \"s\",\n            \"type\",\n            \"baseFee\",\n            \"maxFeePerGas\",\n            \"chainId\"\n        ];\n        for (const [key, value] of Object.entries(values)){\n            if (txDataKeys.includes(key)) {\n                if (Array.isArray(value)) {\n                    throw new Error(`${key} cannot be an array`);\n                }\n            }\n        }\n    }\n    /**\n     * Returns the shared error postfix part for _error() method\n     * tx type implementations.\n     */ _getSharedErrorPostfix() {\n        let hash = \"\";\n        try {\n            hash = this.isSigned() ? (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.bytesToHex)(this.hash()) : \"not available (unsigned)\";\n        } catch (e) {\n            hash = \"error\";\n        }\n        let isSigned = \"\";\n        try {\n            isSigned = this.isSigned().toString();\n        } catch (e) {\n            hash = \"error\";\n        }\n        let hf = \"\";\n        try {\n            hf = this.common.hardfork();\n        } catch (e) {\n            hf = \"error\";\n        }\n        let postfix = `tx type=${this.type} hash=${hash} nonce=${this.nonce} value=${this.value} `;\n        postfix += `signed=${isSigned} hf=${hf}`;\n        return postfix;\n    }\n    // eslint-disable-next-line class-methods-use-this\n    _ecsign(msgHash, privateKey, chainId) {\n        const signature = _constants_js__WEBPACK_IMPORTED_MODULE_1__.secp256k1.sign(msgHash, privateKey);\n        const signatureBytes = signature.toCompactRawBytes();\n        const r = signatureBytes.subarray(0, 32);\n        const s = signatureBytes.subarray(32, 64);\n        const v = chainId === undefined ? BigInt(signature.recovery + 27) : BigInt(signature.recovery + 35) + BigInt(chainId) * BigInt(2);\n        return {\n            r,\n            s,\n            v\n        };\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    static fromSerializedTx(// @ts-expect-error unused variable\n    serialized, // @ts-expect-error unused variable\n    opts = {}) {}\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    static fromTxData(// @ts-expect-error unused variable\n    txData, // @ts-expect-error unused variable\n    opts = {}) {}\n} //# sourceMappingURL=baseTransaction.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/tx/baseTransaction.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/tx/constants.js":
/*!****************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/tx/constants.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MAX_INTEGER: () => (/* binding */ MAX_INTEGER),\n/* harmony export */   MAX_UINT64: () => (/* binding */ MAX_UINT64),\n/* harmony export */   SECP256K1_ORDER: () => (/* binding */ SECP256K1_ORDER),\n/* harmony export */   SECP256K1_ORDER_DIV_2: () => (/* binding */ SECP256K1_ORDER_DIV_2),\n/* harmony export */   secp256k1: () => (/* binding */ secp256k1)\n/* harmony export */ });\n/* harmony import */ var ethereum_cryptography_secp256k1_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ethereum-cryptography/secp256k1.js */ \"(ssr)/./node_modules/ethereum-cryptography/esm/secp256k1.js\");\nvar _a;\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ // eslint-disable-next-line import/extensions\n\nconst secp256k1 = (_a = ethereum_cryptography_secp256k1_js__WEBPACK_IMPORTED_MODULE_0__.secp256k1) !== null && _a !== void 0 ? _a : ethereum_cryptography_secp256k1_js__WEBPACK_IMPORTED_MODULE_0__;\n/**\n * 2^64-1\n */ const MAX_UINT64 = BigInt(\"0xffffffffffffffff\");\n/**\n * The max integer that the evm can handle (2^256-1)\n */ const MAX_INTEGER = BigInt(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\nconst SECP256K1_ORDER = secp256k1.CURVE.n;\nconst SECP256K1_ORDER_DIV_2 = SECP256K1_ORDER / BigInt(2); //# sourceMappingURL=constants.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS90eC9jb25zdGFudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUEsSUFBSUE7QUFDSjs7Ozs7Ozs7Ozs7Ozs7O0FBZUEsR0FDQSw2Q0FBNkM7QUFDOEI7QUFDcEUsTUFBTUUsWUFBWSxDQUFDRixLQUFLQyx5RUFBOEIsTUFBTSxRQUFRRCxPQUFPLEtBQUssSUFBSUEsS0FBS0MsK0RBQW9CQSxDQUFDO0FBQ3JIOztDQUVDLEdBQ00sTUFBTUUsYUFBYUMsT0FBTyxzQkFBc0I7QUFDdkQ7O0NBRUMsR0FDTSxNQUFNQyxjQUFjRCxPQUFPLHNFQUFzRTtBQUNqRyxNQUFNRSxrQkFBa0JKLFVBQVVLLEtBQUssQ0FBQ0MsQ0FBQyxDQUFDO0FBQzFDLE1BQU1DLHdCQUF3Qkgsa0JBQWtCRixPQUFPLEdBQUcsQ0FDakUscUNBQXFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS90eC9jb25zdGFudHMuanM/NzM4YSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgX2E7XG4vKlxuVGhpcyBmaWxlIGlzIHBhcnQgb2Ygd2ViMy5qcy5cblxud2ViMy5qcyBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5XG5pdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnlcbnRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yXG4oYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLlxuXG53ZWIzLmpzIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsXG5idXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZlxuTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZVxuR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG5cbllvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZVxuYWxvbmcgd2l0aCB3ZWIzLmpzLiAgSWYgbm90LCBzZWUgPGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LlxuKi9cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBpbXBvcnQvZXh0ZW5zaW9uc1xuaW1wb3J0ICogYXMgZXRoZXJldW1DcnlwdG9ncmFwaHkgZnJvbSAnZXRoZXJldW0tY3J5cHRvZ3JhcGh5L3NlY3AyNTZrMS5qcyc7XG5leHBvcnQgY29uc3Qgc2VjcDI1NmsxID0gKF9hID0gZXRoZXJldW1DcnlwdG9ncmFwaHkuc2VjcDI1NmsxKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBldGhlcmV1bUNyeXB0b2dyYXBoeTtcbi8qKlxuICogMl42NC0xXG4gKi9cbmV4cG9ydCBjb25zdCBNQVhfVUlOVDY0ID0gQmlnSW50KCcweGZmZmZmZmZmZmZmZmZmZmYnKTtcbi8qKlxuICogVGhlIG1heCBpbnRlZ2VyIHRoYXQgdGhlIGV2bSBjYW4gaGFuZGxlICgyXjI1Ni0xKVxuICovXG5leHBvcnQgY29uc3QgTUFYX0lOVEVHRVIgPSBCaWdJbnQoJzB4ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZicpO1xuZXhwb3J0IGNvbnN0IFNFQ1AyNTZLMV9PUkRFUiA9IHNlY3AyNTZrMS5DVVJWRS5uO1xuZXhwb3J0IGNvbnN0IFNFQ1AyNTZLMV9PUkRFUl9ESVZfMiA9IFNFQ1AyNTZLMV9PUkRFUiAvIEJpZ0ludCgyKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvbnN0YW50cy5qcy5tYXAiXSwibmFtZXMiOlsiX2EiLCJldGhlcmV1bUNyeXB0b2dyYXBoeSIsInNlY3AyNTZrMSIsIk1BWF9VSU5UNjQiLCJCaWdJbnQiLCJNQVhfSU5URUdFUiIsIlNFQ1AyNTZLMV9PUkRFUiIsIkNVUlZFIiwibiIsIlNFQ1AyNTZLMV9PUkRFUl9ESVZfMiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/tx/constants.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/tx/eip1559Transaction.js":
/*!*************************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/tx/eip1559Transaction.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FeeMarketEIP1559Transaction: () => (/* binding */ FeeMarketEIP1559Transaction)\n/* harmony export */ });\n/* harmony import */ var ethereum_cryptography_keccak_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ethereum-cryptography/keccak.js */ \"(ssr)/./node_modules/ethereum-cryptography/esm/keccak.js\");\n/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-validator */ \"(ssr)/./node_modules/web3-validator/lib/esm/index.js\");\n/* harmony import */ var _ethereumjs_rlp__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ethereumjs/rlp */ \"(ssr)/./node_modules/@ethereumjs/rlp/dist/index.js\");\n/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! web3-utils */ \"(ssr)/./node_modules/web3-utils/lib/esm/index.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./constants.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/tx/constants.js\");\n/* harmony import */ var _baseTransaction_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./baseTransaction.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/tx/baseTransaction.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/tx/utils.js\");\n/* harmony import */ var _common_utils_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../common/utils.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/utils.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ \n\n\n\n\n\n\n\nconst TRANSACTION_TYPE = 2;\nconst TRANSACTION_TYPE_UINT8ARRAY = (0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.hexToBytes)(TRANSACTION_TYPE.toString(16).padStart(2, \"0\"));\n/**\n * Typed transaction with a new gas fee market mechanism\n *\n * - TransactionType: 2\n * - EIP: [EIP-1559](https://eips.ethereum.org/EIPS/eip-1559)\n */ // eslint-disable-next-line no-use-before-define\nclass FeeMarketEIP1559Transaction extends _baseTransaction_js__WEBPACK_IMPORTED_MODULE_5__.BaseTransaction {\n    /**\n     * This constructor takes the values, validates them, assigns them and freezes the object.\n     *\n     * It is not recommended to use this constructor directly. Instead use\n     * the static factory methods to assist in creating a Transaction object from\n     * varying data types.\n     */ constructor(txData, opts = {}){\n        var _a;\n        super(Object.assign(Object.assign({}, txData), {\n            type: TRANSACTION_TYPE\n        }), opts);\n        /**\n         * The default HF if the tx type is active on that HF\n         * or the first greater HF where the tx is active.\n         *\n         * @hidden\n         */ this.DEFAULT_HARDFORK = \"london\";\n        const { chainId, accessList, maxFeePerGas, maxPriorityFeePerGas } = txData;\n        this.common = this._getCommon(opts.common, chainId);\n        this.chainId = this.common.chainId();\n        if (!this.common.isActivatedEIP(1559)) {\n            throw new Error(\"EIP-1559 not enabled on Common\");\n        }\n        this.activeCapabilities = this.activeCapabilities.concat([\n            1559,\n            2718,\n            2930\n        ]);\n        // Populate the access list fields\n        const accessListData = (0,_utils_js__WEBPACK_IMPORTED_MODULE_6__.getAccessListData)(accessList !== null && accessList !== void 0 ? accessList : []);\n        this.accessList = accessListData.accessList;\n        this.AccessListJSON = accessListData.AccessListJSON;\n        // Verify the access list format.\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_6__.verifyAccessList)(this.accessList);\n        this.maxFeePerGas = (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_7__.uint8ArrayToBigInt)((0,_common_utils_js__WEBPACK_IMPORTED_MODULE_7__.toUint8Array)(maxFeePerGas === \"\" ? \"0x\" : maxFeePerGas));\n        this.maxPriorityFeePerGas = (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_7__.uint8ArrayToBigInt)((0,_common_utils_js__WEBPACK_IMPORTED_MODULE_7__.toUint8Array)(maxPriorityFeePerGas === \"\" ? \"0x\" : maxPriorityFeePerGas));\n        this._validateCannotExceedMaxInteger({\n            maxFeePerGas: this.maxFeePerGas,\n            maxPriorityFeePerGas: this.maxPriorityFeePerGas\n        });\n        _baseTransaction_js__WEBPACK_IMPORTED_MODULE_5__.BaseTransaction._validateNotArray(txData);\n        if (this.gasLimit * this.maxFeePerGas > _constants_js__WEBPACK_IMPORTED_MODULE_4__.MAX_INTEGER) {\n            const msg = this._errorMsg(\"gasLimit * maxFeePerGas cannot exceed MAX_INTEGER (2^256-1)\");\n            throw new Error(msg);\n        }\n        if (this.maxFeePerGas < this.maxPriorityFeePerGas) {\n            const msg = this._errorMsg(\"maxFeePerGas cannot be less than maxPriorityFeePerGas (The total must be the larger of the two)\");\n            throw new Error(msg);\n        }\n        this._validateYParity();\n        this._validateHighS();\n        const freeze = (_a = opts === null || opts === void 0 ? void 0 : opts.freeze) !== null && _a !== void 0 ? _a : true;\n        if (freeze) {\n            Object.freeze(this);\n        }\n    }\n    /**\n     * Instantiate a transaction from a data dictionary.\n     *\n     * Format: { chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n     * accessList, v, r, s }\n     *\n     * Notes:\n     * - `chainId` will be set automatically if not provided\n     * - All parameters are optional and have some basic default values\n     */ static fromTxData(txData, opts = {}) {\n        return new FeeMarketEIP1559Transaction(txData, opts);\n    }\n    /**\n     * Instantiate a transaction from the serialized tx.\n     *\n     * Format: `0x02 || rlp([chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n     * accessList, signatureYParity, signatureR, signatureS])`\n     */ static fromSerializedTx(serialized, opts = {}) {\n        if (!(0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.uint8ArrayEquals)(serialized.subarray(0, 1), TRANSACTION_TYPE_UINT8ARRAY)) {\n            throw new Error(`Invalid serialized tx input: not an EIP-1559 transaction (wrong tx type, expected: ${TRANSACTION_TYPE}, received: ${(0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.bytesToHex)(serialized.subarray(0, 1))}`);\n        }\n        const values = _ethereumjs_rlp__WEBPACK_IMPORTED_MODULE_2__.RLP.decode(serialized.subarray(1));\n        if (!Array.isArray(values)) {\n            throw new Error(\"Invalid serialized tx input: must be array\");\n        }\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        return FeeMarketEIP1559Transaction.fromValuesArray(values, opts);\n    }\n    /**\n     * Create a transaction from a values array.\n     *\n     * Format: `[chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n     * accessList, signatureYParity, signatureR, signatureS]`\n     */ static fromValuesArray(values, opts = {}) {\n        if (values.length !== 9 && values.length !== 12) {\n            throw new Error(\"Invalid EIP-1559 transaction. Only expecting 9 values (for unsigned tx) or 12 values (for signed tx).\");\n        }\n        const [chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data, accessList, v, r, s] = values;\n        this._validateNotArray({\n            chainId,\n            v\n        });\n        (0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.validateNoLeadingZeroes)({\n            nonce,\n            maxPriorityFeePerGas,\n            maxFeePerGas,\n            gasLimit,\n            value,\n            v,\n            r,\n            s\n        });\n        return new FeeMarketEIP1559Transaction({\n            chainId: (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_7__.uint8ArrayToBigInt)(chainId),\n            nonce,\n            maxPriorityFeePerGas,\n            maxFeePerGas,\n            gasLimit,\n            to,\n            value,\n            data,\n            accessList: accessList !== null && accessList !== void 0 ? accessList : [],\n            v: v !== undefined ? (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_7__.uint8ArrayToBigInt)(v) : undefined,\n            r,\n            s\n        }, opts);\n    }\n    /**\n     * The amount of gas paid for the data in this tx\n     */ getDataFee() {\n        if (this.cache.dataFee && this.cache.dataFee.hardfork === this.common.hardfork()) {\n            return this.cache.dataFee.value;\n        }\n        let cost = super.getDataFee();\n        cost += BigInt((0,_utils_js__WEBPACK_IMPORTED_MODULE_6__.getDataFeeEIP2930)(this.accessList, this.common));\n        if (Object.isFrozen(this)) {\n            this.cache.dataFee = {\n                value: cost,\n                hardfork: this.common.hardfork()\n            };\n        }\n        return cost;\n    }\n    /**\n     * The up front amount that an account must have for this transaction to be valid\n     * @param baseFee The base fee of the block (will be set to 0 if not provided)\n     */ getUpfrontCost(baseFee = BigInt(0)) {\n        const prio = this.maxPriorityFeePerGas;\n        const maxBase = this.maxFeePerGas - baseFee;\n        const inclusionFeePerGas = prio < maxBase ? prio : maxBase;\n        const gasPrice = inclusionFeePerGas + baseFee;\n        return this.gasLimit * gasPrice + this.value;\n    }\n    /**\n     * Returns a Uint8Array Array of the raw Uint8Arrays of the EIP-1559 transaction, in order.\n     *\n     * Format: `[chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n     * accessList, signatureYParity, signatureR, signatureS]`\n     *\n     * Use {@link FeeMarketEIP1559Transaction.serialize} to add a transaction to a block\n     * with {@link Block.fromValuesArray}.\n     *\n     * For an unsigned tx this method uses the empty Uint8Array values for the\n     * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n     * representation for external signing use {@link FeeMarketEIP1559Transaction.getMessageToSign}.\n     */ raw() {\n        return [\n            (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_7__.bigIntToUnpaddedUint8Array)(this.chainId),\n            (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_7__.bigIntToUnpaddedUint8Array)(this.nonce),\n            (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_7__.bigIntToUnpaddedUint8Array)(this.maxPriorityFeePerGas),\n            (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_7__.bigIntToUnpaddedUint8Array)(this.maxFeePerGas),\n            (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_7__.bigIntToUnpaddedUint8Array)(this.gasLimit),\n            this.to !== undefined ? this.to.buf : Uint8Array.from([]),\n            (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_7__.bigIntToUnpaddedUint8Array)(this.value),\n            this.data,\n            this.accessList,\n            this.v !== undefined ? (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_7__.bigIntToUnpaddedUint8Array)(this.v) : Uint8Array.from([]),\n            this.r !== undefined ? (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_7__.bigIntToUnpaddedUint8Array)(this.r) : Uint8Array.from([]),\n            this.s !== undefined ? (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_7__.bigIntToUnpaddedUint8Array)(this.s) : Uint8Array.from([])\n        ];\n    }\n    /**\n     * Returns the serialized encoding of the EIP-1559 transaction.\n     *\n     * Format: `0x02 || rlp([chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n     * accessList, signatureYParity, signatureR, signatureS])`\n     *\n     * Note that in contrast to the legacy tx serialization format this is not\n     * valid RLP any more due to the raw tx type preceding and concatenated to\n     * the RLP encoding of the values.\n     */ serialize() {\n        const base = this.raw();\n        return (0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.uint8ArrayConcat)(TRANSACTION_TYPE_UINT8ARRAY, _ethereumjs_rlp__WEBPACK_IMPORTED_MODULE_2__.RLP.encode(base));\n    }\n    /**\n     * Returns the serialized unsigned tx (hashed or raw), which can be used\n     * to sign the transaction (e.g. for sending to a hardware wallet).\n     *\n     * Note: in contrast to the legacy tx the raw message format is already\n     * serialized and doesn't need to be RLP encoded any more.\n     *\n     * ```javascript\n     * const serializedMessage = tx.getMessageToSign(false) // use this for the HW wallet input\n     * ```\n     *\n     * @param hashMessage - Return hashed message if set to true (default: true)\n     */ getMessageToSign(hashMessage = true) {\n        const base = this.raw().slice(0, 9);\n        const message = (0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.uint8ArrayConcat)(TRANSACTION_TYPE_UINT8ARRAY, _ethereumjs_rlp__WEBPACK_IMPORTED_MODULE_2__.RLP.encode(base));\n        if (hashMessage) {\n            return (0,ethereum_cryptography_keccak_js__WEBPACK_IMPORTED_MODULE_0__.keccak256)(message);\n        }\n        return message;\n    }\n    /**\n     * Computes a sha3-256 hash of the serialized tx.\n     *\n     * This method can only be used for signed txs (it throws otherwise).\n     * Use {@link FeeMarketEIP1559Transaction.getMessageToSign} to get a tx hash for the purpose of signing.\n     */ hash() {\n        if (!this.isSigned()) {\n            const msg = this._errorMsg(\"Cannot call hash method if transaction is not signed\");\n            throw new Error(msg);\n        }\n        if (Object.isFrozen(this)) {\n            if (!this.cache.hash) {\n                this.cache.hash = (0,ethereum_cryptography_keccak_js__WEBPACK_IMPORTED_MODULE_0__.keccak256)(this.serialize());\n            }\n            return this.cache.hash;\n        }\n        return (0,ethereum_cryptography_keccak_js__WEBPACK_IMPORTED_MODULE_0__.keccak256)(this.serialize());\n    }\n    /**\n     * Computes a sha3-256 hash which can be used to verify the signature\n     */ getMessageToVerifySignature() {\n        return this.getMessageToSign();\n    }\n    /**\n     * Returns the public key of the sender\n     */ getSenderPublicKey() {\n        if (!this.isSigned()) {\n            const msg = this._errorMsg(\"Cannot call this method if transaction is not signed\");\n            throw new Error(msg);\n        }\n        const msgHash = this.getMessageToVerifySignature();\n        const { v, r, s } = this;\n        this._validateHighS();\n        try {\n            return (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_7__.ecrecover)(msgHash, v + BigInt(27), (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_7__.bigIntToUnpaddedUint8Array)(r), (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_7__.bigIntToUnpaddedUint8Array)(s));\n        } catch (e) {\n            const msg = this._errorMsg(\"Invalid Signature\");\n            throw new Error(msg);\n        }\n    }\n    _processSignature(v, r, s) {\n        const opts = Object.assign(Object.assign({}, this.txOptions), {\n            common: this.common\n        });\n        return FeeMarketEIP1559Transaction.fromTxData({\n            chainId: this.chainId,\n            nonce: this.nonce,\n            maxPriorityFeePerGas: this.maxPriorityFeePerGas,\n            maxFeePerGas: this.maxFeePerGas,\n            gasLimit: this.gasLimit,\n            to: this.to,\n            value: this.value,\n            data: this.data,\n            accessList: this.accessList,\n            v: v - BigInt(27),\n            r: (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_7__.uint8ArrayToBigInt)(r),\n            s: (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_7__.uint8ArrayToBigInt)(s)\n        }, opts);\n    }\n    /**\n     * Returns an object with the JSON representation of the transaction\n     */ toJSON() {\n        const accessListJSON = (0,_utils_js__WEBPACK_IMPORTED_MODULE_6__.getAccessListJSON)(this.accessList);\n        return {\n            chainId: (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_7__.bigIntToHex)(this.chainId),\n            nonce: (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_7__.bigIntToHex)(this.nonce),\n            maxPriorityFeePerGas: (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_7__.bigIntToHex)(this.maxPriorityFeePerGas),\n            maxFeePerGas: (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_7__.bigIntToHex)(this.maxFeePerGas),\n            gasLimit: (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_7__.bigIntToHex)(this.gasLimit),\n            to: this.to !== undefined ? this.to.toString() : undefined,\n            value: (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_7__.bigIntToHex)(this.value),\n            data: (0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.bytesToHex)(this.data),\n            accessList: accessListJSON,\n            v: this.v !== undefined ? (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_7__.bigIntToHex)(this.v) : undefined,\n            r: this.r !== undefined ? (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_7__.bigIntToHex)(this.r) : undefined,\n            s: this.s !== undefined ? (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_7__.bigIntToHex)(this.s) : undefined\n        };\n    }\n    /**\n     * Return a compact error string representation of the object\n     */ errorStr() {\n        let errorStr = this._getSharedErrorPostfix();\n        errorStr += ` maxFeePerGas=${this.maxFeePerGas} maxPriorityFeePerGas=${this.maxPriorityFeePerGas}`;\n        return errorStr;\n    }\n    /**\n     * Internal helper function to create an annotated error message\n     *\n     * @param msg Base error message\n     * @hidden\n     */ _errorMsg(msg) {\n        return `${msg} (${this.errorStr()})`;\n    }\n} //# sourceMappingURL=eip1559Transaction.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/tx/eip1559Transaction.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/tx/eip2930Transaction.js":
/*!*************************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/tx/eip2930Transaction.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AccessListEIP2930Transaction: () => (/* binding */ AccessListEIP2930Transaction)\n/* harmony export */ });\n/* harmony import */ var ethereum_cryptography_keccak_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ethereum-cryptography/keccak.js */ \"(ssr)/./node_modules/ethereum-cryptography/esm/keccak.js\");\n/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-validator */ \"(ssr)/./node_modules/web3-validator/lib/esm/index.js\");\n/* harmony import */ var _ethereumjs_rlp__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ethereumjs/rlp */ \"(ssr)/./node_modules/@ethereumjs/rlp/dist/index.js\");\n/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! web3-utils */ \"(ssr)/./node_modules/web3-utils/lib/esm/index.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./constants.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/tx/constants.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/tx/utils.js\");\n/* harmony import */ var _common_utils_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../common/utils.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/utils.js\");\n/* harmony import */ var _baseTransaction_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./baseTransaction.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/tx/baseTransaction.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ \n\n\n\n\n\n\n\nconst TRANSACTION_TYPE = 1;\nconst TRANSACTION_TYPE_UINT8ARRAY = (0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.hexToBytes)(TRANSACTION_TYPE.toString(16).padStart(2, \"0\"));\n/**\n * Typed transaction with optional access lists\n *\n * - TransactionType: 1\n * - EIP: [EIP-2930](https://eips.ethereum.org/EIPS/eip-2930)\n */ // eslint-disable-next-line no-use-before-define\nclass AccessListEIP2930Transaction extends _baseTransaction_js__WEBPACK_IMPORTED_MODULE_7__.BaseTransaction {\n    /**\n     * This constructor takes the values, validates them, assigns them and freezes the object.\n     *\n     * It is not recommended to use this constructor directly. Instead use\n     * the static factory methods to assist in creating a Transaction object from\n     * varying data types.\n     */ constructor(txData, opts = {}){\n        var _a;\n        super(Object.assign(Object.assign({}, txData), {\n            type: TRANSACTION_TYPE\n        }), opts);\n        /**\n         * The default HF if the tx type is active on that HF\n         * or the first greater HF where the tx is active.\n         *\n         * @hidden\n         */ this.DEFAULT_HARDFORK = \"berlin\";\n        const { chainId, accessList, gasPrice } = txData;\n        this.common = this._getCommon(opts.common, chainId);\n        this.chainId = this.common.chainId();\n        // EIP-2718 check is done in Common\n        if (!this.common.isActivatedEIP(2930)) {\n            throw new Error(\"EIP-2930 not enabled on Common\");\n        }\n        this.activeCapabilities = this.activeCapabilities.concat([\n            2718,\n            2930\n        ]);\n        // Populate the access list fields\n        const accessListData = (0,_utils_js__WEBPACK_IMPORTED_MODULE_5__.getAccessListData)(accessList !== null && accessList !== void 0 ? accessList : []);\n        this.accessList = accessListData.accessList;\n        this.AccessListJSON = accessListData.AccessListJSON;\n        // Verify the access list format.\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_5__.verifyAccessList)(this.accessList);\n        this.gasPrice = (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_6__.uint8ArrayToBigInt)((0,_common_utils_js__WEBPACK_IMPORTED_MODULE_6__.toUint8Array)(gasPrice === \"\" ? \"0x\" : gasPrice));\n        this._validateCannotExceedMaxInteger({\n            gasPrice: this.gasPrice\n        });\n        _baseTransaction_js__WEBPACK_IMPORTED_MODULE_7__.BaseTransaction._validateNotArray(txData);\n        if (this.gasPrice * this.gasLimit > _constants_js__WEBPACK_IMPORTED_MODULE_4__.MAX_INTEGER) {\n            const msg = this._errorMsg(\"gasLimit * gasPrice cannot exceed MAX_INTEGER\");\n            throw new Error(msg);\n        }\n        this._validateYParity();\n        this._validateHighS();\n        const freeze = (_a = opts === null || opts === void 0 ? void 0 : opts.freeze) !== null && _a !== void 0 ? _a : true;\n        if (freeze) {\n            Object.freeze(this);\n        }\n    }\n    /**\n     * Instantiate a transaction from a data dictionary.\n     *\n     * Format: { chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n     * v, r, s }\n     *\n     * Notes:\n     * - `chainId` will be set automatically if not provided\n     * - All parameters are optional and have some basic default values\n     */ static fromTxData(txData, opts = {}) {\n        return new AccessListEIP2930Transaction(txData, opts);\n    }\n    /**\n     * Instantiate a transaction from the serialized tx.\n     *\n     * Format: `0x01 || rlp([chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n     * signatureYParity (v), signatureR (r), signatureS (s)])`\n     */ static fromSerializedTx(serialized, opts = {}) {\n        if (!(0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.uint8ArrayEquals)(serialized.subarray(0, 1), TRANSACTION_TYPE_UINT8ARRAY)) {\n            throw new Error(`Invalid serialized tx input: not an EIP-2930 transaction (wrong tx type, expected: ${TRANSACTION_TYPE}, received: ${(0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.bytesToHex)(serialized.subarray(0, 1))}`);\n        }\n        const values = _ethereumjs_rlp__WEBPACK_IMPORTED_MODULE_2__.RLP.decode(Uint8Array.from(serialized.subarray(1)));\n        if (!Array.isArray(values)) {\n            throw new Error(\"Invalid serialized tx input: must be array\");\n        }\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        return AccessListEIP2930Transaction.fromValuesArray(values, opts);\n    }\n    /**\n     * Create a transaction from a values array.\n     *\n     * Format: `[chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n     * signatureYParity (v), signatureR (r), signatureS (s)]`\n     */ static fromValuesArray(values, opts = {}) {\n        if (values.length !== 8 && values.length !== 11) {\n            throw new Error(\"Invalid EIP-2930 transaction. Only expecting 8 values (for unsigned tx) or 11 values (for signed tx).\");\n        }\n        const [chainId, nonce, gasPrice, gasLimit, to, value, data, accessList, v, r, s] = values;\n        this._validateNotArray({\n            chainId,\n            v\n        });\n        (0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.validateNoLeadingZeroes)({\n            nonce,\n            gasPrice,\n            gasLimit,\n            value,\n            v,\n            r,\n            s\n        });\n        const emptyAccessList = [];\n        return new AccessListEIP2930Transaction({\n            chainId: (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_6__.uint8ArrayToBigInt)(chainId),\n            nonce,\n            gasPrice,\n            gasLimit,\n            to,\n            value,\n            data,\n            accessList: accessList !== null && accessList !== void 0 ? accessList : emptyAccessList,\n            v: v !== undefined ? (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_6__.uint8ArrayToBigInt)(v) : undefined,\n            r,\n            s\n        }, opts);\n    }\n    /**\n     * The amount of gas paid for the data in this tx\n     */ getDataFee() {\n        if (this.cache.dataFee && this.cache.dataFee.hardfork === this.common.hardfork()) {\n            return this.cache.dataFee.value;\n        }\n        let cost = super.getDataFee();\n        cost += BigInt((0,_utils_js__WEBPACK_IMPORTED_MODULE_5__.getDataFeeEIP2930)(this.accessList, this.common));\n        if (Object.isFrozen(this)) {\n            this.cache.dataFee = {\n                value: cost,\n                hardfork: this.common.hardfork()\n            };\n        }\n        return cost;\n    }\n    /**\n     * The up front amount that an account must have for this transaction to be valid\n     */ getUpfrontCost() {\n        return this.gasLimit * this.gasPrice + this.value;\n    }\n    /**\n     * Returns a Uint8Array Array of the raw Uint8Arrays of the EIP-2930 transaction, in order.\n     *\n     * Format: `[chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n     * signatureYParity (v), signatureR (r), signatureS (s)]`\n     *\n     * Use {@link AccessListEIP2930Transaction.serialize} to add a transaction to a block\n     * with {@link Block.fromValuesArray}.\n     *\n     * For an unsigned tx this method uses the empty UINT8ARRAY values for the\n     * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n     * representation for external signing use {@link AccessListEIP2930Transaction.getMessageToSign}.\n     */ raw() {\n        return [\n            (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_6__.bigIntToUnpaddedUint8Array)(this.chainId),\n            (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_6__.bigIntToUnpaddedUint8Array)(this.nonce),\n            (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_6__.bigIntToUnpaddedUint8Array)(this.gasPrice),\n            (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_6__.bigIntToUnpaddedUint8Array)(this.gasLimit),\n            this.to !== undefined ? this.to.buf : Uint8Array.from([]),\n            (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_6__.bigIntToUnpaddedUint8Array)(this.value),\n            this.data,\n            this.accessList,\n            this.v !== undefined ? (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_6__.bigIntToUnpaddedUint8Array)(this.v) : Uint8Array.from([]),\n            this.r !== undefined ? (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_6__.bigIntToUnpaddedUint8Array)(this.r) : Uint8Array.from([]),\n            this.s !== undefined ? (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_6__.bigIntToUnpaddedUint8Array)(this.s) : Uint8Array.from([])\n        ];\n    }\n    /**\n     * Returns the serialized encoding of the EIP-2930 transaction.\n     *\n     * Format: `0x01 || rlp([chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n     * signatureYParity (v), signatureR (r), signatureS (s)])`\n     *\n     * Note that in contrast to the legacy tx serialization format this is not\n     * valid RLP any more due to the raw tx type preceding and concatenated to\n     * the RLP encoding of the values.\n     */ serialize() {\n        const base = this.raw();\n        return (0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.uint8ArrayConcat)(TRANSACTION_TYPE_UINT8ARRAY, _ethereumjs_rlp__WEBPACK_IMPORTED_MODULE_2__.RLP.encode(base));\n    }\n    /**\n     * Returns the serialized unsigned tx (hashed or raw), which can be used\n     * to sign the transaction (e.g. for sending to a hardware wallet).\n     *\n     * Note: in contrast to the legacy tx the raw message format is already\n     * serialized and doesn't need to be RLP encoded any more.\n     *\n     * ```javascript\n     * const serializedMessage = tx.getMessageToSign(false) // use this for the HW wallet input\n     * ```\n     *\n     * @param hashMessage - Return hashed message if set to true (default: true)\n     */ getMessageToSign(hashMessage = true) {\n        const base = this.raw().slice(0, 8);\n        const message = (0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.uint8ArrayConcat)(TRANSACTION_TYPE_UINT8ARRAY, _ethereumjs_rlp__WEBPACK_IMPORTED_MODULE_2__.RLP.encode(base));\n        if (hashMessage) {\n            return (0,ethereum_cryptography_keccak_js__WEBPACK_IMPORTED_MODULE_0__.keccak256)(message);\n        }\n        return message;\n    }\n    /**\n     * Computes a sha3-256 hash of the serialized tx.\n     *\n     * This method can only be used for signed txs (it throws otherwise).\n     * Use {@link AccessListEIP2930Transaction.getMessageToSign} to get a tx hash for the purpose of signing.\n     */ hash() {\n        if (!this.isSigned()) {\n            const msg = this._errorMsg(\"Cannot call hash method if transaction is not signed\");\n            throw new Error(msg);\n        }\n        if (Object.isFrozen(this)) {\n            if (!this.cache.hash) {\n                this.cache.hash = (0,ethereum_cryptography_keccak_js__WEBPACK_IMPORTED_MODULE_0__.keccak256)(this.serialize());\n            }\n            return this.cache.hash;\n        }\n        return (0,ethereum_cryptography_keccak_js__WEBPACK_IMPORTED_MODULE_0__.keccak256)(this.serialize());\n    }\n    /**\n     * Computes a sha3-256 hash which can be used to verify the signature\n     */ getMessageToVerifySignature() {\n        return this.getMessageToSign();\n    }\n    /**\n     * Returns the public key of the sender\n     */ getSenderPublicKey() {\n        if (!this.isSigned()) {\n            const msg = this._errorMsg(\"Cannot call this method if transaction is not signed\");\n            throw new Error(msg);\n        }\n        const msgHash = this.getMessageToVerifySignature();\n        const { v, r, s } = this;\n        this._validateHighS();\n        try {\n            return (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_6__.ecrecover)(msgHash, v + BigInt(27), (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_6__.bigIntToUnpaddedUint8Array)(r), (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_6__.bigIntToUnpaddedUint8Array)(s));\n        } catch (e) {\n            const msg = this._errorMsg(\"Invalid Signature\");\n            throw new Error(msg);\n        }\n    }\n    _processSignature(v, r, s) {\n        const opts = Object.assign(Object.assign({}, this.txOptions), {\n            common: this.common\n        });\n        return AccessListEIP2930Transaction.fromTxData({\n            chainId: this.chainId,\n            nonce: this.nonce,\n            gasPrice: this.gasPrice,\n            gasLimit: this.gasLimit,\n            to: this.to,\n            value: this.value,\n            data: this.data,\n            accessList: this.accessList,\n            v: v - BigInt(27),\n            r: (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_6__.uint8ArrayToBigInt)(r),\n            s: (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_6__.uint8ArrayToBigInt)(s)\n        }, opts);\n    }\n    /**\n     * Returns an object with the JSON representation of the transaction\n     */ toJSON() {\n        const accessListJSON = (0,_utils_js__WEBPACK_IMPORTED_MODULE_5__.getAccessListJSON)(this.accessList);\n        return {\n            chainId: (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_6__.bigIntToHex)(this.chainId),\n            nonce: (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_6__.bigIntToHex)(this.nonce),\n            gasPrice: (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_6__.bigIntToHex)(this.gasPrice),\n            gasLimit: (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_6__.bigIntToHex)(this.gasLimit),\n            to: this.to !== undefined ? this.to.toString() : undefined,\n            value: (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_6__.bigIntToHex)(this.value),\n            data: (0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.bytesToHex)(this.data),\n            accessList: accessListJSON,\n            v: this.v !== undefined ? (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_6__.bigIntToHex)(this.v) : undefined,\n            r: this.r !== undefined ? (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_6__.bigIntToHex)(this.r) : undefined,\n            s: this.s !== undefined ? (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_6__.bigIntToHex)(this.s) : undefined\n        };\n    }\n    /**\n     * Return a compact error string representation of the object\n     */ errorStr() {\n        var _a, _b;\n        let errorStr = this._getSharedErrorPostfix();\n        // Keep ? for this.accessList since this otherwise causes Hardhat E2E tests to fail\n        errorStr += ` gasPrice=${this.gasPrice} accessListCount=${(_b = (_a = this.accessList) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0}`;\n        return errorStr;\n    }\n    /**\n     * Internal helper function to create an annotated error message\n     *\n     * @param msg Base error message\n     * @hidden\n     */ _errorMsg(msg) {\n        return `${msg} (${this.errorStr()})`;\n    }\n} //# sourceMappingURL=eip2930Transaction.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS90eC9laXAyOTMwVHJhbnNhY3Rpb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQUE7Ozs7Ozs7Ozs7Ozs7OztBQWVBLEdBQzREO0FBQ0g7QUFDbkI7QUFDa0Q7QUFDM0M7QUFDMkQ7QUFDbUI7QUFDcEU7QUFDdkQsTUFBTWtCLG1CQUFtQjtBQUN6QixNQUFNQyw4QkFBOEJmLHNEQUFVQSxDQUFDYyxpQkFBaUJFLFFBQVEsQ0FBQyxJQUFJQyxRQUFRLENBQUMsR0FBRztBQUN6Rjs7Ozs7Q0FLQyxHQUNELGdEQUFnRDtBQUN6QyxNQUFNQyxxQ0FBcUNMLGdFQUFlQTtJQUM3RDs7Ozs7O0tBTUMsR0FDRE0sWUFBWUMsTUFBTSxFQUFFQyxPQUFPLENBQUMsQ0FBQyxDQUFFO1FBQzNCLElBQUlDO1FBQ0osS0FBSyxDQUFDQyxPQUFPQyxNQUFNLENBQUNELE9BQU9DLE1BQU0sQ0FBQyxDQUFDLEdBQUdKLFNBQVM7WUFBRUssTUFBTVg7UUFBaUIsSUFBSU87UUFDNUU7Ozs7O1NBS0MsR0FDRCxJQUFJLENBQUNLLGdCQUFnQixHQUFHO1FBQ3hCLE1BQU0sRUFBRUMsT0FBTyxFQUFFQyxVQUFVLEVBQUVDLFFBQVEsRUFBRSxHQUFHVDtRQUMxQyxJQUFJLENBQUNVLE1BQU0sR0FBRyxJQUFJLENBQUNDLFVBQVUsQ0FBQ1YsS0FBS1MsTUFBTSxFQUFFSDtRQUMzQyxJQUFJLENBQUNBLE9BQU8sR0FBRyxJQUFJLENBQUNHLE1BQU0sQ0FBQ0gsT0FBTztRQUNsQyxtQ0FBbUM7UUFDbkMsSUFBSSxDQUFDLElBQUksQ0FBQ0csTUFBTSxDQUFDRSxjQUFjLENBQUMsT0FBTztZQUNuQyxNQUFNLElBQUlDLE1BQU07UUFDcEI7UUFDQSxJQUFJLENBQUNDLGtCQUFrQixHQUFHLElBQUksQ0FBQ0Esa0JBQWtCLENBQUNDLE1BQU0sQ0FBQztZQUFDO1lBQU07U0FBSztRQUNyRSxrQ0FBa0M7UUFDbEMsTUFBTUMsaUJBQWlCaEMsNERBQWlCQSxDQUFDd0IsZUFBZSxRQUFRQSxlQUFlLEtBQUssSUFBSUEsYUFBYSxFQUFFO1FBQ3ZHLElBQUksQ0FBQ0EsVUFBVSxHQUFHUSxlQUFlUixVQUFVO1FBQzNDLElBQUksQ0FBQ1MsY0FBYyxHQUFHRCxlQUFlQyxjQUFjO1FBQ25ELGlDQUFpQztRQUNqQ2hDLDJEQUFnQkEsQ0FBQyxJQUFJLENBQUN1QixVQUFVO1FBQ2hDLElBQUksQ0FBQ0MsUUFBUSxHQUFHbEIsb0VBQWtCQSxDQUFDRiw4REFBWUEsQ0FBQ29CLGFBQWEsS0FBSyxPQUFPQTtRQUN6RSxJQUFJLENBQUNTLCtCQUErQixDQUFDO1lBQ2pDVCxVQUFVLElBQUksQ0FBQ0EsUUFBUTtRQUMzQjtRQUNBaEIsZ0VBQWVBLENBQUMwQixpQkFBaUIsQ0FBQ25CO1FBQ2xDLElBQUksSUFBSSxDQUFDUyxRQUFRLEdBQUcsSUFBSSxDQUFDVyxRQUFRLEdBQUdyQyxzREFBV0EsRUFBRTtZQUM3QyxNQUFNc0MsTUFBTSxJQUFJLENBQUNDLFNBQVMsQ0FBQztZQUMzQixNQUFNLElBQUlULE1BQU1RO1FBQ3BCO1FBQ0EsSUFBSSxDQUFDRSxnQkFBZ0I7UUFDckIsSUFBSSxDQUFDQyxjQUFjO1FBQ25CLE1BQU1DLFNBQVMsQ0FBQ3ZCLEtBQUtELFNBQVMsUUFBUUEsU0FBUyxLQUFLLElBQUksS0FBSyxJQUFJQSxLQUFLd0IsTUFBTSxNQUFNLFFBQVF2QixPQUFPLEtBQUssSUFBSUEsS0FBSztRQUMvRyxJQUFJdUIsUUFBUTtZQUNSdEIsT0FBT3NCLE1BQU0sQ0FBQyxJQUFJO1FBQ3RCO0lBQ0o7SUFDQTs7Ozs7Ozs7O0tBU0MsR0FDRCxPQUFPQyxXQUFXMUIsTUFBTSxFQUFFQyxPQUFPLENBQUMsQ0FBQyxFQUFFO1FBQ2pDLE9BQU8sSUFBSUgsNkJBQTZCRSxRQUFRQztJQUNwRDtJQUNBOzs7OztLQUtDLEdBQ0QsT0FBTzBCLGlCQUFpQkMsVUFBVSxFQUFFM0IsT0FBTyxDQUFDLENBQUMsRUFBRTtRQUMzQyxJQUFJLENBQUNuQiw0REFBZ0JBLENBQUM4QyxXQUFXQyxRQUFRLENBQUMsR0FBRyxJQUFJbEMsOEJBQThCO1lBQzNFLE1BQU0sSUFBSWtCLE1BQU0sQ0FBQyxtRkFBbUYsRUFBRW5CLGlCQUFpQixZQUFZLEVBQUVmLHNEQUFVQSxDQUFDaUQsV0FBV0MsUUFBUSxDQUFDLEdBQUcsSUFBSSxDQUFDO1FBQ2hMO1FBQ0EsTUFBTUMsU0FBU3BELGdEQUFHQSxDQUFDcUQsTUFBTSxDQUFDQyxXQUFXQyxJQUFJLENBQUNMLFdBQVdDLFFBQVEsQ0FBQztRQUM5RCxJQUFJLENBQUNLLE1BQU1DLE9BQU8sQ0FBQ0wsU0FBUztZQUN4QixNQUFNLElBQUlqQixNQUFNO1FBQ3BCO1FBQ0EsaUVBQWlFO1FBQ2pFLE9BQU9mLDZCQUE2QnNDLGVBQWUsQ0FBQ04sUUFBUTdCO0lBQ2hFO0lBQ0E7Ozs7O0tBS0MsR0FDRCxPQUFPbUMsZ0JBQWdCTixNQUFNLEVBQUU3QixPQUFPLENBQUMsQ0FBQyxFQUFFO1FBQ3RDLElBQUk2QixPQUFPTyxNQUFNLEtBQUssS0FBS1AsT0FBT08sTUFBTSxLQUFLLElBQUk7WUFDN0MsTUFBTSxJQUFJeEIsTUFBTTtRQUNwQjtRQUNBLE1BQU0sQ0FBQ04sU0FBUytCLE9BQU83QixVQUFVVyxVQUFVbUIsSUFBSUMsT0FBT0MsTUFBTWpDLFlBQVlrQyxHQUFHQyxHQUFHQyxFQUFFLEdBQUdkO1FBQ25GLElBQUksQ0FBQ1gsaUJBQWlCLENBQUM7WUFBRVo7WUFBU21DO1FBQUU7UUFDcENqRSx1RUFBdUJBLENBQUM7WUFBRTZEO1lBQU83QjtZQUFVVztZQUFVb0I7WUFBT0U7WUFBR0M7WUFBR0M7UUFBRTtRQUNwRSxNQUFNQyxrQkFBa0IsRUFBRTtRQUMxQixPQUFPLElBQUkvQyw2QkFBNkI7WUFDcENTLFNBQVNoQixvRUFBa0JBLENBQUNnQjtZQUM1QitCO1lBQ0E3QjtZQUNBVztZQUNBbUI7WUFDQUM7WUFDQUM7WUFDQWpDLFlBQVlBLGVBQWUsUUFBUUEsZUFBZSxLQUFLLElBQUlBLGFBQWFxQztZQUN4RUgsR0FBR0EsTUFBTUksWUFBWXZELG9FQUFrQkEsQ0FBQ21ELEtBQUtJO1lBQzdDSDtZQUNBQztRQUNKLEdBQUczQztJQUNQO0lBQ0E7O0tBRUMsR0FDRDhDLGFBQWE7UUFDVCxJQUFJLElBQUksQ0FBQ0MsS0FBSyxDQUFDQyxPQUFPLElBQUksSUFBSSxDQUFDRCxLQUFLLENBQUNDLE9BQU8sQ0FBQ0MsUUFBUSxLQUFLLElBQUksQ0FBQ3hDLE1BQU0sQ0FBQ3dDLFFBQVEsSUFBSTtZQUM5RSxPQUFPLElBQUksQ0FBQ0YsS0FBSyxDQUFDQyxPQUFPLENBQUNULEtBQUs7UUFDbkM7UUFDQSxJQUFJVyxPQUFPLEtBQUssQ0FBQ0o7UUFDakJJLFFBQVFDLE9BQU9qRSw0REFBaUJBLENBQUMsSUFBSSxDQUFDcUIsVUFBVSxFQUFFLElBQUksQ0FBQ0UsTUFBTTtRQUM3RCxJQUFJUCxPQUFPa0QsUUFBUSxDQUFDLElBQUksR0FBRztZQUN2QixJQUFJLENBQUNMLEtBQUssQ0FBQ0MsT0FBTyxHQUFHO2dCQUNqQlQsT0FBT1c7Z0JBQ1BELFVBQVUsSUFBSSxDQUFDeEMsTUFBTSxDQUFDd0MsUUFBUTtZQUNsQztRQUNKO1FBQ0EsT0FBT0M7SUFDWDtJQUNBOztLQUVDLEdBQ0RHLGlCQUFpQjtRQUNiLE9BQU8sSUFBSSxDQUFDbEMsUUFBUSxHQUFHLElBQUksQ0FBQ1gsUUFBUSxHQUFHLElBQUksQ0FBQytCLEtBQUs7SUFDckQ7SUFDQTs7Ozs7Ozs7Ozs7O0tBWUMsR0FDRGUsTUFBTTtRQUNGLE9BQU87WUFDSC9ELDRFQUEwQkEsQ0FBQyxJQUFJLENBQUNlLE9BQU87WUFDdkNmLDRFQUEwQkEsQ0FBQyxJQUFJLENBQUM4QyxLQUFLO1lBQ3JDOUMsNEVBQTBCQSxDQUFDLElBQUksQ0FBQ2lCLFFBQVE7WUFDeENqQiw0RUFBMEJBLENBQUMsSUFBSSxDQUFDNEIsUUFBUTtZQUN4QyxJQUFJLENBQUNtQixFQUFFLEtBQUtPLFlBQVksSUFBSSxDQUFDUCxFQUFFLENBQUNpQixHQUFHLEdBQUd4QixXQUFXQyxJQUFJLENBQUMsRUFBRTtZQUN4RHpDLDRFQUEwQkEsQ0FBQyxJQUFJLENBQUNnRCxLQUFLO1lBQ3JDLElBQUksQ0FBQ0MsSUFBSTtZQUNULElBQUksQ0FBQ2pDLFVBQVU7WUFDZixJQUFJLENBQUNrQyxDQUFDLEtBQUtJLFlBQVl0RCw0RUFBMEJBLENBQUMsSUFBSSxDQUFDa0QsQ0FBQyxJQUFJVixXQUFXQyxJQUFJLENBQUMsRUFBRTtZQUM5RSxJQUFJLENBQUNVLENBQUMsS0FBS0csWUFBWXRELDRFQUEwQkEsQ0FBQyxJQUFJLENBQUNtRCxDQUFDLElBQUlYLFdBQVdDLElBQUksQ0FBQyxFQUFFO1lBQzlFLElBQUksQ0FBQ1csQ0FBQyxLQUFLRSxZQUFZdEQsNEVBQTBCQSxDQUFDLElBQUksQ0FBQ29ELENBQUMsSUFBSVosV0FBV0MsSUFBSSxDQUFDLEVBQUU7U0FDakY7SUFDTDtJQUNBOzs7Ozs7Ozs7S0FTQyxHQUNEd0IsWUFBWTtRQUNSLE1BQU1DLE9BQU8sSUFBSSxDQUFDSCxHQUFHO1FBQ3JCLE9BQU8xRSw0REFBZ0JBLENBQUNjLDZCQUE2QmpCLGdEQUFHQSxDQUFDaUYsTUFBTSxDQUFDRDtJQUNwRTtJQUNBOzs7Ozs7Ozs7Ozs7S0FZQyxHQUNERSxpQkFBaUJDLGNBQWMsSUFBSSxFQUFFO1FBQ2pDLE1BQU1ILE9BQU8sSUFBSSxDQUFDSCxHQUFHLEdBQUdPLEtBQUssQ0FBQyxHQUFHO1FBQ2pDLE1BQU1DLFVBQVVsRiw0REFBZ0JBLENBQUNjLDZCQUE2QmpCLGdEQUFHQSxDQUFDaUYsTUFBTSxDQUFDRDtRQUN6RSxJQUFJRyxhQUFhO1lBQ2IsT0FBT3JGLDBFQUFTQSxDQUFDdUY7UUFDckI7UUFDQSxPQUFPQTtJQUNYO0lBQ0E7Ozs7O0tBS0MsR0FDREMsT0FBTztRQUNILElBQUksQ0FBQyxJQUFJLENBQUNDLFFBQVEsSUFBSTtZQUNsQixNQUFNNUMsTUFBTSxJQUFJLENBQUNDLFNBQVMsQ0FBQztZQUMzQixNQUFNLElBQUlULE1BQU1RO1FBQ3BCO1FBQ0EsSUFBSWxCLE9BQU9rRCxRQUFRLENBQUMsSUFBSSxHQUFHO1lBQ3ZCLElBQUksQ0FBQyxJQUFJLENBQUNMLEtBQUssQ0FBQ2dCLElBQUksRUFBRTtnQkFDbEIsSUFBSSxDQUFDaEIsS0FBSyxDQUFDZ0IsSUFBSSxHQUFHeEYsMEVBQVNBLENBQUMsSUFBSSxDQUFDaUYsU0FBUztZQUM5QztZQUNBLE9BQU8sSUFBSSxDQUFDVCxLQUFLLENBQUNnQixJQUFJO1FBQzFCO1FBQ0EsT0FBT3hGLDBFQUFTQSxDQUFDLElBQUksQ0FBQ2lGLFNBQVM7SUFDbkM7SUFDQTs7S0FFQyxHQUNEUyw4QkFBOEI7UUFDMUIsT0FBTyxJQUFJLENBQUNOLGdCQUFnQjtJQUNoQztJQUNBOztLQUVDLEdBQ0RPLHFCQUFxQjtRQUNqQixJQUFJLENBQUMsSUFBSSxDQUFDRixRQUFRLElBQUk7WUFDbEIsTUFBTTVDLE1BQU0sSUFBSSxDQUFDQyxTQUFTLENBQUM7WUFDM0IsTUFBTSxJQUFJVCxNQUFNUTtRQUNwQjtRQUNBLE1BQU0rQyxVQUFVLElBQUksQ0FBQ0YsMkJBQTJCO1FBQ2hELE1BQU0sRUFBRXhCLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxDQUFDLEVBQUUsR0FBRyxJQUFJO1FBQ3hCLElBQUksQ0FBQ3BCLGNBQWM7UUFDbkIsSUFBSTtZQUNBLE9BQU9sQywyREFBU0EsQ0FBQzhFLFNBQVMxQixJQUFJVSxPQUFPLEtBQ3JDNUQsNEVBQTBCQSxDQUFDbUQsSUFBSW5ELDRFQUEwQkEsQ0FBQ29EO1FBQzlELEVBQ0EsT0FBT3lCLEdBQUc7WUFDTixNQUFNaEQsTUFBTSxJQUFJLENBQUNDLFNBQVMsQ0FBQztZQUMzQixNQUFNLElBQUlULE1BQU1RO1FBQ3BCO0lBQ0o7SUFDQWlELGtCQUFrQjVCLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxDQUFDLEVBQUU7UUFDdkIsTUFBTTNDLE9BQU9FLE9BQU9DLE1BQU0sQ0FBQ0QsT0FBT0MsTUFBTSxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUNtRSxTQUFTLEdBQUc7WUFBRTdELFFBQVEsSUFBSSxDQUFDQSxNQUFNO1FBQUM7UUFDcEYsT0FBT1osNkJBQTZCNEIsVUFBVSxDQUFDO1lBQzNDbkIsU0FBUyxJQUFJLENBQUNBLE9BQU87WUFDckIrQixPQUFPLElBQUksQ0FBQ0EsS0FBSztZQUNqQjdCLFVBQVUsSUFBSSxDQUFDQSxRQUFRO1lBQ3ZCVyxVQUFVLElBQUksQ0FBQ0EsUUFBUTtZQUN2Qm1CLElBQUksSUFBSSxDQUFDQSxFQUFFO1lBQ1hDLE9BQU8sSUFBSSxDQUFDQSxLQUFLO1lBQ2pCQyxNQUFNLElBQUksQ0FBQ0EsSUFBSTtZQUNmakMsWUFBWSxJQUFJLENBQUNBLFVBQVU7WUFDM0JrQyxHQUFHQSxJQUFJVSxPQUFPO1lBQ2RULEdBQUdwRCxvRUFBa0JBLENBQUNvRDtZQUN0QkMsR0FBR3JELG9FQUFrQkEsQ0FBQ3FEO1FBQzFCLEdBQUczQztJQUNQO0lBQ0E7O0tBRUMsR0FDRHVFLFNBQVM7UUFDTCxNQUFNQyxpQkFBaUJ2Riw0REFBaUJBLENBQUMsSUFBSSxDQUFDc0IsVUFBVTtRQUN4RCxPQUFPO1lBQ0hELFNBQVNuQiw2REFBV0EsQ0FBQyxJQUFJLENBQUNtQixPQUFPO1lBQ2pDK0IsT0FBT2xELDZEQUFXQSxDQUFDLElBQUksQ0FBQ2tELEtBQUs7WUFDN0I3QixVQUFVckIsNkRBQVdBLENBQUMsSUFBSSxDQUFDcUIsUUFBUTtZQUNuQ1csVUFBVWhDLDZEQUFXQSxDQUFDLElBQUksQ0FBQ2dDLFFBQVE7WUFDbkNtQixJQUFJLElBQUksQ0FBQ0EsRUFBRSxLQUFLTyxZQUFZLElBQUksQ0FBQ1AsRUFBRSxDQUFDM0MsUUFBUSxLQUFLa0Q7WUFDakROLE9BQU9wRCw2REFBV0EsQ0FBQyxJQUFJLENBQUNvRCxLQUFLO1lBQzdCQyxNQUFNOUQsc0RBQVVBLENBQUMsSUFBSSxDQUFDOEQsSUFBSTtZQUMxQmpDLFlBQVlpRTtZQUNaL0IsR0FBRyxJQUFJLENBQUNBLENBQUMsS0FBS0ksWUFBWTFELDZEQUFXQSxDQUFDLElBQUksQ0FBQ3NELENBQUMsSUFBSUk7WUFDaERILEdBQUcsSUFBSSxDQUFDQSxDQUFDLEtBQUtHLFlBQVkxRCw2REFBV0EsQ0FBQyxJQUFJLENBQUN1RCxDQUFDLElBQUlHO1lBQ2hERixHQUFHLElBQUksQ0FBQ0EsQ0FBQyxLQUFLRSxZQUFZMUQsNkRBQVdBLENBQUMsSUFBSSxDQUFDd0QsQ0FBQyxJQUFJRTtRQUNwRDtJQUNKO0lBQ0E7O0tBRUMsR0FDRDRCLFdBQVc7UUFDUCxJQUFJeEUsSUFBSXlFO1FBQ1IsSUFBSUQsV0FBVyxJQUFJLENBQUNFLHNCQUFzQjtRQUMxQyxtRkFBbUY7UUFDbkZGLFlBQVksQ0FBQyxVQUFVLEVBQUUsSUFBSSxDQUFDakUsUUFBUSxDQUFDLGlCQUFpQixFQUFFLENBQUNrRSxLQUFLLENBQUN6RSxLQUFLLElBQUksQ0FBQ00sVUFBVSxNQUFNLFFBQVFOLE9BQU8sS0FBSyxJQUFJLEtBQUssSUFBSUEsR0FBR21DLE1BQU0sTUFBTSxRQUFRc0MsT0FBTyxLQUFLLElBQUlBLEtBQUssRUFBRSxDQUFDO1FBQzNLLE9BQU9EO0lBQ1g7SUFDQTs7Ozs7S0FLQyxHQUNEcEQsVUFBVUQsR0FBRyxFQUFFO1FBQ1gsT0FBTyxDQUFDLEVBQUVBLElBQUksRUFBRSxFQUFFLElBQUksQ0FBQ3FELFFBQVEsR0FBRyxDQUFDLENBQUM7SUFDeEM7QUFDSixFQUNBLDhDQUE4QyIsInNvdXJjZXMiOlsid2VicGFjazovL2Zyb250ZW5kLy4vbm9kZV9tb2R1bGVzL3dlYjMtZXRoLWFjY291bnRzL2xpYi9lc20vdHgvZWlwMjkzMFRyYW5zYWN0aW9uLmpzPzAzOGMiXSwic291cmNlc0NvbnRlbnQiOlsiLypcblRoaXMgZmlsZSBpcyBwYXJ0IG9mIHdlYjMuanMuXG5cbndlYjMuanMgaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeVxuaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5XG50aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBlaXRoZXIgdmVyc2lvbiAzIG9mIHRoZSBMaWNlbnNlLCBvclxuKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi5cblxud2ViMy5qcyBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLFxuYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2Zcbk1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGVcbkdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLlxuXG5Zb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2VcbmFsb25nIHdpdGggd2ViMy5qcy4gIElmIG5vdCwgc2VlIDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi5cbiovXG5pbXBvcnQgeyBrZWNjYWsyNTYgfSBmcm9tICdldGhlcmV1bS1jcnlwdG9ncmFwaHkva2VjY2FrLmpzJztcbmltcG9ydCB7IHZhbGlkYXRlTm9MZWFkaW5nWmVyb2VzIH0gZnJvbSAnd2ViMy12YWxpZGF0b3InO1xuaW1wb3J0IHsgUkxQIH0gZnJvbSAnQGV0aGVyZXVtanMvcmxwJztcbmltcG9ydCB7IGJ5dGVzVG9IZXgsIGhleFRvQnl0ZXMsIHVpbnQ4QXJyYXlDb25jYXQsIHVpbnQ4QXJyYXlFcXVhbHMgfSBmcm9tICd3ZWIzLXV0aWxzJztcbmltcG9ydCB7IE1BWF9JTlRFR0VSIH0gZnJvbSAnLi9jb25zdGFudHMuanMnO1xuaW1wb3J0IHsgZ2V0QWNjZXNzTGlzdERhdGEsIHZlcmlmeUFjY2Vzc0xpc3QsIGdldEFjY2Vzc0xpc3RKU09OLCBnZXREYXRhRmVlRUlQMjkzMCwgfSBmcm9tICcuL3V0aWxzLmpzJztcbmltcG9ydCB7IGJpZ0ludFRvSGV4LCB0b1VpbnQ4QXJyYXksIGVjcmVjb3ZlciwgdWludDhBcnJheVRvQmlnSW50LCBiaWdJbnRUb1VucGFkZGVkVWludDhBcnJheSwgfSBmcm9tICcuLi9jb21tb24vdXRpbHMuanMnO1xuaW1wb3J0IHsgQmFzZVRyYW5zYWN0aW9uIH0gZnJvbSAnLi9iYXNlVHJhbnNhY3Rpb24uanMnO1xuY29uc3QgVFJBTlNBQ1RJT05fVFlQRSA9IDE7XG5jb25zdCBUUkFOU0FDVElPTl9UWVBFX1VJTlQ4QVJSQVkgPSBoZXhUb0J5dGVzKFRSQU5TQUNUSU9OX1RZUEUudG9TdHJpbmcoMTYpLnBhZFN0YXJ0KDIsICcwJykpO1xuLyoqXG4gKiBUeXBlZCB0cmFuc2FjdGlvbiB3aXRoIG9wdGlvbmFsIGFjY2VzcyBsaXN0c1xuICpcbiAqIC0gVHJhbnNhY3Rpb25UeXBlOiAxXG4gKiAtIEVJUDogW0VJUC0yOTMwXShodHRwczovL2VpcHMuZXRoZXJldW0ub3JnL0VJUFMvZWlwLTI5MzApXG4gKi9cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11c2UtYmVmb3JlLWRlZmluZVxuZXhwb3J0IGNsYXNzIEFjY2Vzc0xpc3RFSVAyOTMwVHJhbnNhY3Rpb24gZXh0ZW5kcyBCYXNlVHJhbnNhY3Rpb24ge1xuICAgIC8qKlxuICAgICAqIFRoaXMgY29uc3RydWN0b3IgdGFrZXMgdGhlIHZhbHVlcywgdmFsaWRhdGVzIHRoZW0sIGFzc2lnbnMgdGhlbSBhbmQgZnJlZXplcyB0aGUgb2JqZWN0LlxuICAgICAqXG4gICAgICogSXQgaXMgbm90IHJlY29tbWVuZGVkIHRvIHVzZSB0aGlzIGNvbnN0cnVjdG9yIGRpcmVjdGx5LiBJbnN0ZWFkIHVzZVxuICAgICAqIHRoZSBzdGF0aWMgZmFjdG9yeSBtZXRob2RzIHRvIGFzc2lzdCBpbiBjcmVhdGluZyBhIFRyYW5zYWN0aW9uIG9iamVjdCBmcm9tXG4gICAgICogdmFyeWluZyBkYXRhIHR5cGVzLlxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKHR4RGF0YSwgb3B0cyA9IHt9KSB7XG4gICAgICAgIHZhciBfYTtcbiAgICAgICAgc3VwZXIoT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCB0eERhdGEpLCB7IHR5cGU6IFRSQU5TQUNUSU9OX1RZUEUgfSksIG9wdHMpO1xuICAgICAgICAvKipcbiAgICAgICAgICogVGhlIGRlZmF1bHQgSEYgaWYgdGhlIHR4IHR5cGUgaXMgYWN0aXZlIG9uIHRoYXQgSEZcbiAgICAgICAgICogb3IgdGhlIGZpcnN0IGdyZWF0ZXIgSEYgd2hlcmUgdGhlIHR4IGlzIGFjdGl2ZS5cbiAgICAgICAgICpcbiAgICAgICAgICogQGhpZGRlblxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5ERUZBVUxUX0hBUkRGT1JLID0gJ2Jlcmxpbic7XG4gICAgICAgIGNvbnN0IHsgY2hhaW5JZCwgYWNjZXNzTGlzdCwgZ2FzUHJpY2UgfSA9IHR4RGF0YTtcbiAgICAgICAgdGhpcy5jb21tb24gPSB0aGlzLl9nZXRDb21tb24ob3B0cy5jb21tb24sIGNoYWluSWQpO1xuICAgICAgICB0aGlzLmNoYWluSWQgPSB0aGlzLmNvbW1vbi5jaGFpbklkKCk7XG4gICAgICAgIC8vIEVJUC0yNzE4IGNoZWNrIGlzIGRvbmUgaW4gQ29tbW9uXG4gICAgICAgIGlmICghdGhpcy5jb21tb24uaXNBY3RpdmF0ZWRFSVAoMjkzMCkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignRUlQLTI5MzAgbm90IGVuYWJsZWQgb24gQ29tbW9uJyk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5hY3RpdmVDYXBhYmlsaXRpZXMgPSB0aGlzLmFjdGl2ZUNhcGFiaWxpdGllcy5jb25jYXQoWzI3MTgsIDI5MzBdKTtcbiAgICAgICAgLy8gUG9wdWxhdGUgdGhlIGFjY2VzcyBsaXN0IGZpZWxkc1xuICAgICAgICBjb25zdCBhY2Nlc3NMaXN0RGF0YSA9IGdldEFjY2Vzc0xpc3REYXRhKGFjY2Vzc0xpc3QgIT09IG51bGwgJiYgYWNjZXNzTGlzdCAhPT0gdm9pZCAwID8gYWNjZXNzTGlzdCA6IFtdKTtcbiAgICAgICAgdGhpcy5hY2Nlc3NMaXN0ID0gYWNjZXNzTGlzdERhdGEuYWNjZXNzTGlzdDtcbiAgICAgICAgdGhpcy5BY2Nlc3NMaXN0SlNPTiA9IGFjY2Vzc0xpc3REYXRhLkFjY2Vzc0xpc3RKU09OO1xuICAgICAgICAvLyBWZXJpZnkgdGhlIGFjY2VzcyBsaXN0IGZvcm1hdC5cbiAgICAgICAgdmVyaWZ5QWNjZXNzTGlzdCh0aGlzLmFjY2Vzc0xpc3QpO1xuICAgICAgICB0aGlzLmdhc1ByaWNlID0gdWludDhBcnJheVRvQmlnSW50KHRvVWludDhBcnJheShnYXNQcmljZSA9PT0gJycgPyAnMHgnIDogZ2FzUHJpY2UpKTtcbiAgICAgICAgdGhpcy5fdmFsaWRhdGVDYW5ub3RFeGNlZWRNYXhJbnRlZ2VyKHtcbiAgICAgICAgICAgIGdhc1ByaWNlOiB0aGlzLmdhc1ByaWNlLFxuICAgICAgICB9KTtcbiAgICAgICAgQmFzZVRyYW5zYWN0aW9uLl92YWxpZGF0ZU5vdEFycmF5KHR4RGF0YSk7XG4gICAgICAgIGlmICh0aGlzLmdhc1ByaWNlICogdGhpcy5nYXNMaW1pdCA+IE1BWF9JTlRFR0VSKSB7XG4gICAgICAgICAgICBjb25zdCBtc2cgPSB0aGlzLl9lcnJvck1zZygnZ2FzTGltaXQgKiBnYXNQcmljZSBjYW5ub3QgZXhjZWVkIE1BWF9JTlRFR0VSJyk7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IobXNnKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLl92YWxpZGF0ZVlQYXJpdHkoKTtcbiAgICAgICAgdGhpcy5fdmFsaWRhdGVIaWdoUygpO1xuICAgICAgICBjb25zdCBmcmVlemUgPSAoX2EgPSBvcHRzID09PSBudWxsIHx8IG9wdHMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdHMuZnJlZXplKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiB0cnVlO1xuICAgICAgICBpZiAoZnJlZXplKSB7XG4gICAgICAgICAgICBPYmplY3QuZnJlZXplKHRoaXMpO1xuICAgICAgICB9XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEluc3RhbnRpYXRlIGEgdHJhbnNhY3Rpb24gZnJvbSBhIGRhdGEgZGljdGlvbmFyeS5cbiAgICAgKlxuICAgICAqIEZvcm1hdDogeyBjaGFpbklkLCBub25jZSwgZ2FzUHJpY2UsIGdhc0xpbWl0LCB0bywgdmFsdWUsIGRhdGEsIGFjY2Vzc0xpc3QsXG4gICAgICogdiwgciwgcyB9XG4gICAgICpcbiAgICAgKiBOb3RlczpcbiAgICAgKiAtIGBjaGFpbklkYCB3aWxsIGJlIHNldCBhdXRvbWF0aWNhbGx5IGlmIG5vdCBwcm92aWRlZFxuICAgICAqIC0gQWxsIHBhcmFtZXRlcnMgYXJlIG9wdGlvbmFsIGFuZCBoYXZlIHNvbWUgYmFzaWMgZGVmYXVsdCB2YWx1ZXNcbiAgICAgKi9cbiAgICBzdGF0aWMgZnJvbVR4RGF0YSh0eERhdGEsIG9wdHMgPSB7fSkge1xuICAgICAgICByZXR1cm4gbmV3IEFjY2Vzc0xpc3RFSVAyOTMwVHJhbnNhY3Rpb24odHhEYXRhLCBvcHRzKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogSW5zdGFudGlhdGUgYSB0cmFuc2FjdGlvbiBmcm9tIHRoZSBzZXJpYWxpemVkIHR4LlxuICAgICAqXG4gICAgICogRm9ybWF0OiBgMHgwMSB8fCBybHAoW2NoYWluSWQsIG5vbmNlLCBnYXNQcmljZSwgZ2FzTGltaXQsIHRvLCB2YWx1ZSwgZGF0YSwgYWNjZXNzTGlzdCxcbiAgICAgKiBzaWduYXR1cmVZUGFyaXR5ICh2KSwgc2lnbmF0dXJlUiAociksIHNpZ25hdHVyZVMgKHMpXSlgXG4gICAgICovXG4gICAgc3RhdGljIGZyb21TZXJpYWxpemVkVHgoc2VyaWFsaXplZCwgb3B0cyA9IHt9KSB7XG4gICAgICAgIGlmICghdWludDhBcnJheUVxdWFscyhzZXJpYWxpemVkLnN1YmFycmF5KDAsIDEpLCBUUkFOU0FDVElPTl9UWVBFX1VJTlQ4QVJSQVkpKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEludmFsaWQgc2VyaWFsaXplZCB0eCBpbnB1dDogbm90IGFuIEVJUC0yOTMwIHRyYW5zYWN0aW9uICh3cm9uZyB0eCB0eXBlLCBleHBlY3RlZDogJHtUUkFOU0FDVElPTl9UWVBFfSwgcmVjZWl2ZWQ6ICR7Ynl0ZXNUb0hleChzZXJpYWxpemVkLnN1YmFycmF5KDAsIDEpKX1gKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCB2YWx1ZXMgPSBSTFAuZGVjb2RlKFVpbnQ4QXJyYXkuZnJvbShzZXJpYWxpemVkLnN1YmFycmF5KDEpKSk7XG4gICAgICAgIGlmICghQXJyYXkuaXNBcnJheSh2YWx1ZXMpKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgc2VyaWFsaXplZCB0eCBpbnB1dDogbXVzdCBiZSBhcnJheScpO1xuICAgICAgICB9XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW5zYWZlLWFyZ3VtZW50XG4gICAgICAgIHJldHVybiBBY2Nlc3NMaXN0RUlQMjkzMFRyYW5zYWN0aW9uLmZyb21WYWx1ZXNBcnJheSh2YWx1ZXMsIG9wdHMpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDcmVhdGUgYSB0cmFuc2FjdGlvbiBmcm9tIGEgdmFsdWVzIGFycmF5LlxuICAgICAqXG4gICAgICogRm9ybWF0OiBgW2NoYWluSWQsIG5vbmNlLCBnYXNQcmljZSwgZ2FzTGltaXQsIHRvLCB2YWx1ZSwgZGF0YSwgYWNjZXNzTGlzdCxcbiAgICAgKiBzaWduYXR1cmVZUGFyaXR5ICh2KSwgc2lnbmF0dXJlUiAociksIHNpZ25hdHVyZVMgKHMpXWBcbiAgICAgKi9cbiAgICBzdGF0aWMgZnJvbVZhbHVlc0FycmF5KHZhbHVlcywgb3B0cyA9IHt9KSB7XG4gICAgICAgIGlmICh2YWx1ZXMubGVuZ3RoICE9PSA4ICYmIHZhbHVlcy5sZW5ndGggIT09IDExKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgRUlQLTI5MzAgdHJhbnNhY3Rpb24uIE9ubHkgZXhwZWN0aW5nIDggdmFsdWVzIChmb3IgdW5zaWduZWQgdHgpIG9yIDExIHZhbHVlcyAoZm9yIHNpZ25lZCB0eCkuJyk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgW2NoYWluSWQsIG5vbmNlLCBnYXNQcmljZSwgZ2FzTGltaXQsIHRvLCB2YWx1ZSwgZGF0YSwgYWNjZXNzTGlzdCwgdiwgciwgc10gPSB2YWx1ZXM7XG4gICAgICAgIHRoaXMuX3ZhbGlkYXRlTm90QXJyYXkoeyBjaGFpbklkLCB2IH0pO1xuICAgICAgICB2YWxpZGF0ZU5vTGVhZGluZ1plcm9lcyh7IG5vbmNlLCBnYXNQcmljZSwgZ2FzTGltaXQsIHZhbHVlLCB2LCByLCBzIH0pO1xuICAgICAgICBjb25zdCBlbXB0eUFjY2Vzc0xpc3QgPSBbXTtcbiAgICAgICAgcmV0dXJuIG5ldyBBY2Nlc3NMaXN0RUlQMjkzMFRyYW5zYWN0aW9uKHtcbiAgICAgICAgICAgIGNoYWluSWQ6IHVpbnQ4QXJyYXlUb0JpZ0ludChjaGFpbklkKSxcbiAgICAgICAgICAgIG5vbmNlLFxuICAgICAgICAgICAgZ2FzUHJpY2UsXG4gICAgICAgICAgICBnYXNMaW1pdCxcbiAgICAgICAgICAgIHRvLFxuICAgICAgICAgICAgdmFsdWUsXG4gICAgICAgICAgICBkYXRhLFxuICAgICAgICAgICAgYWNjZXNzTGlzdDogYWNjZXNzTGlzdCAhPT0gbnVsbCAmJiBhY2Nlc3NMaXN0ICE9PSB2b2lkIDAgPyBhY2Nlc3NMaXN0IDogZW1wdHlBY2Nlc3NMaXN0LFxuICAgICAgICAgICAgdjogdiAhPT0gdW5kZWZpbmVkID8gdWludDhBcnJheVRvQmlnSW50KHYpIDogdW5kZWZpbmVkLFxuICAgICAgICAgICAgcixcbiAgICAgICAgICAgIHMsXG4gICAgICAgIH0sIG9wdHMpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBUaGUgYW1vdW50IG9mIGdhcyBwYWlkIGZvciB0aGUgZGF0YSBpbiB0aGlzIHR4XG4gICAgICovXG4gICAgZ2V0RGF0YUZlZSgpIHtcbiAgICAgICAgaWYgKHRoaXMuY2FjaGUuZGF0YUZlZSAmJiB0aGlzLmNhY2hlLmRhdGFGZWUuaGFyZGZvcmsgPT09IHRoaXMuY29tbW9uLmhhcmRmb3JrKCkpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmNhY2hlLmRhdGFGZWUudmFsdWU7XG4gICAgICAgIH1cbiAgICAgICAgbGV0IGNvc3QgPSBzdXBlci5nZXREYXRhRmVlKCk7XG4gICAgICAgIGNvc3QgKz0gQmlnSW50KGdldERhdGFGZWVFSVAyOTMwKHRoaXMuYWNjZXNzTGlzdCwgdGhpcy5jb21tb24pKTtcbiAgICAgICAgaWYgKE9iamVjdC5pc0Zyb3plbih0aGlzKSkge1xuICAgICAgICAgICAgdGhpcy5jYWNoZS5kYXRhRmVlID0ge1xuICAgICAgICAgICAgICAgIHZhbHVlOiBjb3N0LFxuICAgICAgICAgICAgICAgIGhhcmRmb3JrOiB0aGlzLmNvbW1vbi5oYXJkZm9yaygpLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gY29zdDtcbiAgICB9XG4gICAgLyoqXG4gICAgICogVGhlIHVwIGZyb250IGFtb3VudCB0aGF0IGFuIGFjY291bnQgbXVzdCBoYXZlIGZvciB0aGlzIHRyYW5zYWN0aW9uIHRvIGJlIHZhbGlkXG4gICAgICovXG4gICAgZ2V0VXBmcm9udENvc3QoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmdhc0xpbWl0ICogdGhpcy5nYXNQcmljZSArIHRoaXMudmFsdWU7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJldHVybnMgYSBVaW50OEFycmF5IEFycmF5IG9mIHRoZSByYXcgVWludDhBcnJheXMgb2YgdGhlIEVJUC0yOTMwIHRyYW5zYWN0aW9uLCBpbiBvcmRlci5cbiAgICAgKlxuICAgICAqIEZvcm1hdDogYFtjaGFpbklkLCBub25jZSwgZ2FzUHJpY2UsIGdhc0xpbWl0LCB0bywgdmFsdWUsIGRhdGEsIGFjY2Vzc0xpc3QsXG4gICAgICogc2lnbmF0dXJlWVBhcml0eSAodiksIHNpZ25hdHVyZVIgKHIpLCBzaWduYXR1cmVTIChzKV1gXG4gICAgICpcbiAgICAgKiBVc2Uge0BsaW5rIEFjY2Vzc0xpc3RFSVAyOTMwVHJhbnNhY3Rpb24uc2VyaWFsaXplfSB0byBhZGQgYSB0cmFuc2FjdGlvbiB0byBhIGJsb2NrXG4gICAgICogd2l0aCB7QGxpbmsgQmxvY2suZnJvbVZhbHVlc0FycmF5fS5cbiAgICAgKlxuICAgICAqIEZvciBhbiB1bnNpZ25lZCB0eCB0aGlzIG1ldGhvZCB1c2VzIHRoZSBlbXB0eSBVSU5UOEFSUkFZIHZhbHVlcyBmb3IgdGhlXG4gICAgICogc2lnbmF0dXJlIHBhcmFtZXRlcnMgYHZgLCBgcmAgYW5kIGBzYCBmb3IgZW5jb2RpbmcuIEZvciBhbiBFSVAtMTU1IGNvbXBsaWFudFxuICAgICAqIHJlcHJlc2VudGF0aW9uIGZvciBleHRlcm5hbCBzaWduaW5nIHVzZSB7QGxpbmsgQWNjZXNzTGlzdEVJUDI5MzBUcmFuc2FjdGlvbi5nZXRNZXNzYWdlVG9TaWdufS5cbiAgICAgKi9cbiAgICByYXcoKSB7XG4gICAgICAgIHJldHVybiBbXG4gICAgICAgICAgICBiaWdJbnRUb1VucGFkZGVkVWludDhBcnJheSh0aGlzLmNoYWluSWQpLFxuICAgICAgICAgICAgYmlnSW50VG9VbnBhZGRlZFVpbnQ4QXJyYXkodGhpcy5ub25jZSksXG4gICAgICAgICAgICBiaWdJbnRUb1VucGFkZGVkVWludDhBcnJheSh0aGlzLmdhc1ByaWNlKSxcbiAgICAgICAgICAgIGJpZ0ludFRvVW5wYWRkZWRVaW50OEFycmF5KHRoaXMuZ2FzTGltaXQpLFxuICAgICAgICAgICAgdGhpcy50byAhPT0gdW5kZWZpbmVkID8gdGhpcy50by5idWYgOiBVaW50OEFycmF5LmZyb20oW10pLFxuICAgICAgICAgICAgYmlnSW50VG9VbnBhZGRlZFVpbnQ4QXJyYXkodGhpcy52YWx1ZSksXG4gICAgICAgICAgICB0aGlzLmRhdGEsXG4gICAgICAgICAgICB0aGlzLmFjY2Vzc0xpc3QsXG4gICAgICAgICAgICB0aGlzLnYgIT09IHVuZGVmaW5lZCA/IGJpZ0ludFRvVW5wYWRkZWRVaW50OEFycmF5KHRoaXMudikgOiBVaW50OEFycmF5LmZyb20oW10pLFxuICAgICAgICAgICAgdGhpcy5yICE9PSB1bmRlZmluZWQgPyBiaWdJbnRUb1VucGFkZGVkVWludDhBcnJheSh0aGlzLnIpIDogVWludDhBcnJheS5mcm9tKFtdKSxcbiAgICAgICAgICAgIHRoaXMucyAhPT0gdW5kZWZpbmVkID8gYmlnSW50VG9VbnBhZGRlZFVpbnQ4QXJyYXkodGhpcy5zKSA6IFVpbnQ4QXJyYXkuZnJvbShbXSksXG4gICAgICAgIF07XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJldHVybnMgdGhlIHNlcmlhbGl6ZWQgZW5jb2Rpbmcgb2YgdGhlIEVJUC0yOTMwIHRyYW5zYWN0aW9uLlxuICAgICAqXG4gICAgICogRm9ybWF0OiBgMHgwMSB8fCBybHAoW2NoYWluSWQsIG5vbmNlLCBnYXNQcmljZSwgZ2FzTGltaXQsIHRvLCB2YWx1ZSwgZGF0YSwgYWNjZXNzTGlzdCxcbiAgICAgKiBzaWduYXR1cmVZUGFyaXR5ICh2KSwgc2lnbmF0dXJlUiAociksIHNpZ25hdHVyZVMgKHMpXSlgXG4gICAgICpcbiAgICAgKiBOb3RlIHRoYXQgaW4gY29udHJhc3QgdG8gdGhlIGxlZ2FjeSB0eCBzZXJpYWxpemF0aW9uIGZvcm1hdCB0aGlzIGlzIG5vdFxuICAgICAqIHZhbGlkIFJMUCBhbnkgbW9yZSBkdWUgdG8gdGhlIHJhdyB0eCB0eXBlIHByZWNlZGluZyBhbmQgY29uY2F0ZW5hdGVkIHRvXG4gICAgICogdGhlIFJMUCBlbmNvZGluZyBvZiB0aGUgdmFsdWVzLlxuICAgICAqL1xuICAgIHNlcmlhbGl6ZSgpIHtcbiAgICAgICAgY29uc3QgYmFzZSA9IHRoaXMucmF3KCk7XG4gICAgICAgIHJldHVybiB1aW50OEFycmF5Q29uY2F0KFRSQU5TQUNUSU9OX1RZUEVfVUlOVDhBUlJBWSwgUkxQLmVuY29kZShiYXNlKSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJldHVybnMgdGhlIHNlcmlhbGl6ZWQgdW5zaWduZWQgdHggKGhhc2hlZCBvciByYXcpLCB3aGljaCBjYW4gYmUgdXNlZFxuICAgICAqIHRvIHNpZ24gdGhlIHRyYW5zYWN0aW9uIChlLmcuIGZvciBzZW5kaW5nIHRvIGEgaGFyZHdhcmUgd2FsbGV0KS5cbiAgICAgKlxuICAgICAqIE5vdGU6IGluIGNvbnRyYXN0IHRvIHRoZSBsZWdhY3kgdHggdGhlIHJhdyBtZXNzYWdlIGZvcm1hdCBpcyBhbHJlYWR5XG4gICAgICogc2VyaWFsaXplZCBhbmQgZG9lc24ndCBuZWVkIHRvIGJlIFJMUCBlbmNvZGVkIGFueSBtb3JlLlxuICAgICAqXG4gICAgICogYGBgamF2YXNjcmlwdFxuICAgICAqIGNvbnN0IHNlcmlhbGl6ZWRNZXNzYWdlID0gdHguZ2V0TWVzc2FnZVRvU2lnbihmYWxzZSkgLy8gdXNlIHRoaXMgZm9yIHRoZSBIVyB3YWxsZXQgaW5wdXRcbiAgICAgKiBgYGBcbiAgICAgKlxuICAgICAqIEBwYXJhbSBoYXNoTWVzc2FnZSAtIFJldHVybiBoYXNoZWQgbWVzc2FnZSBpZiBzZXQgdG8gdHJ1ZSAoZGVmYXVsdDogdHJ1ZSlcbiAgICAgKi9cbiAgICBnZXRNZXNzYWdlVG9TaWduKGhhc2hNZXNzYWdlID0gdHJ1ZSkge1xuICAgICAgICBjb25zdCBiYXNlID0gdGhpcy5yYXcoKS5zbGljZSgwLCA4KTtcbiAgICAgICAgY29uc3QgbWVzc2FnZSA9IHVpbnQ4QXJyYXlDb25jYXQoVFJBTlNBQ1RJT05fVFlQRV9VSU5UOEFSUkFZLCBSTFAuZW5jb2RlKGJhc2UpKTtcbiAgICAgICAgaWYgKGhhc2hNZXNzYWdlKSB7XG4gICAgICAgICAgICByZXR1cm4ga2VjY2FrMjU2KG1lc3NhZ2UpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBtZXNzYWdlO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDb21wdXRlcyBhIHNoYTMtMjU2IGhhc2ggb2YgdGhlIHNlcmlhbGl6ZWQgdHguXG4gICAgICpcbiAgICAgKiBUaGlzIG1ldGhvZCBjYW4gb25seSBiZSB1c2VkIGZvciBzaWduZWQgdHhzIChpdCB0aHJvd3Mgb3RoZXJ3aXNlKS5cbiAgICAgKiBVc2Uge0BsaW5rIEFjY2Vzc0xpc3RFSVAyOTMwVHJhbnNhY3Rpb24uZ2V0TWVzc2FnZVRvU2lnbn0gdG8gZ2V0IGEgdHggaGFzaCBmb3IgdGhlIHB1cnBvc2Ugb2Ygc2lnbmluZy5cbiAgICAgKi9cbiAgICBoYXNoKCkge1xuICAgICAgICBpZiAoIXRoaXMuaXNTaWduZWQoKSkge1xuICAgICAgICAgICAgY29uc3QgbXNnID0gdGhpcy5fZXJyb3JNc2coJ0Nhbm5vdCBjYWxsIGhhc2ggbWV0aG9kIGlmIHRyYW5zYWN0aW9uIGlzIG5vdCBzaWduZWQnKTtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihtc2cpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChPYmplY3QuaXNGcm96ZW4odGhpcykpIHtcbiAgICAgICAgICAgIGlmICghdGhpcy5jYWNoZS5oYXNoKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5jYWNoZS5oYXNoID0ga2VjY2FrMjU2KHRoaXMuc2VyaWFsaXplKCkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuY2FjaGUuaGFzaDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4ga2VjY2FrMjU2KHRoaXMuc2VyaWFsaXplKCkpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDb21wdXRlcyBhIHNoYTMtMjU2IGhhc2ggd2hpY2ggY2FuIGJlIHVzZWQgdG8gdmVyaWZ5IHRoZSBzaWduYXR1cmVcbiAgICAgKi9cbiAgICBnZXRNZXNzYWdlVG9WZXJpZnlTaWduYXR1cmUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmdldE1lc3NhZ2VUb1NpZ24oKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmV0dXJucyB0aGUgcHVibGljIGtleSBvZiB0aGUgc2VuZGVyXG4gICAgICovXG4gICAgZ2V0U2VuZGVyUHVibGljS2V5KCkge1xuICAgICAgICBpZiAoIXRoaXMuaXNTaWduZWQoKSkge1xuICAgICAgICAgICAgY29uc3QgbXNnID0gdGhpcy5fZXJyb3JNc2coJ0Nhbm5vdCBjYWxsIHRoaXMgbWV0aG9kIGlmIHRyYW5zYWN0aW9uIGlzIG5vdCBzaWduZWQnKTtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihtc2cpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IG1zZ0hhc2ggPSB0aGlzLmdldE1lc3NhZ2VUb1ZlcmlmeVNpZ25hdHVyZSgpO1xuICAgICAgICBjb25zdCB7IHYsIHIsIHMgfSA9IHRoaXM7XG4gICAgICAgIHRoaXMuX3ZhbGlkYXRlSGlnaFMoKTtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHJldHVybiBlY3JlY292ZXIobXNnSGFzaCwgdiArIEJpZ0ludCgyNyksIC8vIFJlY292ZXIgdGhlIDI3IHdoaWNoIHdhcyBzdHJpcHBlZCBmcm9tIGVjc2lnblxuICAgICAgICAgICAgYmlnSW50VG9VbnBhZGRlZFVpbnQ4QXJyYXkociksIGJpZ0ludFRvVW5wYWRkZWRVaW50OEFycmF5KHMpKTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZSkge1xuICAgICAgICAgICAgY29uc3QgbXNnID0gdGhpcy5fZXJyb3JNc2coJ0ludmFsaWQgU2lnbmF0dXJlJyk7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IobXNnKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBfcHJvY2Vzc1NpZ25hdHVyZSh2LCByLCBzKSB7XG4gICAgICAgIGNvbnN0IG9wdHMgPSBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIHRoaXMudHhPcHRpb25zKSwgeyBjb21tb246IHRoaXMuY29tbW9uIH0pO1xuICAgICAgICByZXR1cm4gQWNjZXNzTGlzdEVJUDI5MzBUcmFuc2FjdGlvbi5mcm9tVHhEYXRhKHtcbiAgICAgICAgICAgIGNoYWluSWQ6IHRoaXMuY2hhaW5JZCxcbiAgICAgICAgICAgIG5vbmNlOiB0aGlzLm5vbmNlLFxuICAgICAgICAgICAgZ2FzUHJpY2U6IHRoaXMuZ2FzUHJpY2UsXG4gICAgICAgICAgICBnYXNMaW1pdDogdGhpcy5nYXNMaW1pdCxcbiAgICAgICAgICAgIHRvOiB0aGlzLnRvLFxuICAgICAgICAgICAgdmFsdWU6IHRoaXMudmFsdWUsXG4gICAgICAgICAgICBkYXRhOiB0aGlzLmRhdGEsXG4gICAgICAgICAgICBhY2Nlc3NMaXN0OiB0aGlzLmFjY2Vzc0xpc3QsXG4gICAgICAgICAgICB2OiB2IC0gQmlnSW50KDI3KSxcbiAgICAgICAgICAgIHI6IHVpbnQ4QXJyYXlUb0JpZ0ludChyKSxcbiAgICAgICAgICAgIHM6IHVpbnQ4QXJyYXlUb0JpZ0ludChzKSxcbiAgICAgICAgfSwgb3B0cyk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJldHVybnMgYW4gb2JqZWN0IHdpdGggdGhlIEpTT04gcmVwcmVzZW50YXRpb24gb2YgdGhlIHRyYW5zYWN0aW9uXG4gICAgICovXG4gICAgdG9KU09OKCkge1xuICAgICAgICBjb25zdCBhY2Nlc3NMaXN0SlNPTiA9IGdldEFjY2Vzc0xpc3RKU09OKHRoaXMuYWNjZXNzTGlzdCk7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBjaGFpbklkOiBiaWdJbnRUb0hleCh0aGlzLmNoYWluSWQpLFxuICAgICAgICAgICAgbm9uY2U6IGJpZ0ludFRvSGV4KHRoaXMubm9uY2UpLFxuICAgICAgICAgICAgZ2FzUHJpY2U6IGJpZ0ludFRvSGV4KHRoaXMuZ2FzUHJpY2UpLFxuICAgICAgICAgICAgZ2FzTGltaXQ6IGJpZ0ludFRvSGV4KHRoaXMuZ2FzTGltaXQpLFxuICAgICAgICAgICAgdG86IHRoaXMudG8gIT09IHVuZGVmaW5lZCA/IHRoaXMudG8udG9TdHJpbmcoKSA6IHVuZGVmaW5lZCxcbiAgICAgICAgICAgIHZhbHVlOiBiaWdJbnRUb0hleCh0aGlzLnZhbHVlKSxcbiAgICAgICAgICAgIGRhdGE6IGJ5dGVzVG9IZXgodGhpcy5kYXRhKSxcbiAgICAgICAgICAgIGFjY2Vzc0xpc3Q6IGFjY2Vzc0xpc3RKU09OLFxuICAgICAgICAgICAgdjogdGhpcy52ICE9PSB1bmRlZmluZWQgPyBiaWdJbnRUb0hleCh0aGlzLnYpIDogdW5kZWZpbmVkLFxuICAgICAgICAgICAgcjogdGhpcy5yICE9PSB1bmRlZmluZWQgPyBiaWdJbnRUb0hleCh0aGlzLnIpIDogdW5kZWZpbmVkLFxuICAgICAgICAgICAgczogdGhpcy5zICE9PSB1bmRlZmluZWQgPyBiaWdJbnRUb0hleCh0aGlzLnMpIDogdW5kZWZpbmVkLFxuICAgICAgICB9O1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXR1cm4gYSBjb21wYWN0IGVycm9yIHN0cmluZyByZXByZXNlbnRhdGlvbiBvZiB0aGUgb2JqZWN0XG4gICAgICovXG4gICAgZXJyb3JTdHIoKSB7XG4gICAgICAgIHZhciBfYSwgX2I7XG4gICAgICAgIGxldCBlcnJvclN0ciA9IHRoaXMuX2dldFNoYXJlZEVycm9yUG9zdGZpeCgpO1xuICAgICAgICAvLyBLZWVwID8gZm9yIHRoaXMuYWNjZXNzTGlzdCBzaW5jZSB0aGlzIG90aGVyd2lzZSBjYXVzZXMgSGFyZGhhdCBFMkUgdGVzdHMgdG8gZmFpbFxuICAgICAgICBlcnJvclN0ciArPSBgIGdhc1ByaWNlPSR7dGhpcy5nYXNQcmljZX0gYWNjZXNzTGlzdENvdW50PSR7KF9iID0gKF9hID0gdGhpcy5hY2Nlc3NMaXN0KSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EubGVuZ3RoKSAhPT0gbnVsbCAmJiBfYiAhPT0gdm9pZCAwID8gX2IgOiAwfWA7XG4gICAgICAgIHJldHVybiBlcnJvclN0cjtcbiAgICB9XG4gICAgLyoqXG4gICAgICogSW50ZXJuYWwgaGVscGVyIGZ1bmN0aW9uIHRvIGNyZWF0ZSBhbiBhbm5vdGF0ZWQgZXJyb3IgbWVzc2FnZVxuICAgICAqXG4gICAgICogQHBhcmFtIG1zZyBCYXNlIGVycm9yIG1lc3NhZ2VcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgX2Vycm9yTXNnKG1zZykge1xuICAgICAgICByZXR1cm4gYCR7bXNnfSAoJHt0aGlzLmVycm9yU3RyKCl9KWA7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZWlwMjkzMFRyYW5zYWN0aW9uLmpzLm1hcCJdLCJuYW1lcyI6WyJrZWNjYWsyNTYiLCJ2YWxpZGF0ZU5vTGVhZGluZ1plcm9lcyIsIlJMUCIsImJ5dGVzVG9IZXgiLCJoZXhUb0J5dGVzIiwidWludDhBcnJheUNvbmNhdCIsInVpbnQ4QXJyYXlFcXVhbHMiLCJNQVhfSU5URUdFUiIsImdldEFjY2Vzc0xpc3REYXRhIiwidmVyaWZ5QWNjZXNzTGlzdCIsImdldEFjY2Vzc0xpc3RKU09OIiwiZ2V0RGF0YUZlZUVJUDI5MzAiLCJiaWdJbnRUb0hleCIsInRvVWludDhBcnJheSIsImVjcmVjb3ZlciIsInVpbnQ4QXJyYXlUb0JpZ0ludCIsImJpZ0ludFRvVW5wYWRkZWRVaW50OEFycmF5IiwiQmFzZVRyYW5zYWN0aW9uIiwiVFJBTlNBQ1RJT05fVFlQRSIsIlRSQU5TQUNUSU9OX1RZUEVfVUlOVDhBUlJBWSIsInRvU3RyaW5nIiwicGFkU3RhcnQiLCJBY2Nlc3NMaXN0RUlQMjkzMFRyYW5zYWN0aW9uIiwiY29uc3RydWN0b3IiLCJ0eERhdGEiLCJvcHRzIiwiX2EiLCJPYmplY3QiLCJhc3NpZ24iLCJ0eXBlIiwiREVGQVVMVF9IQVJERk9SSyIsImNoYWluSWQiLCJhY2Nlc3NMaXN0IiwiZ2FzUHJpY2UiLCJjb21tb24iLCJfZ2V0Q29tbW9uIiwiaXNBY3RpdmF0ZWRFSVAiLCJFcnJvciIsImFjdGl2ZUNhcGFiaWxpdGllcyIsImNvbmNhdCIsImFjY2Vzc0xpc3REYXRhIiwiQWNjZXNzTGlzdEpTT04iLCJfdmFsaWRhdGVDYW5ub3RFeGNlZWRNYXhJbnRlZ2VyIiwiX3ZhbGlkYXRlTm90QXJyYXkiLCJnYXNMaW1pdCIsIm1zZyIsIl9lcnJvck1zZyIsIl92YWxpZGF0ZVlQYXJpdHkiLCJfdmFsaWRhdGVIaWdoUyIsImZyZWV6ZSIsImZyb21UeERhdGEiLCJmcm9tU2VyaWFsaXplZFR4Iiwic2VyaWFsaXplZCIsInN1YmFycmF5IiwidmFsdWVzIiwiZGVjb2RlIiwiVWludDhBcnJheSIsImZyb20iLCJBcnJheSIsImlzQXJyYXkiLCJmcm9tVmFsdWVzQXJyYXkiLCJsZW5ndGgiLCJub25jZSIsInRvIiwidmFsdWUiLCJkYXRhIiwidiIsInIiLCJzIiwiZW1wdHlBY2Nlc3NMaXN0IiwidW5kZWZpbmVkIiwiZ2V0RGF0YUZlZSIsImNhY2hlIiwiZGF0YUZlZSIsImhhcmRmb3JrIiwiY29zdCIsIkJpZ0ludCIsImlzRnJvemVuIiwiZ2V0VXBmcm9udENvc3QiLCJyYXciLCJidWYiLCJzZXJpYWxpemUiLCJiYXNlIiwiZW5jb2RlIiwiZ2V0TWVzc2FnZVRvU2lnbiIsImhhc2hNZXNzYWdlIiwic2xpY2UiLCJtZXNzYWdlIiwiaGFzaCIsImlzU2lnbmVkIiwiZ2V0TWVzc2FnZVRvVmVyaWZ5U2lnbmF0dXJlIiwiZ2V0U2VuZGVyUHVibGljS2V5IiwibXNnSGFzaCIsImUiLCJfcHJvY2Vzc1NpZ25hdHVyZSIsInR4T3B0aW9ucyIsInRvSlNPTiIsImFjY2Vzc0xpc3RKU09OIiwiZXJyb3JTdHIiLCJfYiIsIl9nZXRTaGFyZWRFcnJvclBvc3RmaXgiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/tx/eip2930Transaction.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/tx/index.js":
/*!************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/tx/index.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AccessListEIP2930Transaction: () => (/* reexport safe */ _eip2930Transaction_js__WEBPACK_IMPORTED_MODULE_1__.AccessListEIP2930Transaction),\n/* harmony export */   BaseTransaction: () => (/* reexport safe */ _baseTransaction_js__WEBPACK_IMPORTED_MODULE_4__.BaseTransaction),\n/* harmony export */   Capability: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_6__.Capability),\n/* harmony export */   FeeMarketEIP1559Transaction: () => (/* reexport safe */ _eip1559Transaction_js__WEBPACK_IMPORTED_MODULE_0__.FeeMarketEIP1559Transaction),\n/* harmony export */   Transaction: () => (/* reexport safe */ _legacyTransaction_js__WEBPACK_IMPORTED_MODULE_2__.Transaction),\n/* harmony export */   TransactionFactory: () => (/* reexport safe */ _transactionFactory_js__WEBPACK_IMPORTED_MODULE_3__.TransactionFactory),\n/* harmony export */   isAccessList: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_6__.isAccessList),\n/* harmony export */   isAccessListUint8Array: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_6__.isAccessListUint8Array),\n/* harmony export */   txUtils: () => (/* reexport module object */ _utils_js__WEBPACK_IMPORTED_MODULE_5__)\n/* harmony export */ });\n/* harmony import */ var _eip1559Transaction_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./eip1559Transaction.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/tx/eip1559Transaction.js\");\n/* harmony import */ var _eip2930Transaction_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./eip2930Transaction.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/tx/eip2930Transaction.js\");\n/* harmony import */ var _legacyTransaction_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./legacyTransaction.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/tx/legacyTransaction.js\");\n/* harmony import */ var _transactionFactory_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./transactionFactory.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/tx/transactionFactory.js\");\n/* harmony import */ var _baseTransaction_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./baseTransaction.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/tx/baseTransaction.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/tx/utils.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./types.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/tx/types.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ // @ethereumjs/tx version 4.1.1\n\n\n\n\n\n\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS90eC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7Ozs7Ozs7Ozs7Ozs7OztBQWVBLEdBQ0EsK0JBQStCO0FBQ3VDO0FBQ0M7QUFDbEI7QUFDUTtBQUNOO0FBQ2pCO0FBQ1gsQ0FDM0IsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS90eC9pbmRleC5qcz9jNDAyIl0sInNvdXJjZXNDb250ZW50IjpbIi8qXG5UaGlzIGZpbGUgaXMgcGFydCBvZiB3ZWIzLmpzLlxuXG53ZWIzLmpzIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnlcbml0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieVxudGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSwgb3JcbihhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uXG5cbndlYjMuanMgaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCxcbmJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mXG5NRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlXG5HTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy5cblxuWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG5hbG9uZyB3aXRoIHdlYjMuanMuICBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uXG4qL1xuLy8gQGV0aGVyZXVtanMvdHggdmVyc2lvbiA0LjEuMVxuZXhwb3J0IHsgRmVlTWFya2V0RUlQMTU1OVRyYW5zYWN0aW9uIH0gZnJvbSAnLi9laXAxNTU5VHJhbnNhY3Rpb24uanMnO1xuZXhwb3J0IHsgQWNjZXNzTGlzdEVJUDI5MzBUcmFuc2FjdGlvbiB9IGZyb20gJy4vZWlwMjkzMFRyYW5zYWN0aW9uLmpzJztcbmV4cG9ydCB7IFRyYW5zYWN0aW9uIH0gZnJvbSAnLi9sZWdhY3lUcmFuc2FjdGlvbi5qcyc7XG5leHBvcnQgeyBUcmFuc2FjdGlvbkZhY3RvcnkgfSBmcm9tICcuL3RyYW5zYWN0aW9uRmFjdG9yeS5qcyc7XG5leHBvcnQgeyBCYXNlVHJhbnNhY3Rpb24gfSBmcm9tICcuL2Jhc2VUcmFuc2FjdGlvbi5qcyc7XG5leHBvcnQgKiBhcyB0eFV0aWxzIGZyb20gJy4vdXRpbHMuanMnO1xuZXhwb3J0ICogZnJvbSAnLi90eXBlcy5qcyc7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOlsiRmVlTWFya2V0RUlQMTU1OVRyYW5zYWN0aW9uIiwiQWNjZXNzTGlzdEVJUDI5MzBUcmFuc2FjdGlvbiIsIlRyYW5zYWN0aW9uIiwiVHJhbnNhY3Rpb25GYWN0b3J5IiwiQmFzZVRyYW5zYWN0aW9uIiwidHhVdGlscyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/tx/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/tx/legacyTransaction.js":
/*!************************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/tx/legacyTransaction.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Transaction: () => (/* binding */ Transaction)\n/* harmony export */ });\n/* harmony import */ var _ethereumjs_rlp__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ethereumjs/rlp */ \"(ssr)/./node_modules/@ethereumjs/rlp/dist/index.js\");\n/* harmony import */ var ethereum_cryptography_keccak_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ethereum-cryptography/keccak.js */ \"(ssr)/./node_modules/ethereum-cryptography/esm/keccak.js\");\n/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-utils */ \"(ssr)/./node_modules/web3-utils/lib/esm/index.js\");\n/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! web3-validator */ \"(ssr)/./node_modules/web3-validator/lib/esm/index.js\");\n/* harmony import */ var _common_utils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../common/utils.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/utils.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./constants.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/tx/constants.js\");\n/* harmony import */ var _baseTransaction_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./baseTransaction.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/tx/baseTransaction.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./types.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/tx/types.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ \n\n\n\n\n\n\n\nconst TRANSACTION_TYPE = 0;\nfunction meetsEIP155(_v, chainId) {\n    const v = Number(_v);\n    const chainIdDoubled = Number(chainId) * 2;\n    return v === chainIdDoubled + 35 || v === chainIdDoubled + 36;\n}\n/**\n * An Ethereum non-typed (legacy) transaction\n */ // eslint-disable-next-line no-use-before-define\nclass Transaction extends _baseTransaction_js__WEBPACK_IMPORTED_MODULE_6__.BaseTransaction {\n    /**\n     * This constructor takes the values, validates them, assigns them and freezes the object.\n     *\n     * It is not recommended to use this constructor directly. Instead use\n     * the static factory methods to assist in creating a Transaction object from\n     * varying data types.\n     */ constructor(txData, opts = {}){\n        var _a;\n        super(Object.assign(Object.assign({}, txData), {\n            type: TRANSACTION_TYPE\n        }), opts);\n        this.common = this._validateTxV(this.v, opts.common);\n        this.gasPrice = (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_4__.uint8ArrayToBigInt)((0,_common_utils_js__WEBPACK_IMPORTED_MODULE_4__.toUint8Array)(txData.gasPrice === \"\" ? \"0x\" : txData.gasPrice));\n        if (this.gasPrice * this.gasLimit > _constants_js__WEBPACK_IMPORTED_MODULE_5__.MAX_INTEGER) {\n            const msg = this._errorMsg(\"gas limit * gasPrice cannot exceed MAX_INTEGER (2^256-1)\");\n            throw new Error(msg);\n        }\n        this._validateCannotExceedMaxInteger({\n            gasPrice: this.gasPrice\n        });\n        _baseTransaction_js__WEBPACK_IMPORTED_MODULE_6__.BaseTransaction._validateNotArray(txData);\n        if (this.common.gteHardfork(\"spuriousDragon\")) {\n            if (!this.isSigned()) {\n                this.activeCapabilities.push(_types_js__WEBPACK_IMPORTED_MODULE_7__.Capability.EIP155ReplayProtection);\n            } else {\n                // EIP155 spec:\n                // If block.number >= 2,675,000 and v = CHAIN_ID * 2 + 35 or v = CHAIN_ID * 2 + 36\n                // then when computing the hash of a transaction for purposes of signing or recovering\n                // instead of hashing only the first six elements (i.e. nonce, gasprice, startgas, to, value, data)\n                // hash nine elements, with v replaced by CHAIN_ID, r = 0 and s = 0.\n                // v and chain ID meet EIP-155 conditions\n                // eslint-disable-next-line no-lonely-if\n                if (meetsEIP155(this.v, this.common.chainId())) {\n                    this.activeCapabilities.push(_types_js__WEBPACK_IMPORTED_MODULE_7__.Capability.EIP155ReplayProtection);\n                }\n            }\n        }\n        const freeze = (_a = opts === null || opts === void 0 ? void 0 : opts.freeze) !== null && _a !== void 0 ? _a : true;\n        if (freeze) {\n            Object.freeze(this);\n        }\n    }\n    /**\n     * Instantiate a transaction from a data dictionary.\n     *\n     * Format: { nonce, gasPrice, gasLimit, to, value, data, v, r, s }\n     *\n     * Notes:\n     * - All parameters are optional and have some basic default values\n     */ static fromTxData(txData, opts = {}) {\n        return new Transaction(txData, opts);\n    }\n    /**\n     * Instantiate a transaction from the serialized tx.\n     *\n     * Format: `rlp([nonce, gasPrice, gasLimit, to, value, data, v, r, s])`\n     */ static fromSerializedTx(serialized, opts = {}) {\n        const values = _ethereumjs_rlp__WEBPACK_IMPORTED_MODULE_0__.RLP.decode(serialized);\n        if (!Array.isArray(values)) {\n            throw new Error(\"Invalid serialized tx input. Must be array\");\n        }\n        return this.fromValuesArray(values, opts);\n    }\n    /**\n     * Create a transaction from a values array.\n     *\n     * Format: `[nonce, gasPrice, gasLimit, to, value, data, v, r, s]`\n     */ static fromValuesArray(values, opts = {}) {\n        // If length is not 6, it has length 9. If v/r/s are empty Uint8Array, it is still an unsigned transaction\n        // This happens if you get the RLP data from `raw()`\n        if (values.length !== 6 && values.length !== 9) {\n            throw new Error(\"Invalid transaction. Only expecting 6 values (for unsigned tx) or 9 values (for signed tx).\");\n        }\n        const [nonce, gasPrice, gasLimit, to, value, data, v, r, s] = values;\n        (0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.validateNoLeadingZeroes)({\n            nonce,\n            gasPrice,\n            gasLimit,\n            value,\n            v,\n            r,\n            s\n        });\n        return new Transaction({\n            nonce,\n            gasPrice,\n            gasLimit,\n            to,\n            value,\n            data,\n            v,\n            r,\n            s\n        }, opts);\n    }\n    /**\n     * Returns a Uint8Array Array of the raw Uint8Arrays of the legacy transaction, in order.\n     *\n     * Format: `[nonce, gasPrice, gasLimit, to, value, data, v, r, s]`\n     *\n     * For legacy txs this is also the correct format to add transactions\n     * to a block with {@link Block.fromValuesArray} (use the `serialize()` method\n     * for typed txs).\n     *\n     * For an unsigned tx this method returns the empty Uint8Array values\n     * for the signature parameters `v`, `r` and `s`. For an EIP-155 compliant\n     * representation have a look at {@link Transaction.getMessageToSign}.\n     */ raw() {\n        return [\n            (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_4__.bigIntToUnpaddedUint8Array)(this.nonce),\n            (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_4__.bigIntToUnpaddedUint8Array)(this.gasPrice),\n            (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_4__.bigIntToUnpaddedUint8Array)(this.gasLimit),\n            this.to !== undefined ? this.to.buf : Uint8Array.from([]),\n            (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_4__.bigIntToUnpaddedUint8Array)(this.value),\n            this.data,\n            this.v !== undefined ? (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_4__.bigIntToUnpaddedUint8Array)(this.v) : Uint8Array.from([]),\n            this.r !== undefined ? (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_4__.bigIntToUnpaddedUint8Array)(this.r) : Uint8Array.from([]),\n            this.s !== undefined ? (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_4__.bigIntToUnpaddedUint8Array)(this.s) : Uint8Array.from([])\n        ];\n    }\n    /**\n     * Returns the serialized encoding of the legacy transaction.\n     *\n     * Format: `rlp([nonce, gasPrice, gasLimit, to, value, data, v, r, s])`\n     *\n     * For an unsigned tx this method uses the empty Uint8Array values for the\n     * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n     * representation for external signing use {@link Transaction.getMessageToSign}.\n     */ serialize() {\n        return _ethereumjs_rlp__WEBPACK_IMPORTED_MODULE_0__.RLP.encode(this.raw());\n    }\n    _getMessageToSign() {\n        const values = [\n            (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_4__.bigIntToUnpaddedUint8Array)(this.nonce),\n            (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_4__.bigIntToUnpaddedUint8Array)(this.gasPrice),\n            (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_4__.bigIntToUnpaddedUint8Array)(this.gasLimit),\n            this.to !== undefined ? this.to.buf : Uint8Array.from([]),\n            (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_4__.bigIntToUnpaddedUint8Array)(this.value),\n            this.data\n        ];\n        if (this.supports(_types_js__WEBPACK_IMPORTED_MODULE_7__.Capability.EIP155ReplayProtection)) {\n            values.push((0,_common_utils_js__WEBPACK_IMPORTED_MODULE_4__.toUint8Array)(this.common.chainId()));\n            values.push((0,_common_utils_js__WEBPACK_IMPORTED_MODULE_4__.unpadUint8Array)((0,_common_utils_js__WEBPACK_IMPORTED_MODULE_4__.toUint8Array)(0)));\n            values.push((0,_common_utils_js__WEBPACK_IMPORTED_MODULE_4__.unpadUint8Array)((0,_common_utils_js__WEBPACK_IMPORTED_MODULE_4__.toUint8Array)(0)));\n        }\n        return values;\n    }\n    getMessageToSign(hashMessage = true) {\n        const message = this._getMessageToSign();\n        if (hashMessage) {\n            return (0,ethereum_cryptography_keccak_js__WEBPACK_IMPORTED_MODULE_1__.keccak256)(_ethereumjs_rlp__WEBPACK_IMPORTED_MODULE_0__.RLP.encode(message));\n        }\n        return message;\n    }\n    /**\n     * The amount of gas paid for the data in this tx\n     */ getDataFee() {\n        if (this.cache.dataFee && this.cache.dataFee.hardfork === this.common.hardfork()) {\n            return this.cache.dataFee.value;\n        }\n        if (Object.isFrozen(this)) {\n            this.cache.dataFee = {\n                value: super.getDataFee(),\n                hardfork: this.common.hardfork()\n            };\n        }\n        return super.getDataFee();\n    }\n    /**\n     * The up front amount that an account must have for this transaction to be valid\n     */ getUpfrontCost() {\n        return this.gasLimit * this.gasPrice + this.value;\n    }\n    /**\n     * Computes a sha3-256 hash of the serialized tx.\n     *\n     * This method can only be used for signed txs (it throws otherwise).\n     * Use {@link Transaction.getMessageToSign} to get a tx hash for the purpose of signing.\n     */ hash() {\n        if (!this.isSigned()) {\n            const msg = this._errorMsg(\"Cannot call hash method if transaction is not signed\");\n            throw new Error(msg);\n        }\n        if (Object.isFrozen(this)) {\n            if (!this.cache.hash) {\n                this.cache.hash = (0,ethereum_cryptography_keccak_js__WEBPACK_IMPORTED_MODULE_1__.keccak256)(_ethereumjs_rlp__WEBPACK_IMPORTED_MODULE_0__.RLP.encode(this.raw()));\n            }\n            return this.cache.hash;\n        }\n        return (0,ethereum_cryptography_keccak_js__WEBPACK_IMPORTED_MODULE_1__.keccak256)(_ethereumjs_rlp__WEBPACK_IMPORTED_MODULE_0__.RLP.encode(this.raw()));\n    }\n    /**\n     * Computes a sha3-256 hash which can be used to verify the signature\n     */ getMessageToVerifySignature() {\n        if (!this.isSigned()) {\n            const msg = this._errorMsg(\"This transaction is not signed\");\n            throw new Error(msg);\n        }\n        const message = this._getMessageToSign();\n        return (0,ethereum_cryptography_keccak_js__WEBPACK_IMPORTED_MODULE_1__.keccak256)(_ethereumjs_rlp__WEBPACK_IMPORTED_MODULE_0__.RLP.encode(message));\n    }\n    /**\n     * Returns the public key of the sender\n     */ getSenderPublicKey() {\n        const msgHash = this.getMessageToVerifySignature();\n        const { v, r, s } = this;\n        this._validateHighS();\n        try {\n            return (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_4__.ecrecover)(msgHash, v, (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_4__.bigIntToUnpaddedUint8Array)(r), (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_4__.bigIntToUnpaddedUint8Array)(s), this.supports(_types_js__WEBPACK_IMPORTED_MODULE_7__.Capability.EIP155ReplayProtection) ? this.common.chainId() : undefined);\n        } catch (e) {\n            const msg = this._errorMsg(\"Invalid Signature\");\n            throw new Error(msg);\n        }\n    }\n    /**\n     * Process the v, r, s values from the `sign` method of the base transaction.\n     */ _processSignature(_v, r, s) {\n        let v = _v;\n        if (this.supports(_types_js__WEBPACK_IMPORTED_MODULE_7__.Capability.EIP155ReplayProtection)) {\n            v += this.common.chainId() * BigInt(2) + BigInt(8);\n        }\n        const opts = Object.assign(Object.assign({}, this.txOptions), {\n            common: this.common\n        });\n        return Transaction.fromTxData({\n            nonce: this.nonce,\n            gasPrice: this.gasPrice,\n            gasLimit: this.gasLimit,\n            to: this.to,\n            value: this.value,\n            data: this.data,\n            v,\n            r: (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_4__.uint8ArrayToBigInt)(r),\n            s: (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_4__.uint8ArrayToBigInt)(s)\n        }, opts);\n    }\n    /**\n     * Returns an object with the JSON representation of the transaction.\n     */ toJSON() {\n        return {\n            nonce: (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_4__.bigIntToHex)(this.nonce),\n            gasPrice: (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_4__.bigIntToHex)(this.gasPrice),\n            gasLimit: (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_4__.bigIntToHex)(this.gasLimit),\n            to: this.to !== undefined ? this.to.toString() : undefined,\n            value: (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_4__.bigIntToHex)(this.value),\n            data: (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.bytesToHex)(this.data),\n            v: this.v !== undefined ? (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_4__.bigIntToHex)(this.v) : undefined,\n            r: this.r !== undefined ? (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_4__.bigIntToHex)(this.r) : undefined,\n            s: this.s !== undefined ? (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_4__.bigIntToHex)(this.s) : undefined\n        };\n    }\n    /**\n     * Validates tx's `v` value\n     */ _validateTxV(_v, common) {\n        let chainIdBigInt;\n        const v = _v !== undefined ? Number(_v) : undefined;\n        // Check for valid v values in the scope of a signed legacy tx\n        if (v !== undefined) {\n            // v is 1. not matching the EIP-155 chainId included case and...\n            // v is 2. not matching the classic v=27 or v=28 case\n            if (v < 37 && v !== 27 && v !== 28) {\n                throw new Error(`Legacy txs need either v = 27/28 or v >= 37 (EIP-155 replay protection), got v = ${v}`);\n            }\n        }\n        // No unsigned tx and EIP-155 activated and chain ID included\n        if (v !== undefined && v !== 0 && (!common || common.gteHardfork(\"spuriousDragon\")) && v !== 27 && v !== 28) {\n            if (common) {\n                if (!meetsEIP155(BigInt(v), common.chainId())) {\n                    throw new Error(`Incompatible EIP155-based V ${v} and chain id ${common.chainId()}. See the Common parameter of the Transaction constructor to set the chain id.`);\n                }\n            } else {\n                // Derive the original chain ID\n                let numSub;\n                if ((v - 35) % 2 === 0) {\n                    numSub = 35;\n                } else {\n                    numSub = 36;\n                }\n                // Use derived chain ID to create a proper Common\n                chainIdBigInt = BigInt(v - numSub) / BigInt(2);\n            }\n        }\n        return this._getCommon(common, chainIdBigInt);\n    }\n    /**\n     * Return a compact error string representation of the object\n     */ errorStr() {\n        let errorStr = this._getSharedErrorPostfix();\n        errorStr += ` gasPrice=${this.gasPrice}`;\n        return errorStr;\n    }\n    /**\n     * Internal helper function to create an annotated error message\n     *\n     * @param msg Base error message\n     * @hidden\n     */ _errorMsg(msg) {\n        return `${msg} (${this.errorStr()})`;\n    }\n} //# sourceMappingURL=legacyTransaction.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/tx/legacyTransaction.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/tx/transactionFactory.js":
/*!*************************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/tx/transactionFactory.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TransactionFactory: () => (/* binding */ TransactionFactory)\n/* harmony export */ });\n/* harmony import */ var _common_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/utils.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/utils.js\");\n/* harmony import */ var _eip1559Transaction_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./eip1559Transaction.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/tx/eip1559Transaction.js\");\n/* harmony import */ var _eip2930Transaction_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./eip2930Transaction.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/tx/eip2930Transaction.js\");\n/* harmony import */ var _legacyTransaction_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./legacyTransaction.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/tx/legacyTransaction.js\");\n\n\n\n\nconst extraTxTypes = new Map();\n// eslint-disable-next-line @typescript-eslint/no-extraneous-class\nclass TransactionFactory {\n    // It is not possible to instantiate a TransactionFactory object.\n    // eslint-disable-next-line @typescript-eslint/no-empty-function, no-useless-constructor\n    constructor(){}\n    static typeToInt(txType) {\n        return Number((0,_common_utils_js__WEBPACK_IMPORTED_MODULE_0__.uint8ArrayToBigInt)((0,_common_utils_js__WEBPACK_IMPORTED_MODULE_0__.toUint8Array)(txType)));\n    }\n    static registerTransactionType(type, txClass) {\n        const txType = TransactionFactory.typeToInt(type);\n        extraTxTypes.set(txType, txClass);\n    }\n    /**\n     * Create a transaction from a `txData` object\n     *\n     * @param txData - The transaction data. The `type` field will determine which transaction type is returned (if undefined, creates a legacy transaction)\n     * @param txOptions - Options to pass on to the constructor of the transaction\n     */ static fromTxData(txData, txOptions = {}) {\n        if (!(\"type\" in txData) || txData.type === undefined) {\n            // Assume legacy transaction\n            return _legacyTransaction_js__WEBPACK_IMPORTED_MODULE_3__.Transaction.fromTxData(txData, txOptions);\n        }\n        const txType = TransactionFactory.typeToInt(txData.type);\n        if (txType === 0) {\n            return _legacyTransaction_js__WEBPACK_IMPORTED_MODULE_3__.Transaction.fromTxData(txData, txOptions);\n        }\n        if (txType === 1) {\n            // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n            return _eip2930Transaction_js__WEBPACK_IMPORTED_MODULE_2__.AccessListEIP2930Transaction.fromTxData(// eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n            txData, txOptions);\n        }\n        if (txType === 2) {\n            return _eip1559Transaction_js__WEBPACK_IMPORTED_MODULE_1__.FeeMarketEIP1559Transaction.fromTxData(// eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n            txData, txOptions);\n        }\n        const ExtraTransaction = extraTxTypes.get(txType);\n        if (ExtraTransaction === null || ExtraTransaction === void 0 ? void 0 : ExtraTransaction.fromTxData) {\n            return ExtraTransaction.fromTxData(txData, txOptions);\n        }\n        throw new Error(`Tx instantiation with type ${txType} not supported`);\n    }\n    /**\n     * This method tries to decode serialized data.\n     *\n     * @param data - The data Uint8Array\n     * @param txOptions - The transaction options\n     */ static fromSerializedData(data, txOptions = {}) {\n        if (data[0] <= 0x7f) {\n            // Determine the type.\n            switch(data[0]){\n                case 1:\n                    return _eip2930Transaction_js__WEBPACK_IMPORTED_MODULE_2__.AccessListEIP2930Transaction.fromSerializedTx(data, txOptions);\n                case 2:\n                    return _eip1559Transaction_js__WEBPACK_IMPORTED_MODULE_1__.FeeMarketEIP1559Transaction.fromSerializedTx(data, txOptions);\n                default:\n                    {\n                        const ExtraTransaction = extraTxTypes.get(Number(data[0]));\n                        if (ExtraTransaction === null || ExtraTransaction === void 0 ? void 0 : ExtraTransaction.fromSerializedTx) {\n                            return ExtraTransaction.fromSerializedTx(data, txOptions);\n                        }\n                        throw new Error(`TypedTransaction with ID ${data[0]} unknown`);\n                    }\n            }\n        } else {\n            return _legacyTransaction_js__WEBPACK_IMPORTED_MODULE_3__.Transaction.fromSerializedTx(data, txOptions);\n        }\n    }\n    /**\n     * When decoding a BlockBody, in the transactions field, a field is either:\n     * A Uint8Array (a TypedTransaction - encoded as TransactionType || rlp(TransactionPayload))\n     * A Uint8Array[] (Legacy Transaction)\n     * This method returns the right transaction.\n     *\n     * @param data - A Uint8Array or Uint8Array[]\n     * @param txOptions - The transaction options\n     */ static fromBlockBodyData(data, txOptions = {}) {\n        if (data instanceof Uint8Array) {\n            return this.fromSerializedData(data, txOptions);\n        }\n        if (Array.isArray(data)) {\n            // It is a legacy transaction\n            return _legacyTransaction_js__WEBPACK_IMPORTED_MODULE_3__.Transaction.fromValuesArray(data, txOptions);\n        }\n        throw new Error(\"Cannot decode transaction: unknown type input\");\n    }\n} //# sourceMappingURL=transactionFactory.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/tx/transactionFactory.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/tx/types.js":
/*!************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/tx/types.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Capability: () => (/* binding */ Capability),\n/* harmony export */   isAccessList: () => (/* binding */ isAccessList),\n/* harmony export */   isAccessListUint8Array: () => (/* binding */ isAccessListUint8Array)\n/* harmony export */ });\n/**\n * Can be used in conjunction with {@link Transaction.supports}\n * to query on tx capabilities\n */ var Capability;\n(function(Capability) {\n    /**\n     * Tx supports EIP-155 replay protection\n     * See: [155](https://eips.ethereum.org/EIPS/eip-155) Replay Attack Protection EIP\n     */ Capability[Capability[\"EIP155ReplayProtection\"] = 155] = \"EIP155ReplayProtection\";\n    /**\n     * Tx supports EIP-1559 gas fee market mechanism\n     * See: [1559](https://eips.ethereum.org/EIPS/eip-1559) Fee Market EIP\n     */ Capability[Capability[\"EIP1559FeeMarket\"] = 1559] = \"EIP1559FeeMarket\";\n    /**\n     * Tx is a typed transaction as defined in EIP-2718\n     * See: [2718](https://eips.ethereum.org/EIPS/eip-2718) Transaction Type EIP\n     */ Capability[Capability[\"EIP2718TypedTransaction\"] = 2718] = \"EIP2718TypedTransaction\";\n    /**\n     * Tx supports access list generation as defined in EIP-2930\n     * See: [2930](https://eips.ethereum.org/EIPS/eip-2930) Access Lists EIP\n     */ Capability[Capability[\"EIP2930AccessLists\"] = 2930] = \"EIP2930AccessLists\";\n})(Capability || (Capability = {}));\nfunction isAccessListUint8Array(input) {\n    if (input.length === 0) {\n        return true;\n    }\n    const firstItem = input[0];\n    if (Array.isArray(firstItem)) {\n        return true;\n    }\n    return false;\n}\nfunction isAccessList(input) {\n    return !isAccessListUint8Array(input); // This is exactly the same method, except the output is negated.\n} //# sourceMappingURL=types.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS90eC90eXBlcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTs7O0NBR0MsR0FDTSxJQUFJQSxXQUFXO0FBQ3JCLFVBQVVBLFVBQVU7SUFDakI7OztLQUdDLEdBQ0RBLFVBQVUsQ0FBQ0EsVUFBVSxDQUFDLHlCQUF5QixHQUFHLElBQUksR0FBRztJQUN6RDs7O0tBR0MsR0FDREEsVUFBVSxDQUFDQSxVQUFVLENBQUMsbUJBQW1CLEdBQUcsS0FBSyxHQUFHO0lBQ3BEOzs7S0FHQyxHQUNEQSxVQUFVLENBQUNBLFVBQVUsQ0FBQywwQkFBMEIsR0FBRyxLQUFLLEdBQUc7SUFDM0Q7OztLQUdDLEdBQ0RBLFVBQVUsQ0FBQ0EsVUFBVSxDQUFDLHFCQUFxQixHQUFHLEtBQUssR0FBRztBQUMxRCxHQUFHQSxjQUFlQSxDQUFBQSxhQUFhLENBQUM7QUFDekIsU0FBU0MsdUJBQXVCQyxLQUFLO0lBQ3hDLElBQUlBLE1BQU1DLE1BQU0sS0FBSyxHQUFHO1FBQ3BCLE9BQU87SUFDWDtJQUNBLE1BQU1DLFlBQVlGLEtBQUssQ0FBQyxFQUFFO0lBQzFCLElBQUlHLE1BQU1DLE9BQU8sQ0FBQ0YsWUFBWTtRQUMxQixPQUFPO0lBQ1g7SUFDQSxPQUFPO0FBQ1g7QUFDTyxTQUFTRyxhQUFhTCxLQUFLO0lBQzlCLE9BQU8sQ0FBQ0QsdUJBQXVCQyxRQUFRLGlFQUFpRTtBQUM1RyxFQUNBLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL2Zyb250ZW5kLy4vbm9kZV9tb2R1bGVzL3dlYjMtZXRoLWFjY291bnRzL2xpYi9lc20vdHgvdHlwZXMuanM/NDhmOSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENhbiBiZSB1c2VkIGluIGNvbmp1bmN0aW9uIHdpdGgge0BsaW5rIFRyYW5zYWN0aW9uLnN1cHBvcnRzfVxuICogdG8gcXVlcnkgb24gdHggY2FwYWJpbGl0aWVzXG4gKi9cbmV4cG9ydCB2YXIgQ2FwYWJpbGl0eTtcbihmdW5jdGlvbiAoQ2FwYWJpbGl0eSkge1xuICAgIC8qKlxuICAgICAqIFR4IHN1cHBvcnRzIEVJUC0xNTUgcmVwbGF5IHByb3RlY3Rpb25cbiAgICAgKiBTZWU6IFsxNTVdKGh0dHBzOi8vZWlwcy5ldGhlcmV1bS5vcmcvRUlQUy9laXAtMTU1KSBSZXBsYXkgQXR0YWNrIFByb3RlY3Rpb24gRUlQXG4gICAgICovXG4gICAgQ2FwYWJpbGl0eVtDYXBhYmlsaXR5W1wiRUlQMTU1UmVwbGF5UHJvdGVjdGlvblwiXSA9IDE1NV0gPSBcIkVJUDE1NVJlcGxheVByb3RlY3Rpb25cIjtcbiAgICAvKipcbiAgICAgKiBUeCBzdXBwb3J0cyBFSVAtMTU1OSBnYXMgZmVlIG1hcmtldCBtZWNoYW5pc21cbiAgICAgKiBTZWU6IFsxNTU5XShodHRwczovL2VpcHMuZXRoZXJldW0ub3JnL0VJUFMvZWlwLTE1NTkpIEZlZSBNYXJrZXQgRUlQXG4gICAgICovXG4gICAgQ2FwYWJpbGl0eVtDYXBhYmlsaXR5W1wiRUlQMTU1OUZlZU1hcmtldFwiXSA9IDE1NTldID0gXCJFSVAxNTU5RmVlTWFya2V0XCI7XG4gICAgLyoqXG4gICAgICogVHggaXMgYSB0eXBlZCB0cmFuc2FjdGlvbiBhcyBkZWZpbmVkIGluIEVJUC0yNzE4XG4gICAgICogU2VlOiBbMjcxOF0oaHR0cHM6Ly9laXBzLmV0aGVyZXVtLm9yZy9FSVBTL2VpcC0yNzE4KSBUcmFuc2FjdGlvbiBUeXBlIEVJUFxuICAgICAqL1xuICAgIENhcGFiaWxpdHlbQ2FwYWJpbGl0eVtcIkVJUDI3MThUeXBlZFRyYW5zYWN0aW9uXCJdID0gMjcxOF0gPSBcIkVJUDI3MThUeXBlZFRyYW5zYWN0aW9uXCI7XG4gICAgLyoqXG4gICAgICogVHggc3VwcG9ydHMgYWNjZXNzIGxpc3QgZ2VuZXJhdGlvbiBhcyBkZWZpbmVkIGluIEVJUC0yOTMwXG4gICAgICogU2VlOiBbMjkzMF0oaHR0cHM6Ly9laXBzLmV0aGVyZXVtLm9yZy9FSVBTL2VpcC0yOTMwKSBBY2Nlc3MgTGlzdHMgRUlQXG4gICAgICovXG4gICAgQ2FwYWJpbGl0eVtDYXBhYmlsaXR5W1wiRUlQMjkzMEFjY2Vzc0xpc3RzXCJdID0gMjkzMF0gPSBcIkVJUDI5MzBBY2Nlc3NMaXN0c1wiO1xufSkoQ2FwYWJpbGl0eSB8fCAoQ2FwYWJpbGl0eSA9IHt9KSk7XG5leHBvcnQgZnVuY3Rpb24gaXNBY2Nlc3NMaXN0VWludDhBcnJheShpbnB1dCkge1xuICAgIGlmIChpbnB1dC5sZW5ndGggPT09IDApIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIGNvbnN0IGZpcnN0SXRlbSA9IGlucHV0WzBdO1xuICAgIGlmIChBcnJheS5pc0FycmF5KGZpcnN0SXRlbSkpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIHJldHVybiBmYWxzZTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc0FjY2Vzc0xpc3QoaW5wdXQpIHtcbiAgICByZXR1cm4gIWlzQWNjZXNzTGlzdFVpbnQ4QXJyYXkoaW5wdXQpOyAvLyBUaGlzIGlzIGV4YWN0bHkgdGhlIHNhbWUgbWV0aG9kLCBleGNlcHQgdGhlIG91dHB1dCBpcyBuZWdhdGVkLlxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dHlwZXMuanMubWFwIl0sIm5hbWVzIjpbIkNhcGFiaWxpdHkiLCJpc0FjY2Vzc0xpc3RVaW50OEFycmF5IiwiaW5wdXQiLCJsZW5ndGgiLCJmaXJzdEl0ZW0iLCJBcnJheSIsImlzQXJyYXkiLCJpc0FjY2Vzc0xpc3QiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/tx/types.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/tx/utils.js":
/*!************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/tx/utils.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   checkMaxInitCodeSize: () => (/* binding */ checkMaxInitCodeSize),\n/* harmony export */   getAccessListData: () => (/* binding */ getAccessListData),\n/* harmony export */   getAccessListJSON: () => (/* binding */ getAccessListJSON),\n/* harmony export */   getDataFeeEIP2930: () => (/* binding */ getDataFeeEIP2930),\n/* harmony export */   verifyAccessList: () => (/* binding */ verifyAccessList)\n/* harmony export */ });\n/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-utils */ \"(ssr)/./node_modules/web3-utils/lib/esm/index.js\");\n/* harmony import */ var _common_utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/utils.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/utils.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./types.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/tx/types.js\");\n\n\n\nconst checkMaxInitCodeSize = (common, length)=>{\n    const maxInitCodeSize = common.param(\"vm\", \"maxInitCodeSize\");\n    if (maxInitCodeSize && BigInt(length) > maxInitCodeSize) {\n        throw new Error(`the initcode size of this transaction is too large: it is ${length} while the max is ${common.param(\"vm\", \"maxInitCodeSize\")}`);\n    }\n};\nconst getAccessListData = (accessList)=>{\n    let AccessListJSON;\n    let uint8arrayAccessList;\n    if ((0,_types_js__WEBPACK_IMPORTED_MODULE_2__.isAccessList)(accessList)) {\n        AccessListJSON = accessList;\n        const newAccessList = [];\n        // eslint-disable-next-line @typescript-eslint/prefer-for-of\n        for(let i = 0; i < accessList.length; i += 1){\n            const item = accessList[i];\n            const addressBytes = (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_1__.toUint8Array)(item.address);\n            const storageItems = [];\n            // eslint-disable-next-line @typescript-eslint/prefer-for-of\n            for(let index = 0; index < item.storageKeys.length; index += 1){\n                storageItems.push((0,_common_utils_js__WEBPACK_IMPORTED_MODULE_1__.toUint8Array)(item.storageKeys[index]));\n            }\n            newAccessList.push([\n                addressBytes,\n                storageItems\n            ]);\n        }\n        uint8arrayAccessList = newAccessList;\n    } else {\n        uint8arrayAccessList = accessList !== null && accessList !== void 0 ? accessList : [];\n        // build the JSON\n        const json = [];\n        // eslint-disable-next-line @typescript-eslint/prefer-for-of\n        for(let i = 0; i < uint8arrayAccessList.length; i += 1){\n            const data = uint8arrayAccessList[i];\n            const address = (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.bytesToHex)(data[0]);\n            const storageKeys = [];\n            // eslint-disable-next-line @typescript-eslint/prefer-for-of\n            for(let item = 0; item < data[1].length; item += 1){\n                storageKeys.push((0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.bytesToHex)(data[1][item]));\n            }\n            const jsonItem = {\n                address,\n                storageKeys\n            };\n            json.push(jsonItem);\n        }\n        AccessListJSON = json;\n    }\n    return {\n        AccessListJSON,\n        accessList: uint8arrayAccessList\n    };\n};\nconst verifyAccessList = (accessList)=>{\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of\n    for(let key = 0; key < accessList.length; key += 1){\n        const accessListItem = accessList[key];\n        const address = accessListItem[0];\n        const storageSlots = accessListItem[1];\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/consistent-type-assertions\n        if (accessListItem[2] !== undefined) {\n            throw new Error(\"Access list item cannot have 3 elements. It can only have an address, and an array of storage slots.\");\n        }\n        if (address.length !== 20) {\n            throw new Error(\"Invalid EIP-2930 transaction: address length should be 20 bytes\");\n        }\n        // eslint-disable-next-line @typescript-eslint/prefer-for-of\n        for(let storageSlot = 0; storageSlot < storageSlots.length; storageSlot += 1){\n            if (storageSlots[storageSlot].length !== 32) {\n                throw new Error(\"Invalid EIP-2930 transaction: storage slot length should be 32 bytes\");\n            }\n        }\n    }\n};\nconst getAccessListJSON = (accessList)=>{\n    const accessListJSON = [];\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of\n    for(let index = 0; index < accessList.length; index += 1){\n        const item = accessList[index];\n        const JSONItem = {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/consistent-type-assertions\n            address: (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.bytesToHex)((0,_common_utils_js__WEBPACK_IMPORTED_MODULE_1__.setLengthLeft)(item[0], 20)),\n            storageKeys: []\n        };\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-assignment, @typescript-eslint/prefer-optional-chain\n        const storageSlots = item && item[1];\n        // eslint-disable-next-line @typescript-eslint/prefer-for-of\n        for(let slot = 0; slot < storageSlots.length; slot += 1){\n            const storageSlot = storageSlots[slot];\n            JSONItem.storageKeys.push((0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.bytesToHex)((0,_common_utils_js__WEBPACK_IMPORTED_MODULE_1__.setLengthLeft)(storageSlot, 32)));\n        }\n        accessListJSON.push(JSONItem);\n    }\n    return accessListJSON;\n};\nconst getDataFeeEIP2930 = (accessList, common)=>{\n    const accessListStorageKeyCost = common.param(\"gasPrices\", \"accessListStorageKeyCost\");\n    const accessListAddressCost = common.param(\"gasPrices\", \"accessListAddressCost\");\n    let slots = 0;\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of\n    for(let index = 0; index < accessList.length; index += 1){\n        const item = accessList[index];\n        const storageSlots = item[1];\n        slots += storageSlots.length;\n    }\n    const addresses = accessList.length;\n    return addresses * Number(accessListAddressCost) + slots * Number(accessListStorageKeyCost);\n}; //# sourceMappingURL=utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/tx/utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/types.js":
/*!*********************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/types.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/  //# sourceMappingURL=types.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS90eXBlcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUE7Ozs7Ozs7Ozs7Ozs7OztBQWVBLEdBQ1UsQ0FDVixpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mcm9udGVuZC8uL25vZGVfbW9kdWxlcy93ZWIzLWV0aC1hY2NvdW50cy9saWIvZXNtL3R5cGVzLmpzPzRmNzEiXSwic291cmNlc0NvbnRlbnQiOlsiLypcblRoaXMgZmlsZSBpcyBwYXJ0IG9mIHdlYjMuanMuXG5cbndlYjMuanMgaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeVxuaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5XG50aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBlaXRoZXIgdmVyc2lvbiAzIG9mIHRoZSBMaWNlbnNlLCBvclxuKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi5cblxud2ViMy5qcyBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLFxuYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2Zcbk1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGVcbkdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLlxuXG5Zb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2VcbmFsb25nIHdpdGggd2ViMy5qcy4gIElmIG5vdCwgc2VlIDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi5cbiovXG5leHBvcnQge307XG4vLyMgc291cmNlTWFwcGluZ1VSTD10eXBlcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/types.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/wallet.js":
/*!**********************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/wallet.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Wallet: () => (/* binding */ Wallet)\n/* harmony export */ });\n/* harmony import */ var web3_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-types */ \"(ssr)/./node_modules/web3-types/lib/esm/index.js\");\n/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-validator */ \"(ssr)/./node_modules/web3-validator/lib/esm/index.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ var __awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n/**\n * Wallet is an in memory `wallet` that can hold multiple accounts.\n * These accounts can be used when using web3.eth.sendTransaction().\n *\n * ### Parameters\n *  Web3AccountProvider - AccountProvider for the wallet\n *\n * ```ts\n * import Web3 from 'web3';\n * const web3 = new Web3(\"https://localhost:8454\")\n * web3.eth.accounts.wallet\n * > Wallet(0) [\n *   _accountProvider: {\n *     create: [Function: create],\n *     privateKeyToAccount: [Function: privateKeyToAccount],\n *     decrypt: [Function: decrypt]\n *   },\n *   _addressMap: Map(0) {},\n *   _defaultKeyName: 'web3js_wallet'\n * ]\n * ```\n */ class Wallet extends web3_types__WEBPACK_IMPORTED_MODULE_0__.Web3BaseWallet {\n    constructor(){\n        super(...arguments);\n        this._addressMap = new Map();\n        this._defaultKeyName = \"web3js_wallet\";\n    }\n    /**\n     * Get the storage object of the browser\n     *\n     * @returns the storage\n     */ static getStorage() {\n        let storage;\n        try {\n            storage = window.localStorage;\n            const x = \"__storage_test__\";\n            storage.setItem(x, x);\n            storage.removeItem(x);\n            return storage;\n        } catch (e) {\n            return e && // everything except Firefox\n            (e.code === 22 || // Firefox\n            e.code === 1014 || // test name field too, because code might not be present\n            // everything except Firefox\n            e.name === \"QuotaExceededError\" || // Firefox\n            e.name === \"NS_ERROR_DOM_QUOTA_REACHED\") && // acknowledge QuotaExceededError only if there's something already stored\n            !(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(storage) && storage.length !== 0 ? storage : undefined;\n        }\n    }\n    /**\n     * Generates one or more accounts in the wallet. If wallets already exist they will not be overridden.\n     *\n     * @param numberOfAccounts - Number of accounts to create. Leave empty to create an empty wallet.\n     * @returns The wallet\n     * ```ts\n     * web3.eth.accounts.wallet.create(2)\n     * > Wallet(2) [\n     *   {\n     *     address: '0xde38310a42B751AE57d30cFFF4a0A3c52A442fCE',\n     *     privateKey: '0x6422c9d28efdcbee93c1d32a5fc6fd6fa081b985487885296cf8c9bbb5872600',\n     *     signTransaction: [Function: signTransaction],\n     *     sign: [Function: sign],\n     *     encrypt: [Function: encrypt]\n     *   },\n     *   {\n     *     address: '0x766BF755246d924B1d017Fdb5390f38a60166691',\n     *     privateKey: '0x756530f13c0eb636ebdda655335f5dea9921e3362e2e588b0ad59e556f7751f0',\n     *     signTransaction: [Function: signTransaction],\n     *     sign: [Function: sign],\n     *     encrypt: [Function: encrypt]\n     *   },\n     *   _accountProvider: {\n     *     create: [Function: create],\n     *     privateKeyToAccount: [Function: privateKeyToAccount],\n     *     decrypt: [Function: decrypt]\n     *   },\n     *   _addressMap: Map(2) {\n     *     '0xde38310a42b751ae57d30cfff4a0a3c52a442fce' => 0,\n     *     '0x766bf755246d924b1d017fdb5390f38a60166691' => 1\n     *   },\n     *   _defaultKeyName: 'web3js_wallet'\n     * ]\n     *\n     * ```\n     */ create(numberOfAccounts) {\n        for(let i = 0; i < numberOfAccounts; i += 1){\n            this.add(this._accountProvider.create());\n        }\n        return this;\n    }\n    /**\n     * Adds an account using a private key or account object to the wallet.\n     *\n     * @param account - A private key or account object\n     * @returns The wallet\n     *\n     * ```ts\n     * web3.eth.accounts.wallet.add('0xbce9b59981303e76c4878b1a6d7b088ec6b9dd5c966b7d5f54d7a749ff683387');\n     * > Wallet(1) [\n     *   {\n     *     address: '0x85D70633b90e03e0276B98880286D0D055685ed7',\n     *     privateKey: '0xbce9b59981303e76c4878b1a6d7b088ec6b9dd5c966b7d5f54d7a749ff683387',\n     *     signTransaction: [Function: signTransaction],\n     *     sign: [Function: sign],\n     *     encrypt: [Function: encrypt]\n     *   },\n     *   _accountProvider: {\n     *     create: [Function: create],\n     *     privateKeyToAccount: [Function: privateKeyToAccount],\n     *     decrypt: [Function: decrypt]\n     *   },\n     *   _addressMap: Map(1) { '0x85d70633b90e03e0276b98880286d0d055685ed7' => 0 },\n     *   _defaultKeyName: 'web3js_wallet'\n     * ]\n     * ```\n     */ add(account) {\n        var _a;\n        if (typeof account === \"string\") {\n            return this.add(this._accountProvider.privateKeyToAccount(account));\n        }\n        let index = this.length;\n        const existAccount = this.get(account.address);\n        if (existAccount) {\n            console.warn(`Account ${account.address.toLowerCase()} already exists.`);\n            index = (_a = this._addressMap.get(account.address.toLowerCase())) !== null && _a !== void 0 ? _a : index;\n        }\n        this._addressMap.set(account.address.toLowerCase(), index);\n        this[index] = account;\n        return this;\n    }\n    /**\n     * Get the account of the wallet with either the index or public address.\n     *\n     * @param addressOrIndex - A string of the address or number index within the wallet.\n     * @returns The account object or undefined if the account doesn't exist\n     */ get(addressOrIndex) {\n        if (typeof addressOrIndex === \"string\") {\n            const index = this._addressMap.get(addressOrIndex.toLowerCase());\n            if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(index)) {\n                return this[index];\n            }\n            return undefined;\n        }\n        return this[addressOrIndex];\n    }\n    /**\n     * Removes an account from the wallet.\n     *\n     * @param addressOrIndex - The account address, or index in the wallet.\n     * @returns true if the wallet was removed. false if it couldn't be found.\n     * ```ts\n     * web3.eth.accounts.wallet.add('0xbce9b59981303e76c4878b1a6d7b088ec6b9dd5c966b7d5f54d7a749ff683387');\n     *\n     * web3.eth.accounts.wallet.remove('0x85D70633b90e03e0276B98880286D0D055685ed7');\n     * > true\n     * web3.eth.accounts.wallet\n     * > Wallet(0) [\n     * _accountProvider: {\n     *   create: [Function: create],\n     *   privateKeyToAccount: [Function: privateKeyToAccount],\n     *   decrypt: [Function: decrypt]\n     * },\n     * _addressMap: Map(0) {},\n     * _defaultKeyName: 'web3js_wallet'\n     * ]\n     * ```\n     */ remove(addressOrIndex) {\n        if (typeof addressOrIndex === \"string\") {\n            const index = this._addressMap.get(addressOrIndex.toLowerCase());\n            if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(index)) {\n                return false;\n            }\n            this._addressMap.delete(addressOrIndex.toLowerCase());\n            this.splice(index, 1);\n            return true;\n        }\n        if (this[addressOrIndex]) {\n            this.splice(addressOrIndex, 1);\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Securely empties the wallet and removes all its accounts.\n     * Use this with *caution as it will remove all accounts stored in local wallet.\n     *\n     * @returns The wallet object\n     * ```ts\n     *\n     * web3.eth.accounts.wallet.clear();\n     * > Wallet(0) [\n     * _accountProvider: {\n     *   create: [Function: create],\n     *   privateKeyToAccount: [Function: privateKeyToAccount],\n     *   decrypt: [Function: decrypt]\n     * },\n     * _addressMap: Map(0) {},\n     * _defaultKeyName: 'web3js_wallet'\n     * ]\n     * ```\n     */ clear() {\n        this._addressMap.clear();\n        // Setting length clears the Array in JS.\n        this.length = 0;\n        return this;\n    }\n    /**\n     * Encrypts all wallet accounts to an array of encrypted keystore v3 objects.\n     *\n     * @param password - The password which will be used for encryption\n     * @param options - encryption options\n     * @returns An array of the encrypted keystore v3.\n     *\n     * ```ts\n     * web3.eth.accounts.wallet.create(1)\n     * web3.eth.accounts.wallet.encrypt(\"abc\").then(console.log);\n     * > [\n     * '{\"version\":3,\"id\":\"fa46e213-a7c3-4844-b903-dd14d39cc7db\",\n     * \"address\":\"fa3e41a401609103c241431cbdee8623ae2a321a\",\"crypto\":\n     * {\"ciphertext\":\"8d179a911d6146ad2924e86bf493ed89b8ff3596ffec0816e761c542016ab13c\",\n     * \"cipherparams\":{\"iv\":\"acc888c6cf4a19b86846cef0185a7164\"},\"cipher\":\"aes-128-ctr\",\n     * \"kdf\":\"scrypt\",\"kdfparams\":{\"n\":8192,\"r\":8,\"p\":1,\"dklen\":32,\"salt\":\"6a743c9b367d15f4758e4f3f3378ff0fd443708d1c64854e07588ea5331823ae\"},\n     * \"mac\":\"410544c8307e3691fda305eb3722d82c3431f212a87daa119a21587d96698b57\"}}'\n     * ]\n     * ```\n     */ encrypt(password, options) {\n        return __awaiter(this, void 0, void 0, function*() {\n            return Promise.all(this.map((account)=>__awaiter(this, void 0, void 0, function*() {\n                    return account.encrypt(password, options);\n                })));\n        });\n    }\n    /**\n     * Decrypts keystore v3 objects.\n     *\n     * @param encryptedWallets - An array of encrypted keystore v3 objects to decrypt\n     * @param password - The password to encrypt with\n     * @param options - decrypt options for the wallets\n     * @returns The decrypted wallet object\n     *\n     * ```ts\n     * web3.eth.accounts.wallet.decrypt([\n     * { version: 3,\n     * id: '83191a81-aaca-451f-b63d-0c5f3b849289',\n     * address: '06f702337909c06c82b09b7a22f0a2f0855d1f68',\n     * crypto:\n     * { ciphertext: '7d34deae112841fba86e3e6cf08f5398dda323a8e4d29332621534e2c4069e8d',\n     *   cipherparams: { iv: '497f4d26997a84d570778eae874b2333' },\n     *   cipher: 'aes-128-ctr',\n     *   kdf: 'scrypt',\n     *   kdfparams:\n     *    { dklen: 32,\n     *      salt: '208dd732a27aa4803bb760228dff18515d5313fd085bbce60594a3919ae2d88d',\n     *      n: 262144,\n     *      r: 8,\n     *      p: 1 },\n     *   mac: '0062a853de302513c57bfe3108ab493733034bf3cb313326f42cf26ea2619cf9' } },\n     * { version: 3,\n     * id: '7d6b91fa-3611-407b-b16b-396efb28f97e',\n     * address: 'b5d89661b59a9af0b34f58d19138baa2de48baaf',\n     * crypto:\n     * { ciphertext: 'cb9712d1982ff89f571fa5dbef447f14b7e5f142232bd2a913aac833730eeb43',\n     *   cipherparams: { iv: '8cccb91cb84e435437f7282ec2ffd2db' },\n     *   cipher: 'aes-128-ctr',\n     *   kdf: 'scrypt',\n     *   kdfparams:\n     *    { dklen: 32,\n     *      salt: '08ba6736363c5586434cd5b895e6fe41ea7db4785bd9b901dedce77a1514e8b8',\n     *      n: 262144,\n     *      r: 8,\n     *      p: 1 },\n     *   mac: 'd2eb068b37e2df55f56fa97a2bf4f55e072bef0dd703bfd917717d9dc54510f0' } }\n     * ], 'test').then(console.log)\n     * > Wallet {\n     *   _accountProvider: {\n     *     create: [Function: create],\n     *     privateKeyToAccount: [Function: privateKeyToAccount],\n     *     decrypt: [Function: decrypt]\n     *   },\n     *   _defaultKeyName: 'web3js_wallet',\n     *   _accounts: {\n     *     '0x85d70633b90e03e0276b98880286d0d055685ed7': {\n     *       address: '0x85D70633b90e03e0276B98880286D0D055685ed7',\n     *       privateKey: '0xbce9b59981303e76c4878b1a6d7b088ec6b9dd5c966b7d5f54d7a749ff683387',\n     *       signTransaction: [Function: signTransaction],\n     *       sign: [Function: sign],\n     *       encrypt: [Function: encrypt]\n     *     },\n     *     '0x06f702337909c06c82b09b7a22f0a2f0855d1f68': {\n     *       address: '0x06F702337909C06C82B09B7A22F0a2f0855d1F68',\n     *       privateKey: '87a51da18900da7398b3bab03996833138f269f8f66dd1237b98df6b9ce14573',\n     *       signTransaction: [Function: signTransaction],\n     *       sign: [Function: sign],\n     *       encrypt: [Function: encrypt]\n     *     },\n     *     '0xb5d89661b59a9af0b34f58d19138baa2de48baaf': {\n     *       address: '0xB5d89661B59a9aF0b34f58D19138bAa2de48BAaf',\n     *       privateKey: '7ee61c5282979aae9dd795bb6a54e8bdc2bfe009acb64eb9a67322eec3b3da6e',\n     *       signTransaction: [Function: signTransaction],\n     *       sign: [Function: sign],\n     *       encrypt: [Function: encrypt]\n     *     }\n     *   }\n     * }\n     * ```\n     */ decrypt(encryptedWallets, password, options) {\n        return __awaiter(this, void 0, void 0, function*() {\n            const results = yield Promise.all(encryptedWallets.map((wallet)=>__awaiter(this, void 0, void 0, function*() {\n                    return this._accountProvider.decrypt(wallet, password, options);\n                })));\n            for (const res of results){\n                this.add(res);\n            }\n            return this;\n        });\n    }\n    /**\n     * Stores the wallet encrypted and as string in local storage.\n     * **__NOTE:__** Browser only\n     *\n     * @param password - The password to encrypt the wallet\n     * @param keyName - (optional) The key used for the local storage position, defaults to `\"web3js_wallet\"`.\n     * @returns Will return boolean value true if saved properly\n     * ```ts\n     * web3.eth.accounts.wallet.save('test#!$');\n     * >true\n     * ```\n     */ save(password, keyName) {\n        return __awaiter(this, void 0, void 0, function*() {\n            const storage = Wallet.getStorage();\n            if (!storage) {\n                throw new Error(\"Local storage not available.\");\n            }\n            storage.setItem(keyName !== null && keyName !== void 0 ? keyName : this._defaultKeyName, JSON.stringify((yield this.encrypt(password))));\n            return true;\n        });\n    }\n    /**\n     * Loads a wallet from local storage and decrypts it.\n     * **__NOTE:__** Browser only\n     *\n     * @param password - The password to decrypt the wallet.\n     * @param keyName - (optional)The key used for local storage position, defaults to `web3js_wallet\"`\n     * @returns Returns the wallet object\n     *\n     * ```ts\n     * web3.eth.accounts.wallet.save('test#!$');\n     * > true\n     * web3.eth.accounts.wallet.load('test#!$');\n     * { defaultKeyName: \"web3js_wallet\",\n     *   length: 0,\n     *   _accounts: Accounts {_requestManager: RequestManager, givenProvider: Proxy, providers: {…}, _provider: WebsocketProvider, …},\n     *   [[Prototype]]: Object\n     * }\n     * ```\n     */ load(password, keyName) {\n        return __awaiter(this, void 0, void 0, function*() {\n            const storage = Wallet.getStorage();\n            if (!storage) {\n                throw new Error(\"Local storage not available.\");\n            }\n            const keystore = storage.getItem(keyName !== null && keyName !== void 0 ? keyName : this._defaultKeyName);\n            if (keystore) {\n                yield this.decrypt(JSON.parse(keystore) || [], password);\n            }\n            return this;\n        });\n    }\n} //# sourceMappingURL=wallet.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS93YWxsZXQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7Ozs7Ozs7Ozs7Ozs7OztBQWVBLEdBQ0EsSUFBSUEsWUFBWSxTQUFLLElBQUksU0FBSSxDQUFDQSxTQUFTLElBQUssU0FBVUMsT0FBTyxFQUFFQyxVQUFVLEVBQUVDLENBQUMsRUFBRUMsU0FBUztJQUNuRixTQUFTQyxNQUFNQyxLQUFLO1FBQUksT0FBT0EsaUJBQWlCSCxJQUFJRyxRQUFRLElBQUlILEVBQUUsU0FBVUksT0FBTztZQUFJQSxRQUFRRDtRQUFRO0lBQUk7SUFDM0csT0FBTyxJQUFLSCxDQUFBQSxLQUFNQSxDQUFBQSxJQUFJSyxPQUFNLENBQUMsRUFBRyxTQUFVRCxPQUFPLEVBQUVFLE1BQU07UUFDckQsU0FBU0MsVUFBVUosS0FBSztZQUFJLElBQUk7Z0JBQUVLLEtBQUtQLFVBQVVRLElBQUksQ0FBQ047WUFBUyxFQUFFLE9BQU9PLEdBQUc7Z0JBQUVKLE9BQU9JO1lBQUk7UUFBRTtRQUMxRixTQUFTQyxTQUFTUixLQUFLO1lBQUksSUFBSTtnQkFBRUssS0FBS1AsU0FBUyxDQUFDLFFBQVEsQ0FBQ0U7WUFBUyxFQUFFLE9BQU9PLEdBQUc7Z0JBQUVKLE9BQU9JO1lBQUk7UUFBRTtRQUM3RixTQUFTRixLQUFLSSxNQUFNO1lBQUlBLE9BQU9DLElBQUksR0FBR1QsUUFBUVEsT0FBT1QsS0FBSyxJQUFJRCxNQUFNVSxPQUFPVCxLQUFLLEVBQUVXLElBQUksQ0FBQ1AsV0FBV0k7UUFBVztRQUM3R0gsS0FBSyxDQUFDUCxZQUFZQSxVQUFVYyxLQUFLLENBQUNqQixTQUFTQyxjQUFjLEVBQUUsR0FBR1UsSUFBSTtJQUN0RTtBQUNKO0FBQzRDO0FBQ0Q7QUFDM0M7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztDQXFCQyxHQUNNLE1BQU1TLGVBQWVGLHNEQUFjQTtJQUN0Q0csYUFBYztRQUNWLEtBQUssSUFBSUM7UUFDVCxJQUFJLENBQUNDLFdBQVcsR0FBRyxJQUFJQztRQUN2QixJQUFJLENBQUNDLGVBQWUsR0FBRztJQUMzQjtJQUNBOzs7O0tBSUMsR0FDRCxPQUFPQyxhQUFhO1FBQ2hCLElBQUlDO1FBQ0osSUFBSTtZQUNBQSxVQUFVQyxPQUFPQyxZQUFZO1lBQzdCLE1BQU1DLElBQUk7WUFDVkgsUUFBUUksT0FBTyxDQUFDRCxHQUFHQTtZQUNuQkgsUUFBUUssVUFBVSxDQUFDRjtZQUNuQixPQUFPSDtRQUNYLEVBQ0EsT0FBT2YsR0FBRztZQUNOLE9BQU9BLEtBQ0gsNEJBQTRCO1lBQzNCQSxDQUFBQSxFQUFFcUIsSUFBSSxLQUFLLE1BQ1IsVUFBVTtZQUNWckIsRUFBRXFCLElBQUksS0FBSyxRQUNYLHlEQUF5RDtZQUN6RCw0QkFBNEI7WUFDNUJyQixFQUFFc0IsSUFBSSxLQUFLLHdCQUNYLFVBQVU7WUFDVnRCLEVBQUVzQixJQUFJLEtBQUssNEJBQTJCLEtBQzFDLDBFQUEwRTtZQUMxRSxDQUFDZix5REFBU0EsQ0FBQ1EsWUFDWEEsUUFBUVEsTUFBTSxLQUFLLElBQ2pCUixVQUNBUztRQUNWO0lBQ0o7SUFDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7S0FtQ0MsR0FDREMsT0FBT0MsZ0JBQWdCLEVBQUU7UUFDckIsSUFBSyxJQUFJQyxJQUFJLEdBQUdBLElBQUlELGtCQUFrQkMsS0FBSyxFQUFHO1lBQzFDLElBQUksQ0FBQ0MsR0FBRyxDQUFDLElBQUksQ0FBQ0MsZ0JBQWdCLENBQUNKLE1BQU07UUFDekM7UUFDQSxPQUFPLElBQUk7SUFDZjtJQUNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0tBeUJDLEdBQ0RHLElBQUlFLE9BQU8sRUFBRTtRQUNULElBQUlDO1FBQ0osSUFBSSxPQUFPRCxZQUFZLFVBQVU7WUFDN0IsT0FBTyxJQUFJLENBQUNGLEdBQUcsQ0FBQyxJQUFJLENBQUNDLGdCQUFnQixDQUFDRyxtQkFBbUIsQ0FBQ0Y7UUFDOUQ7UUFDQSxJQUFJRyxRQUFRLElBQUksQ0FBQ1YsTUFBTTtRQUN2QixNQUFNVyxlQUFlLElBQUksQ0FBQ0MsR0FBRyxDQUFDTCxRQUFRTSxPQUFPO1FBQzdDLElBQUlGLGNBQWM7WUFDZEcsUUFBUUMsSUFBSSxDQUFDLENBQUMsUUFBUSxFQUFFUixRQUFRTSxPQUFPLENBQUNHLFdBQVcsR0FBRyxnQkFBZ0IsQ0FBQztZQUN2RU4sUUFBUSxDQUFDRixLQUFLLElBQUksQ0FBQ3BCLFdBQVcsQ0FBQ3dCLEdBQUcsQ0FBQ0wsUUFBUU0sT0FBTyxDQUFDRyxXQUFXLEdBQUUsTUFBTyxRQUFRUixPQUFPLEtBQUssSUFBSUEsS0FBS0U7UUFDeEc7UUFDQSxJQUFJLENBQUN0QixXQUFXLENBQUM2QixHQUFHLENBQUNWLFFBQVFNLE9BQU8sQ0FBQ0csV0FBVyxJQUFJTjtRQUNwRCxJQUFJLENBQUNBLE1BQU0sR0FBR0g7UUFDZCxPQUFPLElBQUk7SUFDZjtJQUNBOzs7OztLQUtDLEdBQ0RLLElBQUlNLGNBQWMsRUFBRTtRQUNoQixJQUFJLE9BQU9BLG1CQUFtQixVQUFVO1lBQ3BDLE1BQU1SLFFBQVEsSUFBSSxDQUFDdEIsV0FBVyxDQUFDd0IsR0FBRyxDQUFDTSxlQUFlRixXQUFXO1lBQzdELElBQUksQ0FBQ2hDLHlEQUFTQSxDQUFDMEIsUUFBUTtnQkFDbkIsT0FBTyxJQUFJLENBQUNBLE1BQU07WUFDdEI7WUFDQSxPQUFPVDtRQUNYO1FBQ0EsT0FBTyxJQUFJLENBQUNpQixlQUFlO0lBQy9CO0lBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztLQXFCQyxHQUNEQyxPQUFPRCxjQUFjLEVBQUU7UUFDbkIsSUFBSSxPQUFPQSxtQkFBbUIsVUFBVTtZQUNwQyxNQUFNUixRQUFRLElBQUksQ0FBQ3RCLFdBQVcsQ0FBQ3dCLEdBQUcsQ0FBQ00sZUFBZUYsV0FBVztZQUM3RCxJQUFJaEMseURBQVNBLENBQUMwQixRQUFRO2dCQUNsQixPQUFPO1lBQ1g7WUFDQSxJQUFJLENBQUN0QixXQUFXLENBQUNnQyxNQUFNLENBQUNGLGVBQWVGLFdBQVc7WUFDbEQsSUFBSSxDQUFDSyxNQUFNLENBQUNYLE9BQU87WUFDbkIsT0FBTztRQUNYO1FBQ0EsSUFBSSxJQUFJLENBQUNRLGVBQWUsRUFBRTtZQUN0QixJQUFJLENBQUNHLE1BQU0sQ0FBQ0gsZ0JBQWdCO1lBQzVCLE9BQU87UUFDWDtRQUNBLE9BQU87SUFDWDtJQUNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7S0FrQkMsR0FDREksUUFBUTtRQUNKLElBQUksQ0FBQ2xDLFdBQVcsQ0FBQ2tDLEtBQUs7UUFDdEIseUNBQXlDO1FBQ3pDLElBQUksQ0FBQ3RCLE1BQU0sR0FBRztRQUNkLE9BQU8sSUFBSTtJQUNmO0lBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7S0FtQkMsR0FDRHVCLFFBQVFDLFFBQVEsRUFBRUMsT0FBTyxFQUFFO1FBQ3ZCLE9BQU83RCxVQUFVLElBQUksRUFBRSxLQUFLLEdBQUcsS0FBSyxHQUFHO1lBQ25DLE9BQU9RLFFBQVFzRCxHQUFHLENBQUMsSUFBSSxDQUFDQyxHQUFHLENBQUMsQ0FBQ3BCLFVBQVkzQyxVQUFVLElBQUksRUFBRSxLQUFLLEdBQUcsS0FBSyxHQUFHO29CQUFlLE9BQU8yQyxRQUFRZ0IsT0FBTyxDQUFDQyxVQUFVQztnQkFBVTtRQUN2STtJQUNKO0lBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7S0F5RUMsR0FDREcsUUFBUUMsZ0JBQWdCLEVBQUVMLFFBQVEsRUFBRUMsT0FBTyxFQUFFO1FBQ3pDLE9BQU83RCxVQUFVLElBQUksRUFBRSxLQUFLLEdBQUcsS0FBSyxHQUFHO1lBQ25DLE1BQU1rRSxVQUFVLE1BQU0xRCxRQUFRc0QsR0FBRyxDQUFDRyxpQkFBaUJGLEdBQUcsQ0FBQyxDQUFDSSxTQUFXbkUsVUFBVSxJQUFJLEVBQUUsS0FBSyxHQUFHLEtBQUssR0FBRztvQkFBZSxPQUFPLElBQUksQ0FBQzBDLGdCQUFnQixDQUFDc0IsT0FBTyxDQUFDRyxRQUFRUCxVQUFVQztnQkFBVTtZQUNuTCxLQUFLLE1BQU1PLE9BQU9GLFFBQVM7Z0JBQ3ZCLElBQUksQ0FBQ3pCLEdBQUcsQ0FBQzJCO1lBQ2I7WUFDQSxPQUFPLElBQUk7UUFDZjtJQUNKO0lBQ0E7Ozs7Ozs7Ozs7O0tBV0MsR0FDREMsS0FBS1QsUUFBUSxFQUFFVSxPQUFPLEVBQUU7UUFDcEIsT0FBT3RFLFVBQVUsSUFBSSxFQUFFLEtBQUssR0FBRyxLQUFLLEdBQUc7WUFDbkMsTUFBTTRCLFVBQVVQLE9BQU9NLFVBQVU7WUFDakMsSUFBSSxDQUFDQyxTQUFTO2dCQUNWLE1BQU0sSUFBSTJDLE1BQU07WUFDcEI7WUFDQTNDLFFBQVFJLE9BQU8sQ0FBQ3NDLFlBQVksUUFBUUEsWUFBWSxLQUFLLElBQUlBLFVBQVUsSUFBSSxDQUFDNUMsZUFBZSxFQUFFOEMsS0FBS0MsU0FBUyxDQUFDLE9BQU0sSUFBSSxDQUFDZCxPQUFPLENBQUNDLFNBQVE7WUFDbkksT0FBTztRQUNYO0lBQ0o7SUFDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7O0tBa0JDLEdBQ0RjLEtBQUtkLFFBQVEsRUFBRVUsT0FBTyxFQUFFO1FBQ3BCLE9BQU90RSxVQUFVLElBQUksRUFBRSxLQUFLLEdBQUcsS0FBSyxHQUFHO1lBQ25DLE1BQU00QixVQUFVUCxPQUFPTSxVQUFVO1lBQ2pDLElBQUksQ0FBQ0MsU0FBUztnQkFDVixNQUFNLElBQUkyQyxNQUFNO1lBQ3BCO1lBQ0EsTUFBTUksV0FBVy9DLFFBQVFnRCxPQUFPLENBQUNOLFlBQVksUUFBUUEsWUFBWSxLQUFLLElBQUlBLFVBQVUsSUFBSSxDQUFDNUMsZUFBZTtZQUN4RyxJQUFJaUQsVUFBVTtnQkFDVixNQUFNLElBQUksQ0FBQ1gsT0FBTyxDQUFDUSxLQUFLSyxLQUFLLENBQUNGLGFBQWEsRUFBRSxFQUFFZjtZQUNuRDtZQUNBLE9BQU8sSUFBSTtRQUNmO0lBQ0o7QUFDSixFQUNBLGtDQUFrQyIsInNvdXJjZXMiOlsid2VicGFjazovL2Zyb250ZW5kLy4vbm9kZV9tb2R1bGVzL3dlYjMtZXRoLWFjY291bnRzL2xpYi9lc20vd2FsbGV0LmpzP2RkNWYiXSwic291cmNlc0NvbnRlbnQiOlsiLypcblRoaXMgZmlsZSBpcyBwYXJ0IG9mIHdlYjMuanMuXG5cbndlYjMuanMgaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeVxuaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5XG50aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBlaXRoZXIgdmVyc2lvbiAzIG9mIHRoZSBMaWNlbnNlLCBvclxuKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi5cblxud2ViMy5qcyBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLFxuYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2Zcbk1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGVcbkdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLlxuXG5Zb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2VcbmFsb25nIHdpdGggd2ViMy5qcy4gIElmIG5vdCwgc2VlIDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi5cbiovXG52YXIgX19hd2FpdGVyID0gKHRoaXMgJiYgdGhpcy5fX2F3YWl0ZXIpIHx8IGZ1bmN0aW9uICh0aGlzQXJnLCBfYXJndW1lbnRzLCBQLCBnZW5lcmF0b3IpIHtcbiAgICBmdW5jdGlvbiBhZG9wdCh2YWx1ZSkgeyByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBQID8gdmFsdWUgOiBuZXcgUChmdW5jdGlvbiAocmVzb2x2ZSkgeyByZXNvbHZlKHZhbHVlKTsgfSk7IH1cbiAgICByZXR1cm4gbmV3IChQIHx8IChQID0gUHJvbWlzZSkpKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgZnVuY3Rpb24gZnVsZmlsbGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yLm5leHQodmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiByZWplY3RlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvcltcInRocm93XCJdKHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gc3RlcChyZXN1bHQpIHsgcmVzdWx0LmRvbmUgPyByZXNvbHZlKHJlc3VsdC52YWx1ZSkgOiBhZG9wdChyZXN1bHQudmFsdWUpLnRoZW4oZnVsZmlsbGVkLCByZWplY3RlZCk7IH1cbiAgICAgICAgc3RlcCgoZ2VuZXJhdG9yID0gZ2VuZXJhdG9yLmFwcGx5KHRoaXNBcmcsIF9hcmd1bWVudHMgfHwgW10pKS5uZXh0KCkpO1xuICAgIH0pO1xufTtcbmltcG9ydCB7IFdlYjNCYXNlV2FsbGV0IH0gZnJvbSAnd2ViMy10eXBlcyc7XG5pbXBvcnQgeyBpc051bGxpc2ggfSBmcm9tICd3ZWIzLXZhbGlkYXRvcic7XG4vKipcbiAqIFdhbGxldCBpcyBhbiBpbiBtZW1vcnkgYHdhbGxldGAgdGhhdCBjYW4gaG9sZCBtdWx0aXBsZSBhY2NvdW50cy5cbiAqIFRoZXNlIGFjY291bnRzIGNhbiBiZSB1c2VkIHdoZW4gdXNpbmcgd2ViMy5ldGguc2VuZFRyYW5zYWN0aW9uKCkuXG4gKlxuICogIyMjIFBhcmFtZXRlcnNcbiAqICBXZWIzQWNjb3VudFByb3ZpZGVyIC0gQWNjb3VudFByb3ZpZGVyIGZvciB0aGUgd2FsbGV0XG4gKlxuICogYGBgdHNcbiAqIGltcG9ydCBXZWIzIGZyb20gJ3dlYjMnO1xuICogY29uc3Qgd2ViMyA9IG5ldyBXZWIzKFwiaHR0cHM6Ly9sb2NhbGhvc3Q6ODQ1NFwiKVxuICogd2ViMy5ldGguYWNjb3VudHMud2FsbGV0XG4gKiA+IFdhbGxldCgwKSBbXG4gKiAgIF9hY2NvdW50UHJvdmlkZXI6IHtcbiAqICAgICBjcmVhdGU6IFtGdW5jdGlvbjogY3JlYXRlXSxcbiAqICAgICBwcml2YXRlS2V5VG9BY2NvdW50OiBbRnVuY3Rpb246IHByaXZhdGVLZXlUb0FjY291bnRdLFxuICogICAgIGRlY3J5cHQ6IFtGdW5jdGlvbjogZGVjcnlwdF1cbiAqICAgfSxcbiAqICAgX2FkZHJlc3NNYXA6IE1hcCgwKSB7fSxcbiAqICAgX2RlZmF1bHRLZXlOYW1lOiAnd2ViM2pzX3dhbGxldCdcbiAqIF1cbiAqIGBgYFxuICovXG5leHBvcnQgY2xhc3MgV2FsbGV0IGV4dGVuZHMgV2ViM0Jhc2VXYWxsZXQge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlciguLi5hcmd1bWVudHMpO1xuICAgICAgICB0aGlzLl9hZGRyZXNzTWFwID0gbmV3IE1hcCgpO1xuICAgICAgICB0aGlzLl9kZWZhdWx0S2V5TmFtZSA9ICd3ZWIzanNfd2FsbGV0JztcbiAgICB9XG4gICAgLyoqXG4gICAgICogR2V0IHRoZSBzdG9yYWdlIG9iamVjdCBvZiB0aGUgYnJvd3NlclxuICAgICAqXG4gICAgICogQHJldHVybnMgdGhlIHN0b3JhZ2VcbiAgICAgKi9cbiAgICBzdGF0aWMgZ2V0U3RvcmFnZSgpIHtcbiAgICAgICAgbGV0IHN0b3JhZ2U7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBzdG9yYWdlID0gd2luZG93LmxvY2FsU3RvcmFnZTtcbiAgICAgICAgICAgIGNvbnN0IHggPSAnX19zdG9yYWdlX3Rlc3RfXyc7XG4gICAgICAgICAgICBzdG9yYWdlLnNldEl0ZW0oeCwgeCk7XG4gICAgICAgICAgICBzdG9yYWdlLnJlbW92ZUl0ZW0oeCk7XG4gICAgICAgICAgICByZXR1cm4gc3RvcmFnZTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZSkge1xuICAgICAgICAgICAgcmV0dXJuIGUgJiZcbiAgICAgICAgICAgICAgICAvLyBldmVyeXRoaW5nIGV4Y2VwdCBGaXJlZm94XG4gICAgICAgICAgICAgICAgKGUuY29kZSA9PT0gMjIgfHxcbiAgICAgICAgICAgICAgICAgICAgLy8gRmlyZWZveFxuICAgICAgICAgICAgICAgICAgICBlLmNvZGUgPT09IDEwMTQgfHxcbiAgICAgICAgICAgICAgICAgICAgLy8gdGVzdCBuYW1lIGZpZWxkIHRvbywgYmVjYXVzZSBjb2RlIG1pZ2h0IG5vdCBiZSBwcmVzZW50XG4gICAgICAgICAgICAgICAgICAgIC8vIGV2ZXJ5dGhpbmcgZXhjZXB0IEZpcmVmb3hcbiAgICAgICAgICAgICAgICAgICAgZS5uYW1lID09PSAnUXVvdGFFeGNlZWRlZEVycm9yJyB8fFxuICAgICAgICAgICAgICAgICAgICAvLyBGaXJlZm94XG4gICAgICAgICAgICAgICAgICAgIGUubmFtZSA9PT0gJ05TX0VSUk9SX0RPTV9RVU9UQV9SRUFDSEVEJykgJiZcbiAgICAgICAgICAgICAgICAvLyBhY2tub3dsZWRnZSBRdW90YUV4Y2VlZGVkRXJyb3Igb25seSBpZiB0aGVyZSdzIHNvbWV0aGluZyBhbHJlYWR5IHN0b3JlZFxuICAgICAgICAgICAgICAgICFpc051bGxpc2goc3RvcmFnZSkgJiZcbiAgICAgICAgICAgICAgICBzdG9yYWdlLmxlbmd0aCAhPT0gMFxuICAgICAgICAgICAgICAgID8gc3RvcmFnZVxuICAgICAgICAgICAgICAgIDogdW5kZWZpbmVkO1xuICAgICAgICB9XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdlbmVyYXRlcyBvbmUgb3IgbW9yZSBhY2NvdW50cyBpbiB0aGUgd2FsbGV0LiBJZiB3YWxsZXRzIGFscmVhZHkgZXhpc3QgdGhleSB3aWxsIG5vdCBiZSBvdmVycmlkZGVuLlxuICAgICAqXG4gICAgICogQHBhcmFtIG51bWJlck9mQWNjb3VudHMgLSBOdW1iZXIgb2YgYWNjb3VudHMgdG8gY3JlYXRlLiBMZWF2ZSBlbXB0eSB0byBjcmVhdGUgYW4gZW1wdHkgd2FsbGV0LlxuICAgICAqIEByZXR1cm5zIFRoZSB3YWxsZXRcbiAgICAgKiBgYGB0c1xuICAgICAqIHdlYjMuZXRoLmFjY291bnRzLndhbGxldC5jcmVhdGUoMilcbiAgICAgKiA+IFdhbGxldCgyKSBbXG4gICAgICogICB7XG4gICAgICogICAgIGFkZHJlc3M6ICcweGRlMzgzMTBhNDJCNzUxQUU1N2QzMGNGRkY0YTBBM2M1MkE0NDJmQ0UnLFxuICAgICAqICAgICBwcml2YXRlS2V5OiAnMHg2NDIyYzlkMjhlZmRjYmVlOTNjMWQzMmE1ZmM2ZmQ2ZmEwODFiOTg1NDg3ODg1Mjk2Y2Y4YzliYmI1ODcyNjAwJyxcbiAgICAgKiAgICAgc2lnblRyYW5zYWN0aW9uOiBbRnVuY3Rpb246IHNpZ25UcmFuc2FjdGlvbl0sXG4gICAgICogICAgIHNpZ246IFtGdW5jdGlvbjogc2lnbl0sXG4gICAgICogICAgIGVuY3J5cHQ6IFtGdW5jdGlvbjogZW5jcnlwdF1cbiAgICAgKiAgIH0sXG4gICAgICogICB7XG4gICAgICogICAgIGFkZHJlc3M6ICcweDc2NkJGNzU1MjQ2ZDkyNEIxZDAxN0ZkYjUzOTBmMzhhNjAxNjY2OTEnLFxuICAgICAqICAgICBwcml2YXRlS2V5OiAnMHg3NTY1MzBmMTNjMGViNjM2ZWJkZGE2NTUzMzVmNWRlYTk5MjFlMzM2MmUyZTU4OGIwYWQ1OWU1NTZmNzc1MWYwJyxcbiAgICAgKiAgICAgc2lnblRyYW5zYWN0aW9uOiBbRnVuY3Rpb246IHNpZ25UcmFuc2FjdGlvbl0sXG4gICAgICogICAgIHNpZ246IFtGdW5jdGlvbjogc2lnbl0sXG4gICAgICogICAgIGVuY3J5cHQ6IFtGdW5jdGlvbjogZW5jcnlwdF1cbiAgICAgKiAgIH0sXG4gICAgICogICBfYWNjb3VudFByb3ZpZGVyOiB7XG4gICAgICogICAgIGNyZWF0ZTogW0Z1bmN0aW9uOiBjcmVhdGVdLFxuICAgICAqICAgICBwcml2YXRlS2V5VG9BY2NvdW50OiBbRnVuY3Rpb246IHByaXZhdGVLZXlUb0FjY291bnRdLFxuICAgICAqICAgICBkZWNyeXB0OiBbRnVuY3Rpb246IGRlY3J5cHRdXG4gICAgICogICB9LFxuICAgICAqICAgX2FkZHJlc3NNYXA6IE1hcCgyKSB7XG4gICAgICogICAgICcweGRlMzgzMTBhNDJiNzUxYWU1N2QzMGNmZmY0YTBhM2M1MmE0NDJmY2UnID0+IDAsXG4gICAgICogICAgICcweDc2NmJmNzU1MjQ2ZDkyNGIxZDAxN2ZkYjUzOTBmMzhhNjAxNjY2OTEnID0+IDFcbiAgICAgKiAgIH0sXG4gICAgICogICBfZGVmYXVsdEtleU5hbWU6ICd3ZWIzanNfd2FsbGV0J1xuICAgICAqIF1cbiAgICAgKlxuICAgICAqIGBgYFxuICAgICAqL1xuICAgIGNyZWF0ZShudW1iZXJPZkFjY291bnRzKSB7XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbnVtYmVyT2ZBY2NvdW50czsgaSArPSAxKSB7XG4gICAgICAgICAgICB0aGlzLmFkZCh0aGlzLl9hY2NvdW50UHJvdmlkZXIuY3JlYXRlKCkpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBBZGRzIGFuIGFjY291bnQgdXNpbmcgYSBwcml2YXRlIGtleSBvciBhY2NvdW50IG9iamVjdCB0byB0aGUgd2FsbGV0LlxuICAgICAqXG4gICAgICogQHBhcmFtIGFjY291bnQgLSBBIHByaXZhdGUga2V5IG9yIGFjY291bnQgb2JqZWN0XG4gICAgICogQHJldHVybnMgVGhlIHdhbGxldFxuICAgICAqXG4gICAgICogYGBgdHNcbiAgICAgKiB3ZWIzLmV0aC5hY2NvdW50cy53YWxsZXQuYWRkKCcweGJjZTliNTk5ODEzMDNlNzZjNDg3OGIxYTZkN2IwODhlYzZiOWRkNWM5NjZiN2Q1ZjU0ZDdhNzQ5ZmY2ODMzODcnKTtcbiAgICAgKiA+IFdhbGxldCgxKSBbXG4gICAgICogICB7XG4gICAgICogICAgIGFkZHJlc3M6ICcweDg1RDcwNjMzYjkwZTAzZTAyNzZCOTg4ODAyODZEMEQwNTU2ODVlZDcnLFxuICAgICAqICAgICBwcml2YXRlS2V5OiAnMHhiY2U5YjU5OTgxMzAzZTc2YzQ4NzhiMWE2ZDdiMDg4ZWM2YjlkZDVjOTY2YjdkNWY1NGQ3YTc0OWZmNjgzMzg3JyxcbiAgICAgKiAgICAgc2lnblRyYW5zYWN0aW9uOiBbRnVuY3Rpb246IHNpZ25UcmFuc2FjdGlvbl0sXG4gICAgICogICAgIHNpZ246IFtGdW5jdGlvbjogc2lnbl0sXG4gICAgICogICAgIGVuY3J5cHQ6IFtGdW5jdGlvbjogZW5jcnlwdF1cbiAgICAgKiAgIH0sXG4gICAgICogICBfYWNjb3VudFByb3ZpZGVyOiB7XG4gICAgICogICAgIGNyZWF0ZTogW0Z1bmN0aW9uOiBjcmVhdGVdLFxuICAgICAqICAgICBwcml2YXRlS2V5VG9BY2NvdW50OiBbRnVuY3Rpb246IHByaXZhdGVLZXlUb0FjY291bnRdLFxuICAgICAqICAgICBkZWNyeXB0OiBbRnVuY3Rpb246IGRlY3J5cHRdXG4gICAgICogICB9LFxuICAgICAqICAgX2FkZHJlc3NNYXA6IE1hcCgxKSB7ICcweDg1ZDcwNjMzYjkwZTAzZTAyNzZiOTg4ODAyODZkMGQwNTU2ODVlZDcnID0+IDAgfSxcbiAgICAgKiAgIF9kZWZhdWx0S2V5TmFtZTogJ3dlYjNqc193YWxsZXQnXG4gICAgICogXVxuICAgICAqIGBgYFxuICAgICAqL1xuICAgIGFkZChhY2NvdW50KSB7XG4gICAgICAgIHZhciBfYTtcbiAgICAgICAgaWYgKHR5cGVvZiBhY2NvdW50ID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuYWRkKHRoaXMuX2FjY291bnRQcm92aWRlci5wcml2YXRlS2V5VG9BY2NvdW50KGFjY291bnQpKTtcbiAgICAgICAgfVxuICAgICAgICBsZXQgaW5kZXggPSB0aGlzLmxlbmd0aDtcbiAgICAgICAgY29uc3QgZXhpc3RBY2NvdW50ID0gdGhpcy5nZXQoYWNjb3VudC5hZGRyZXNzKTtcbiAgICAgICAgaWYgKGV4aXN0QWNjb3VudCkge1xuICAgICAgICAgICAgY29uc29sZS53YXJuKGBBY2NvdW50ICR7YWNjb3VudC5hZGRyZXNzLnRvTG93ZXJDYXNlKCl9IGFscmVhZHkgZXhpc3RzLmApO1xuICAgICAgICAgICAgaW5kZXggPSAoX2EgPSB0aGlzLl9hZGRyZXNzTWFwLmdldChhY2NvdW50LmFkZHJlc3MudG9Mb3dlckNhc2UoKSkpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IGluZGV4O1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuX2FkZHJlc3NNYXAuc2V0KGFjY291bnQuYWRkcmVzcy50b0xvd2VyQ2FzZSgpLCBpbmRleCk7XG4gICAgICAgIHRoaXNbaW5kZXhdID0gYWNjb3VudDtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdldCB0aGUgYWNjb3VudCBvZiB0aGUgd2FsbGV0IHdpdGggZWl0aGVyIHRoZSBpbmRleCBvciBwdWJsaWMgYWRkcmVzcy5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBhZGRyZXNzT3JJbmRleCAtIEEgc3RyaW5nIG9mIHRoZSBhZGRyZXNzIG9yIG51bWJlciBpbmRleCB3aXRoaW4gdGhlIHdhbGxldC5cbiAgICAgKiBAcmV0dXJucyBUaGUgYWNjb3VudCBvYmplY3Qgb3IgdW5kZWZpbmVkIGlmIHRoZSBhY2NvdW50IGRvZXNuJ3QgZXhpc3RcbiAgICAgKi9cbiAgICBnZXQoYWRkcmVzc09ySW5kZXgpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBhZGRyZXNzT3JJbmRleCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgIGNvbnN0IGluZGV4ID0gdGhpcy5fYWRkcmVzc01hcC5nZXQoYWRkcmVzc09ySW5kZXgudG9Mb3dlckNhc2UoKSk7XG4gICAgICAgICAgICBpZiAoIWlzTnVsbGlzaChpbmRleCkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpc1tpbmRleF07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzW2FkZHJlc3NPckluZGV4XTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmVtb3ZlcyBhbiBhY2NvdW50IGZyb20gdGhlIHdhbGxldC5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBhZGRyZXNzT3JJbmRleCAtIFRoZSBhY2NvdW50IGFkZHJlc3MsIG9yIGluZGV4IGluIHRoZSB3YWxsZXQuXG4gICAgICogQHJldHVybnMgdHJ1ZSBpZiB0aGUgd2FsbGV0IHdhcyByZW1vdmVkLiBmYWxzZSBpZiBpdCBjb3VsZG4ndCBiZSBmb3VuZC5cbiAgICAgKiBgYGB0c1xuICAgICAqIHdlYjMuZXRoLmFjY291bnRzLndhbGxldC5hZGQoJzB4YmNlOWI1OTk4MTMwM2U3NmM0ODc4YjFhNmQ3YjA4OGVjNmI5ZGQ1Yzk2NmI3ZDVmNTRkN2E3NDlmZjY4MzM4NycpO1xuICAgICAqXG4gICAgICogd2ViMy5ldGguYWNjb3VudHMud2FsbGV0LnJlbW92ZSgnMHg4NUQ3MDYzM2I5MGUwM2UwMjc2Qjk4ODgwMjg2RDBEMDU1Njg1ZWQ3Jyk7XG4gICAgICogPiB0cnVlXG4gICAgICogd2ViMy5ldGguYWNjb3VudHMud2FsbGV0XG4gICAgICogPiBXYWxsZXQoMCkgW1xuICAgICAqIF9hY2NvdW50UHJvdmlkZXI6IHtcbiAgICAgKiAgIGNyZWF0ZTogW0Z1bmN0aW9uOiBjcmVhdGVdLFxuICAgICAqICAgcHJpdmF0ZUtleVRvQWNjb3VudDogW0Z1bmN0aW9uOiBwcml2YXRlS2V5VG9BY2NvdW50XSxcbiAgICAgKiAgIGRlY3J5cHQ6IFtGdW5jdGlvbjogZGVjcnlwdF1cbiAgICAgKiB9LFxuICAgICAqIF9hZGRyZXNzTWFwOiBNYXAoMCkge30sXG4gICAgICogX2RlZmF1bHRLZXlOYW1lOiAnd2ViM2pzX3dhbGxldCdcbiAgICAgKiBdXG4gICAgICogYGBgXG4gICAgICovXG4gICAgcmVtb3ZlKGFkZHJlc3NPckluZGV4KSB7XG4gICAgICAgIGlmICh0eXBlb2YgYWRkcmVzc09ySW5kZXggPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICBjb25zdCBpbmRleCA9IHRoaXMuX2FkZHJlc3NNYXAuZ2V0KGFkZHJlc3NPckluZGV4LnRvTG93ZXJDYXNlKCkpO1xuICAgICAgICAgICAgaWYgKGlzTnVsbGlzaChpbmRleCkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLl9hZGRyZXNzTWFwLmRlbGV0ZShhZGRyZXNzT3JJbmRleC50b0xvd2VyQ2FzZSgpKTtcbiAgICAgICAgICAgIHRoaXMuc3BsaWNlKGluZGV4LCAxKTtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzW2FkZHJlc3NPckluZGV4XSkge1xuICAgICAgICAgICAgdGhpcy5zcGxpY2UoYWRkcmVzc09ySW5kZXgsIDEpO1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBTZWN1cmVseSBlbXB0aWVzIHRoZSB3YWxsZXQgYW5kIHJlbW92ZXMgYWxsIGl0cyBhY2NvdW50cy5cbiAgICAgKiBVc2UgdGhpcyB3aXRoICpjYXV0aW9uIGFzIGl0IHdpbGwgcmVtb3ZlIGFsbCBhY2NvdW50cyBzdG9yZWQgaW4gbG9jYWwgd2FsbGV0LlxuICAgICAqXG4gICAgICogQHJldHVybnMgVGhlIHdhbGxldCBvYmplY3RcbiAgICAgKiBgYGB0c1xuICAgICAqXG4gICAgICogd2ViMy5ldGguYWNjb3VudHMud2FsbGV0LmNsZWFyKCk7XG4gICAgICogPiBXYWxsZXQoMCkgW1xuICAgICAqIF9hY2NvdW50UHJvdmlkZXI6IHtcbiAgICAgKiAgIGNyZWF0ZTogW0Z1bmN0aW9uOiBjcmVhdGVdLFxuICAgICAqICAgcHJpdmF0ZUtleVRvQWNjb3VudDogW0Z1bmN0aW9uOiBwcml2YXRlS2V5VG9BY2NvdW50XSxcbiAgICAgKiAgIGRlY3J5cHQ6IFtGdW5jdGlvbjogZGVjcnlwdF1cbiAgICAgKiB9LFxuICAgICAqIF9hZGRyZXNzTWFwOiBNYXAoMCkge30sXG4gICAgICogX2RlZmF1bHRLZXlOYW1lOiAnd2ViM2pzX3dhbGxldCdcbiAgICAgKiBdXG4gICAgICogYGBgXG4gICAgICovXG4gICAgY2xlYXIoKSB7XG4gICAgICAgIHRoaXMuX2FkZHJlc3NNYXAuY2xlYXIoKTtcbiAgICAgICAgLy8gU2V0dGluZyBsZW5ndGggY2xlYXJzIHRoZSBBcnJheSBpbiBKUy5cbiAgICAgICAgdGhpcy5sZW5ndGggPSAwO1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgLyoqXG4gICAgICogRW5jcnlwdHMgYWxsIHdhbGxldCBhY2NvdW50cyB0byBhbiBhcnJheSBvZiBlbmNyeXB0ZWQga2V5c3RvcmUgdjMgb2JqZWN0cy5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBwYXNzd29yZCAtIFRoZSBwYXNzd29yZCB3aGljaCB3aWxsIGJlIHVzZWQgZm9yIGVuY3J5cHRpb25cbiAgICAgKiBAcGFyYW0gb3B0aW9ucyAtIGVuY3J5cHRpb24gb3B0aW9uc1xuICAgICAqIEByZXR1cm5zIEFuIGFycmF5IG9mIHRoZSBlbmNyeXB0ZWQga2V5c3RvcmUgdjMuXG4gICAgICpcbiAgICAgKiBgYGB0c1xuICAgICAqIHdlYjMuZXRoLmFjY291bnRzLndhbGxldC5jcmVhdGUoMSlcbiAgICAgKiB3ZWIzLmV0aC5hY2NvdW50cy53YWxsZXQuZW5jcnlwdChcImFiY1wiKS50aGVuKGNvbnNvbGUubG9nKTtcbiAgICAgKiA+IFtcbiAgICAgKiAne1widmVyc2lvblwiOjMsXCJpZFwiOlwiZmE0NmUyMTMtYTdjMy00ODQ0LWI5MDMtZGQxNGQzOWNjN2RiXCIsXG4gICAgICogXCJhZGRyZXNzXCI6XCJmYTNlNDFhNDAxNjA5MTAzYzI0MTQzMWNiZGVlODYyM2FlMmEzMjFhXCIsXCJjcnlwdG9cIjpcbiAgICAgKiB7XCJjaXBoZXJ0ZXh0XCI6XCI4ZDE3OWE5MTFkNjE0NmFkMjkyNGU4NmJmNDkzZWQ4OWI4ZmYzNTk2ZmZlYzA4MTZlNzYxYzU0MjAxNmFiMTNjXCIsXG4gICAgICogXCJjaXBoZXJwYXJhbXNcIjp7XCJpdlwiOlwiYWNjODg4YzZjZjRhMTliODY4NDZjZWYwMTg1YTcxNjRcIn0sXCJjaXBoZXJcIjpcImFlcy0xMjgtY3RyXCIsXG4gICAgICogXCJrZGZcIjpcInNjcnlwdFwiLFwia2RmcGFyYW1zXCI6e1wiblwiOjgxOTIsXCJyXCI6OCxcInBcIjoxLFwiZGtsZW5cIjozMixcInNhbHRcIjpcIjZhNzQzYzliMzY3ZDE1ZjQ3NThlNGYzZjMzNzhmZjBmZDQ0MzcwOGQxYzY0ODU0ZTA3NTg4ZWE1MzMxODIzYWVcIn0sXG4gICAgICogXCJtYWNcIjpcIjQxMDU0NGM4MzA3ZTM2OTFmZGEzMDVlYjM3MjJkODJjMzQzMWYyMTJhODdkYWExMTlhMjE1ODdkOTY2OThiNTdcIn19J1xuICAgICAqIF1cbiAgICAgKiBgYGBcbiAgICAgKi9cbiAgICBlbmNyeXB0KHBhc3N3b3JkLCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5hbGwodGhpcy5tYXAoKGFjY291bnQpID0+IF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHsgcmV0dXJuIGFjY291bnQuZW5jcnlwdChwYXNzd29yZCwgb3B0aW9ucyk7IH0pKSk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBEZWNyeXB0cyBrZXlzdG9yZSB2MyBvYmplY3RzLlxuICAgICAqXG4gICAgICogQHBhcmFtIGVuY3J5cHRlZFdhbGxldHMgLSBBbiBhcnJheSBvZiBlbmNyeXB0ZWQga2V5c3RvcmUgdjMgb2JqZWN0cyB0byBkZWNyeXB0XG4gICAgICogQHBhcmFtIHBhc3N3b3JkIC0gVGhlIHBhc3N3b3JkIHRvIGVuY3J5cHQgd2l0aFxuICAgICAqIEBwYXJhbSBvcHRpb25zIC0gZGVjcnlwdCBvcHRpb25zIGZvciB0aGUgd2FsbGV0c1xuICAgICAqIEByZXR1cm5zIFRoZSBkZWNyeXB0ZWQgd2FsbGV0IG9iamVjdFxuICAgICAqXG4gICAgICogYGBgdHNcbiAgICAgKiB3ZWIzLmV0aC5hY2NvdW50cy53YWxsZXQuZGVjcnlwdChbXG4gICAgICogeyB2ZXJzaW9uOiAzLFxuICAgICAqIGlkOiAnODMxOTFhODEtYWFjYS00NTFmLWI2M2QtMGM1ZjNiODQ5Mjg5JyxcbiAgICAgKiBhZGRyZXNzOiAnMDZmNzAyMzM3OTA5YzA2YzgyYjA5YjdhMjJmMGEyZjA4NTVkMWY2OCcsXG4gICAgICogY3J5cHRvOlxuICAgICAqIHsgY2lwaGVydGV4dDogJzdkMzRkZWFlMTEyODQxZmJhODZlM2U2Y2YwOGY1Mzk4ZGRhMzIzYThlNGQyOTMzMjYyMTUzNGUyYzQwNjllOGQnLFxuICAgICAqICAgY2lwaGVycGFyYW1zOiB7IGl2OiAnNDk3ZjRkMjY5OTdhODRkNTcwNzc4ZWFlODc0YjIzMzMnIH0sXG4gICAgICogICBjaXBoZXI6ICdhZXMtMTI4LWN0cicsXG4gICAgICogICBrZGY6ICdzY3J5cHQnLFxuICAgICAqICAga2RmcGFyYW1zOlxuICAgICAqICAgIHsgZGtsZW46IDMyLFxuICAgICAqICAgICAgc2FsdDogJzIwOGRkNzMyYTI3YWE0ODAzYmI3NjAyMjhkZmYxODUxNWQ1MzEzZmQwODViYmNlNjA1OTRhMzkxOWFlMmQ4OGQnLFxuICAgICAqICAgICAgbjogMjYyMTQ0LFxuICAgICAqICAgICAgcjogOCxcbiAgICAgKiAgICAgIHA6IDEgfSxcbiAgICAgKiAgIG1hYzogJzAwNjJhODUzZGUzMDI1MTNjNTdiZmUzMTA4YWI0OTM3MzMwMzRiZjNjYjMxMzMyNmY0MmNmMjZlYTI2MTljZjknIH0gfSxcbiAgICAgKiB7IHZlcnNpb246IDMsXG4gICAgICogaWQ6ICc3ZDZiOTFmYS0zNjExLTQwN2ItYjE2Yi0zOTZlZmIyOGY5N2UnLFxuICAgICAqIGFkZHJlc3M6ICdiNWQ4OTY2MWI1OWE5YWYwYjM0ZjU4ZDE5MTM4YmFhMmRlNDhiYWFmJyxcbiAgICAgKiBjcnlwdG86XG4gICAgICogeyBjaXBoZXJ0ZXh0OiAnY2I5NzEyZDE5ODJmZjg5ZjU3MWZhNWRiZWY0NDdmMTRiN2U1ZjE0MjIzMmJkMmE5MTNhYWM4MzM3MzBlZWI0MycsXG4gICAgICogICBjaXBoZXJwYXJhbXM6IHsgaXY6ICc4Y2NjYjkxY2I4NGU0MzU0MzdmNzI4MmVjMmZmZDJkYicgfSxcbiAgICAgKiAgIGNpcGhlcjogJ2Flcy0xMjgtY3RyJyxcbiAgICAgKiAgIGtkZjogJ3NjcnlwdCcsXG4gICAgICogICBrZGZwYXJhbXM6XG4gICAgICogICAgeyBka2xlbjogMzIsXG4gICAgICogICAgICBzYWx0OiAnMDhiYTY3MzYzNjNjNTU4NjQzNGNkNWI4OTVlNmZlNDFlYTdkYjQ3ODViZDliOTAxZGVkY2U3N2ExNTE0ZThiOCcsXG4gICAgICogICAgICBuOiAyNjIxNDQsXG4gICAgICogICAgICByOiA4LFxuICAgICAqICAgICAgcDogMSB9LFxuICAgICAqICAgbWFjOiAnZDJlYjA2OGIzN2UyZGY1NWY1NmZhOTdhMmJmNGY1NWUwNzJiZWYwZGQ3MDNiZmQ5MTc3MTdkOWRjNTQ1MTBmMCcgfSB9XG4gICAgICogXSwgJ3Rlc3QnKS50aGVuKGNvbnNvbGUubG9nKVxuICAgICAqID4gV2FsbGV0IHtcbiAgICAgKiAgIF9hY2NvdW50UHJvdmlkZXI6IHtcbiAgICAgKiAgICAgY3JlYXRlOiBbRnVuY3Rpb246IGNyZWF0ZV0sXG4gICAgICogICAgIHByaXZhdGVLZXlUb0FjY291bnQ6IFtGdW5jdGlvbjogcHJpdmF0ZUtleVRvQWNjb3VudF0sXG4gICAgICogICAgIGRlY3J5cHQ6IFtGdW5jdGlvbjogZGVjcnlwdF1cbiAgICAgKiAgIH0sXG4gICAgICogICBfZGVmYXVsdEtleU5hbWU6ICd3ZWIzanNfd2FsbGV0JyxcbiAgICAgKiAgIF9hY2NvdW50czoge1xuICAgICAqICAgICAnMHg4NWQ3MDYzM2I5MGUwM2UwMjc2Yjk4ODgwMjg2ZDBkMDU1Njg1ZWQ3Jzoge1xuICAgICAqICAgICAgIGFkZHJlc3M6ICcweDg1RDcwNjMzYjkwZTAzZTAyNzZCOTg4ODAyODZEMEQwNTU2ODVlZDcnLFxuICAgICAqICAgICAgIHByaXZhdGVLZXk6ICcweGJjZTliNTk5ODEzMDNlNzZjNDg3OGIxYTZkN2IwODhlYzZiOWRkNWM5NjZiN2Q1ZjU0ZDdhNzQ5ZmY2ODMzODcnLFxuICAgICAqICAgICAgIHNpZ25UcmFuc2FjdGlvbjogW0Z1bmN0aW9uOiBzaWduVHJhbnNhY3Rpb25dLFxuICAgICAqICAgICAgIHNpZ246IFtGdW5jdGlvbjogc2lnbl0sXG4gICAgICogICAgICAgZW5jcnlwdDogW0Z1bmN0aW9uOiBlbmNyeXB0XVxuICAgICAqICAgICB9LFxuICAgICAqICAgICAnMHgwNmY3MDIzMzc5MDljMDZjODJiMDliN2EyMmYwYTJmMDg1NWQxZjY4Jzoge1xuICAgICAqICAgICAgIGFkZHJlc3M6ICcweDA2RjcwMjMzNzkwOUMwNkM4MkIwOUI3QTIyRjBhMmYwODU1ZDFGNjgnLFxuICAgICAqICAgICAgIHByaXZhdGVLZXk6ICc4N2E1MWRhMTg5MDBkYTczOThiM2JhYjAzOTk2ODMzMTM4ZjI2OWY4ZjY2ZGQxMjM3Yjk4ZGY2YjljZTE0NTczJyxcbiAgICAgKiAgICAgICBzaWduVHJhbnNhY3Rpb246IFtGdW5jdGlvbjogc2lnblRyYW5zYWN0aW9uXSxcbiAgICAgKiAgICAgICBzaWduOiBbRnVuY3Rpb246IHNpZ25dLFxuICAgICAqICAgICAgIGVuY3J5cHQ6IFtGdW5jdGlvbjogZW5jcnlwdF1cbiAgICAgKiAgICAgfSxcbiAgICAgKiAgICAgJzB4YjVkODk2NjFiNTlhOWFmMGIzNGY1OGQxOTEzOGJhYTJkZTQ4YmFhZic6IHtcbiAgICAgKiAgICAgICBhZGRyZXNzOiAnMHhCNWQ4OTY2MUI1OWE5YUYwYjM0ZjU4RDE5MTM4YkFhMmRlNDhCQWFmJyxcbiAgICAgKiAgICAgICBwcml2YXRlS2V5OiAnN2VlNjFjNTI4Mjk3OWFhZTlkZDc5NWJiNmE1NGU4YmRjMmJmZTAwOWFjYjY0ZWI5YTY3MzIyZWVjM2IzZGE2ZScsXG4gICAgICogICAgICAgc2lnblRyYW5zYWN0aW9uOiBbRnVuY3Rpb246IHNpZ25UcmFuc2FjdGlvbl0sXG4gICAgICogICAgICAgc2lnbjogW0Z1bmN0aW9uOiBzaWduXSxcbiAgICAgKiAgICAgICBlbmNyeXB0OiBbRnVuY3Rpb246IGVuY3J5cHRdXG4gICAgICogICAgIH1cbiAgICAgKiAgIH1cbiAgICAgKiB9XG4gICAgICogYGBgXG4gICAgICovXG4gICAgZGVjcnlwdChlbmNyeXB0ZWRXYWxsZXRzLCBwYXNzd29yZCwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgY29uc3QgcmVzdWx0cyA9IHlpZWxkIFByb21pc2UuYWxsKGVuY3J5cHRlZFdhbGxldHMubWFwKCh3YWxsZXQpID0+IF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHsgcmV0dXJuIHRoaXMuX2FjY291bnRQcm92aWRlci5kZWNyeXB0KHdhbGxldCwgcGFzc3dvcmQsIG9wdGlvbnMpOyB9KSkpO1xuICAgICAgICAgICAgZm9yIChjb25zdCByZXMgb2YgcmVzdWx0cykge1xuICAgICAgICAgICAgICAgIHRoaXMuYWRkKHJlcyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFN0b3JlcyB0aGUgd2FsbGV0IGVuY3J5cHRlZCBhbmQgYXMgc3RyaW5nIGluIGxvY2FsIHN0b3JhZ2UuXG4gICAgICogKipfX05PVEU6X18qKiBCcm93c2VyIG9ubHlcbiAgICAgKlxuICAgICAqIEBwYXJhbSBwYXNzd29yZCAtIFRoZSBwYXNzd29yZCB0byBlbmNyeXB0IHRoZSB3YWxsZXRcbiAgICAgKiBAcGFyYW0ga2V5TmFtZSAtIChvcHRpb25hbCkgVGhlIGtleSB1c2VkIGZvciB0aGUgbG9jYWwgc3RvcmFnZSBwb3NpdGlvbiwgZGVmYXVsdHMgdG8gYFwid2ViM2pzX3dhbGxldFwiYC5cbiAgICAgKiBAcmV0dXJucyBXaWxsIHJldHVybiBib29sZWFuIHZhbHVlIHRydWUgaWYgc2F2ZWQgcHJvcGVybHlcbiAgICAgKiBgYGB0c1xuICAgICAqIHdlYjMuZXRoLmFjY291bnRzLndhbGxldC5zYXZlKCd0ZXN0IyEkJyk7XG4gICAgICogPnRydWVcbiAgICAgKiBgYGBcbiAgICAgKi9cbiAgICBzYXZlKHBhc3N3b3JkLCBrZXlOYW1lKSB7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICBjb25zdCBzdG9yYWdlID0gV2FsbGV0LmdldFN0b3JhZ2UoKTtcbiAgICAgICAgICAgIGlmICghc3RvcmFnZSkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignTG9jYWwgc3RvcmFnZSBub3QgYXZhaWxhYmxlLicpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgc3RvcmFnZS5zZXRJdGVtKGtleU5hbWUgIT09IG51bGwgJiYga2V5TmFtZSAhPT0gdm9pZCAwID8ga2V5TmFtZSA6IHRoaXMuX2RlZmF1bHRLZXlOYW1lLCBKU09OLnN0cmluZ2lmeSh5aWVsZCB0aGlzLmVuY3J5cHQocGFzc3dvcmQpKSk7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIExvYWRzIGEgd2FsbGV0IGZyb20gbG9jYWwgc3RvcmFnZSBhbmQgZGVjcnlwdHMgaXQuXG4gICAgICogKipfX05PVEU6X18qKiBCcm93c2VyIG9ubHlcbiAgICAgKlxuICAgICAqIEBwYXJhbSBwYXNzd29yZCAtIFRoZSBwYXNzd29yZCB0byBkZWNyeXB0IHRoZSB3YWxsZXQuXG4gICAgICogQHBhcmFtIGtleU5hbWUgLSAob3B0aW9uYWwpVGhlIGtleSB1c2VkIGZvciBsb2NhbCBzdG9yYWdlIHBvc2l0aW9uLCBkZWZhdWx0cyB0byBgd2ViM2pzX3dhbGxldFwiYFxuICAgICAqIEByZXR1cm5zIFJldHVybnMgdGhlIHdhbGxldCBvYmplY3RcbiAgICAgKlxuICAgICAqIGBgYHRzXG4gICAgICogd2ViMy5ldGguYWNjb3VudHMud2FsbGV0LnNhdmUoJ3Rlc3QjISQnKTtcbiAgICAgKiA+IHRydWVcbiAgICAgKiB3ZWIzLmV0aC5hY2NvdW50cy53YWxsZXQubG9hZCgndGVzdCMhJCcpO1xuICAgICAqIHsgZGVmYXVsdEtleU5hbWU6IFwid2ViM2pzX3dhbGxldFwiLFxuICAgICAqICAgbGVuZ3RoOiAwLFxuICAgICAqICAgX2FjY291bnRzOiBBY2NvdW50cyB7X3JlcXVlc3RNYW5hZ2VyOiBSZXF1ZXN0TWFuYWdlciwgZ2l2ZW5Qcm92aWRlcjogUHJveHksIHByb3ZpZGVyczoge+KApn0sIF9wcm92aWRlcjogV2Vic29ja2V0UHJvdmlkZXIsIOKApn0sXG4gICAgICogICBbW1Byb3RvdHlwZV1dOiBPYmplY3RcbiAgICAgKiB9XG4gICAgICogYGBgXG4gICAgICovXG4gICAgbG9hZChwYXNzd29yZCwga2V5TmFtZSkge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgY29uc3Qgc3RvcmFnZSA9IFdhbGxldC5nZXRTdG9yYWdlKCk7XG4gICAgICAgICAgICBpZiAoIXN0b3JhZ2UpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0xvY2FsIHN0b3JhZ2Ugbm90IGF2YWlsYWJsZS4nKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IGtleXN0b3JlID0gc3RvcmFnZS5nZXRJdGVtKGtleU5hbWUgIT09IG51bGwgJiYga2V5TmFtZSAhPT0gdm9pZCAwID8ga2V5TmFtZSA6IHRoaXMuX2RlZmF1bHRLZXlOYW1lKTtcbiAgICAgICAgICAgIGlmIChrZXlzdG9yZSkge1xuICAgICAgICAgICAgICAgIHlpZWxkIHRoaXMuZGVjcnlwdChKU09OLnBhcnNlKGtleXN0b3JlKSB8fCBbXSwgcGFzc3dvcmQpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICAgIH0pO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXdhbGxldC5qcy5tYXAiXSwibmFtZXMiOlsiX19hd2FpdGVyIiwidGhpc0FyZyIsIl9hcmd1bWVudHMiLCJQIiwiZ2VuZXJhdG9yIiwiYWRvcHQiLCJ2YWx1ZSIsInJlc29sdmUiLCJQcm9taXNlIiwicmVqZWN0IiwiZnVsZmlsbGVkIiwic3RlcCIsIm5leHQiLCJlIiwicmVqZWN0ZWQiLCJyZXN1bHQiLCJkb25lIiwidGhlbiIsImFwcGx5IiwiV2ViM0Jhc2VXYWxsZXQiLCJpc051bGxpc2giLCJXYWxsZXQiLCJjb25zdHJ1Y3RvciIsImFyZ3VtZW50cyIsIl9hZGRyZXNzTWFwIiwiTWFwIiwiX2RlZmF1bHRLZXlOYW1lIiwiZ2V0U3RvcmFnZSIsInN0b3JhZ2UiLCJ3aW5kb3ciLCJsb2NhbFN0b3JhZ2UiLCJ4Iiwic2V0SXRlbSIsInJlbW92ZUl0ZW0iLCJjb2RlIiwibmFtZSIsImxlbmd0aCIsInVuZGVmaW5lZCIsImNyZWF0ZSIsIm51bWJlck9mQWNjb3VudHMiLCJpIiwiYWRkIiwiX2FjY291bnRQcm92aWRlciIsImFjY291bnQiLCJfYSIsInByaXZhdGVLZXlUb0FjY291bnQiLCJpbmRleCIsImV4aXN0QWNjb3VudCIsImdldCIsImFkZHJlc3MiLCJjb25zb2xlIiwid2FybiIsInRvTG93ZXJDYXNlIiwic2V0IiwiYWRkcmVzc09ySW5kZXgiLCJyZW1vdmUiLCJkZWxldGUiLCJzcGxpY2UiLCJjbGVhciIsImVuY3J5cHQiLCJwYXNzd29yZCIsIm9wdGlvbnMiLCJhbGwiLCJtYXAiLCJkZWNyeXB0IiwiZW5jcnlwdGVkV2FsbGV0cyIsInJlc3VsdHMiLCJ3YWxsZXQiLCJyZXMiLCJzYXZlIiwia2V5TmFtZSIsIkVycm9yIiwiSlNPTiIsInN0cmluZ2lmeSIsImxvYWQiLCJrZXlzdG9yZSIsImdldEl0ZW0iLCJwYXJzZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/wallet.js\n");

/***/ })

};
;