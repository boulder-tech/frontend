"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/web3-utils";
exports.ids = ["vendor-chunks/web3-utils"];
exports.modules = {

/***/ "(ssr)/./node_modules/web3-utils/lib/esm/chunk_response_parser.js":
/*!******************************************************************!*\
  !*** ./node_modules/web3-utils/lib/esm/chunk_response_parser.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChunkResponseParser: () => (/* binding */ ChunkResponseParser)\n/* harmony export */ });\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-errors */ \"(ssr)/./node_modules/web3-errors/lib/esm/index.js\");\n\nclass ChunkResponseParser {\n    constructor(eventEmitter, autoReconnect){\n        this.eventEmitter = eventEmitter;\n        this.autoReconnect = autoReconnect;\n    }\n    clearQueues() {\n        if (typeof this._clearQueues === \"function\") {\n            this._clearQueues();\n        }\n    }\n    onError(clearQueues) {\n        this._clearQueues = clearQueues;\n    }\n    parseResponse(data) {\n        const returnValues = [];\n        // DE-CHUNKER\n        const dechunkedData = data.replace(/\\}[\\n\\r]?\\{/g, \"}|--|{\") // }{\n        .replace(/\\}\\][\\n\\r]?\\[\\{/g, \"}]|--|[{\") // }][{\n        .replace(/\\}[\\n\\r]?\\[\\{/g, \"}|--|[{\") // }[{\n        .replace(/\\}\\][\\n\\r]?\\{/g, \"}]|--|{\") // }]{\n        .split(\"|--|\");\n        dechunkedData.forEach((_chunkData)=>{\n            // prepend the last chunk\n            let chunkData = _chunkData;\n            if (this.lastChunk) {\n                chunkData = this.lastChunk + chunkData;\n            }\n            let result;\n            try {\n                result = JSON.parse(chunkData);\n            } catch (e) {\n                this.lastChunk = chunkData;\n                // start timeout to cancel all requests\n                if (this.lastChunkTimeout) {\n                    clearTimeout(this.lastChunkTimeout);\n                }\n                this.lastChunkTimeout = setTimeout(()=>{\n                    if (this.autoReconnect) return;\n                    this.clearQueues();\n                    this.eventEmitter.emit(\"error\", new web3_errors__WEBPACK_IMPORTED_MODULE_0__.InvalidResponseError({\n                        id: 1,\n                        jsonrpc: \"2.0\",\n                        error: {\n                            code: 2,\n                            message: \"Chunk timeout\"\n                        }\n                    }));\n                }, 1000 * 15);\n                return;\n            }\n            // cancel timeout and set chunk to null\n            clearTimeout(this.lastChunkTimeout);\n            this.lastChunk = undefined;\n            if (result) returnValues.push(result);\n        });\n        return returnValues;\n    }\n} //# sourceMappingURL=chunk_response_parser.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy11dGlscy9saWIvZXNtL2NodW5rX3Jlc3BvbnNlX3BhcnNlci5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFtRDtBQUM1QyxNQUFNQztJQUNUQyxZQUFZQyxZQUFZLEVBQUVDLGFBQWEsQ0FBRTtRQUNyQyxJQUFJLENBQUNELFlBQVksR0FBR0E7UUFDcEIsSUFBSSxDQUFDQyxhQUFhLEdBQUdBO0lBQ3pCO0lBQ0FDLGNBQWM7UUFDVixJQUFJLE9BQU8sSUFBSSxDQUFDQyxZQUFZLEtBQUssWUFBWTtZQUN6QyxJQUFJLENBQUNBLFlBQVk7UUFDckI7SUFDSjtJQUNBQyxRQUFRRixXQUFXLEVBQUU7UUFDakIsSUFBSSxDQUFDQyxZQUFZLEdBQUdEO0lBQ3hCO0lBQ0FHLGNBQWNDLElBQUksRUFBRTtRQUNoQixNQUFNQyxlQUFlLEVBQUU7UUFDdkIsYUFBYTtRQUNiLE1BQU1DLGdCQUFnQkYsS0FDakJHLE9BQU8sQ0FBQyxnQkFBZ0IsVUFBVSxLQUFLO1NBQ3ZDQSxPQUFPLENBQUMsb0JBQW9CLFlBQVksT0FBTztTQUMvQ0EsT0FBTyxDQUFDLGtCQUFrQixXQUFXLE1BQU07U0FDM0NBLE9BQU8sQ0FBQyxrQkFBa0IsV0FBVyxNQUFNO1NBQzNDQyxLQUFLLENBQUM7UUFDWEYsY0FBY0csT0FBTyxDQUFDQyxDQUFBQTtZQUNsQix5QkFBeUI7WUFDekIsSUFBSUMsWUFBWUQ7WUFDaEIsSUFBSSxJQUFJLENBQUNFLFNBQVMsRUFBRTtnQkFDaEJELFlBQVksSUFBSSxDQUFDQyxTQUFTLEdBQUdEO1lBQ2pDO1lBQ0EsSUFBSUU7WUFDSixJQUFJO2dCQUNBQSxTQUFTQyxLQUFLQyxLQUFLLENBQUNKO1lBQ3hCLEVBQ0EsT0FBT0ssR0FBRztnQkFDTixJQUFJLENBQUNKLFNBQVMsR0FBR0Q7Z0JBQ2pCLHVDQUF1QztnQkFDdkMsSUFBSSxJQUFJLENBQUNNLGdCQUFnQixFQUFFO29CQUN2QkMsYUFBYSxJQUFJLENBQUNELGdCQUFnQjtnQkFDdEM7Z0JBQ0EsSUFBSSxDQUFDQSxnQkFBZ0IsR0FBR0UsV0FBVztvQkFDL0IsSUFBSSxJQUFJLENBQUNwQixhQUFhLEVBQ2xCO29CQUNKLElBQUksQ0FBQ0MsV0FBVztvQkFDaEIsSUFBSSxDQUFDRixZQUFZLENBQUNzQixJQUFJLENBQUMsU0FBUyxJQUFJekIsNkRBQW9CQSxDQUFDO3dCQUNyRDBCLElBQUk7d0JBQ0pDLFNBQVM7d0JBQ1RDLE9BQU87NEJBQUVDLE1BQU07NEJBQUdDLFNBQVM7d0JBQWdCO29CQUMvQztnQkFDSixHQUFHLE9BQU87Z0JBQ1Y7WUFDSjtZQUNBLHVDQUF1QztZQUN2Q1AsYUFBYSxJQUFJLENBQUNELGdCQUFnQjtZQUNsQyxJQUFJLENBQUNMLFNBQVMsR0FBR2M7WUFDakIsSUFBSWIsUUFDQVIsYUFBYXNCLElBQUksQ0FBQ2Q7UUFDMUI7UUFDQSxPQUFPUjtJQUNYO0FBQ0osRUFDQSxpREFBaUQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mcm9udGVuZC8uL25vZGVfbW9kdWxlcy93ZWIzLXV0aWxzL2xpYi9lc20vY2h1bmtfcmVzcG9uc2VfcGFyc2VyLmpzP2E1OGEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW52YWxpZFJlc3BvbnNlRXJyb3IgfSBmcm9tICd3ZWIzLWVycm9ycyc7XG5leHBvcnQgY2xhc3MgQ2h1bmtSZXNwb25zZVBhcnNlciB7XG4gICAgY29uc3RydWN0b3IoZXZlbnRFbWl0dGVyLCBhdXRvUmVjb25uZWN0KSB7XG4gICAgICAgIHRoaXMuZXZlbnRFbWl0dGVyID0gZXZlbnRFbWl0dGVyO1xuICAgICAgICB0aGlzLmF1dG9SZWNvbm5lY3QgPSBhdXRvUmVjb25uZWN0O1xuICAgIH1cbiAgICBjbGVhclF1ZXVlcygpIHtcbiAgICAgICAgaWYgKHR5cGVvZiB0aGlzLl9jbGVhclF1ZXVlcyA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgdGhpcy5fY2xlYXJRdWV1ZXMoKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBvbkVycm9yKGNsZWFyUXVldWVzKSB7XG4gICAgICAgIHRoaXMuX2NsZWFyUXVldWVzID0gY2xlYXJRdWV1ZXM7XG4gICAgfVxuICAgIHBhcnNlUmVzcG9uc2UoZGF0YSkge1xuICAgICAgICBjb25zdCByZXR1cm5WYWx1ZXMgPSBbXTtcbiAgICAgICAgLy8gREUtQ0hVTktFUlxuICAgICAgICBjb25zdCBkZWNodW5rZWREYXRhID0gZGF0YVxuICAgICAgICAgICAgLnJlcGxhY2UoL1xcfVtcXG5cXHJdP1xcey9nLCAnfXwtLXx7JykgLy8gfXtcbiAgICAgICAgICAgIC5yZXBsYWNlKC9cXH1cXF1bXFxuXFxyXT9cXFtcXHsvZywgJ31dfC0tfFt7JykgLy8gfV1be1xuICAgICAgICAgICAgLnJlcGxhY2UoL1xcfVtcXG5cXHJdP1xcW1xcey9nLCAnfXwtLXxbeycpIC8vIH1be1xuICAgICAgICAgICAgLnJlcGxhY2UoL1xcfVxcXVtcXG5cXHJdP1xcey9nLCAnfV18LS18eycpIC8vIH1de1xuICAgICAgICAgICAgLnNwbGl0KCd8LS18Jyk7XG4gICAgICAgIGRlY2h1bmtlZERhdGEuZm9yRWFjaChfY2h1bmtEYXRhID0+IHtcbiAgICAgICAgICAgIC8vIHByZXBlbmQgdGhlIGxhc3QgY2h1bmtcbiAgICAgICAgICAgIGxldCBjaHVua0RhdGEgPSBfY2h1bmtEYXRhO1xuICAgICAgICAgICAgaWYgKHRoaXMubGFzdENodW5rKSB7XG4gICAgICAgICAgICAgICAgY2h1bmtEYXRhID0gdGhpcy5sYXN0Q2h1bmsgKyBjaHVua0RhdGE7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBsZXQgcmVzdWx0O1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICByZXN1bHQgPSBKU09OLnBhcnNlKGNodW5rRGF0YSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXRjaCAoZSkge1xuICAgICAgICAgICAgICAgIHRoaXMubGFzdENodW5rID0gY2h1bmtEYXRhO1xuICAgICAgICAgICAgICAgIC8vIHN0YXJ0IHRpbWVvdXQgdG8gY2FuY2VsIGFsbCByZXF1ZXN0c1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLmxhc3RDaHVua1RpbWVvdXQpIHtcbiAgICAgICAgICAgICAgICAgICAgY2xlYXJUaW1lb3V0KHRoaXMubGFzdENodW5rVGltZW91dCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHRoaXMubGFzdENodW5rVGltZW91dCA9IHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5hdXRvUmVjb25uZWN0KVxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmNsZWFyUXVldWVzKCk7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZXZlbnRFbWl0dGVyLmVtaXQoJ2Vycm9yJywgbmV3IEludmFsaWRSZXNwb25zZUVycm9yKHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlkOiAxLFxuICAgICAgICAgICAgICAgICAgICAgICAganNvbnJwYzogJzIuMCcsXG4gICAgICAgICAgICAgICAgICAgICAgICBlcnJvcjogeyBjb2RlOiAyLCBtZXNzYWdlOiAnQ2h1bmsgdGltZW91dCcgfSxcbiAgICAgICAgICAgICAgICAgICAgfSkpO1xuICAgICAgICAgICAgICAgIH0sIDEwMDAgKiAxNSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gY2FuY2VsIHRpbWVvdXQgYW5kIHNldCBjaHVuayB0byBudWxsXG4gICAgICAgICAgICBjbGVhclRpbWVvdXQodGhpcy5sYXN0Q2h1bmtUaW1lb3V0KTtcbiAgICAgICAgICAgIHRoaXMubGFzdENodW5rID0gdW5kZWZpbmVkO1xuICAgICAgICAgICAgaWYgKHJlc3VsdClcbiAgICAgICAgICAgICAgICByZXR1cm5WYWx1ZXMucHVzaChyZXN1bHQpO1xuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIHJldHVyblZhbHVlcztcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jaHVua19yZXNwb25zZV9wYXJzZXIuanMubWFwIl0sIm5hbWVzIjpbIkludmFsaWRSZXNwb25zZUVycm9yIiwiQ2h1bmtSZXNwb25zZVBhcnNlciIsImNvbnN0cnVjdG9yIiwiZXZlbnRFbWl0dGVyIiwiYXV0b1JlY29ubmVjdCIsImNsZWFyUXVldWVzIiwiX2NsZWFyUXVldWVzIiwib25FcnJvciIsInBhcnNlUmVzcG9uc2UiLCJkYXRhIiwicmV0dXJuVmFsdWVzIiwiZGVjaHVua2VkRGF0YSIsInJlcGxhY2UiLCJzcGxpdCIsImZvckVhY2giLCJfY2h1bmtEYXRhIiwiY2h1bmtEYXRhIiwibGFzdENodW5rIiwicmVzdWx0IiwiSlNPTiIsInBhcnNlIiwiZSIsImxhc3RDaHVua1RpbWVvdXQiLCJjbGVhclRpbWVvdXQiLCJzZXRUaW1lb3V0IiwiZW1pdCIsImlkIiwianNvbnJwYyIsImVycm9yIiwiY29kZSIsIm1lc3NhZ2UiLCJ1bmRlZmluZWQiLCJwdXNoIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-utils/lib/esm/chunk_response_parser.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-utils/lib/esm/converters.js":
/*!*******************************************************!*\
  !*** ./node_modules/web3-utils/lib/esm/converters.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   asciiToHex: () => (/* binding */ asciiToHex),\n/* harmony export */   bytesToHex: () => (/* binding */ bytesToHex),\n/* harmony export */   bytesToUint8Array: () => (/* binding */ bytesToUint8Array),\n/* harmony export */   ethUnitMap: () => (/* binding */ ethUnitMap),\n/* harmony export */   fromAscii: () => (/* binding */ fromAscii),\n/* harmony export */   fromDecimal: () => (/* binding */ fromDecimal),\n/* harmony export */   fromUtf8: () => (/* binding */ fromUtf8),\n/* harmony export */   fromWei: () => (/* binding */ fromWei),\n/* harmony export */   hexToAscii: () => (/* binding */ hexToAscii),\n/* harmony export */   hexToBytes: () => (/* binding */ hexToBytes),\n/* harmony export */   hexToNumber: () => (/* binding */ hexToNumber),\n/* harmony export */   hexToNumberString: () => (/* binding */ hexToNumberString),\n/* harmony export */   hexToString: () => (/* binding */ hexToString),\n/* harmony export */   hexToUtf8: () => (/* binding */ hexToUtf8),\n/* harmony export */   numberToHex: () => (/* binding */ numberToHex),\n/* harmony export */   stringToHex: () => (/* binding */ stringToHex),\n/* harmony export */   toAscii: () => (/* binding */ toAscii),\n/* harmony export */   toBigInt: () => (/* binding */ toBigInt),\n/* harmony export */   toBool: () => (/* binding */ toBool),\n/* harmony export */   toChecksumAddress: () => (/* binding */ toChecksumAddress),\n/* harmony export */   toDecimal: () => (/* binding */ toDecimal),\n/* harmony export */   toHex: () => (/* binding */ toHex),\n/* harmony export */   toNumber: () => (/* binding */ toNumber),\n/* harmony export */   toUtf8: () => (/* binding */ toUtf8),\n/* harmony export */   toWei: () => (/* binding */ toWei),\n/* harmony export */   utf8ToBytes: () => (/* binding */ utf8ToBytes),\n/* harmony export */   utf8ToHex: () => (/* binding */ utf8ToHex)\n/* harmony export */ });\n/* harmony import */ var ethereum_cryptography_keccak_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ethereum-cryptography/keccak.js */ \"(ssr)/./node_modules/ethereum-cryptography/esm/keccak.js\");\n/* harmony import */ var ethereum_cryptography_utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ethereum-cryptography/utils.js */ \"(ssr)/./node_modules/ethereum-cryptography/esm/utils.js\");\n/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-validator */ \"(ssr)/./node_modules/web3-validator/lib/esm/index.js\");\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! web3-errors */ \"(ssr)/./node_modules/web3-errors/lib/esm/index.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ /**\n * @module Utils\n */ \n\n\n\n// Ref: https://ethdocs.org/en/latest/ether.html\n// Note: this could be simplified using ** operator, but babel does not handle it well (https://github.com/babel/babel/issues/13109)\n/** @internal */ const ethUnitMap = {\n    noether: BigInt(0),\n    wei: BigInt(1),\n    kwei: BigInt(1000),\n    Kwei: BigInt(1000),\n    babbage: BigInt(1000),\n    femtoether: BigInt(1000),\n    mwei: BigInt(1000000),\n    Mwei: BigInt(1000000),\n    lovelace: BigInt(1000000),\n    picoether: BigInt(1000000),\n    gwei: BigInt(1000000000),\n    Gwei: BigInt(1000000000),\n    shannon: BigInt(1000000000),\n    nanoether: BigInt(1000000000),\n    nano: BigInt(1000000000),\n    szabo: BigInt(1000000000000),\n    microether: BigInt(1000000000000),\n    micro: BigInt(1000000000000),\n    finney: BigInt(1000000000000000),\n    milliether: BigInt(1000000000000000),\n    milli: BigInt(1000000000000000),\n    ether: BigInt(\"1000000000000000000\"),\n    kether: BigInt(\"1000000000000000000000\"),\n    grand: BigInt(\"1000000000000000000000\"),\n    mether: BigInt(\"1000000000000000000000000\"),\n    gether: BigInt(\"1000000000000000000000000000\"),\n    tether: BigInt(\"1000000000000000000000000000000\")\n};\n/**\n * Convert a value from bytes to Uint8Array\n * @param data - Data to be converted\n * @returns - The Uint8Array representation of the input data\n *\n * @example\n * ```ts\n * console.log(web3.utils.bytesToUint8Array(\"0xab\")));\n * > Uint8Array(1) [ 171 ]\n * ```\n */ const bytesToUint8Array = (data)=>{\n    web3_validator__WEBPACK_IMPORTED_MODULE_2__.validator.validate([\n        \"bytes\"\n    ], [\n        data\n    ]);\n    if (data instanceof Uint8Array) {\n        return data;\n    }\n    if (Array.isArray(data)) {\n        return new Uint8Array(data);\n    }\n    if (typeof data === \"string\") {\n        return web3_validator__WEBPACK_IMPORTED_MODULE_2__.utils.hexToUint8Array(data);\n    }\n    throw new web3_errors__WEBPACK_IMPORTED_MODULE_3__.InvalidBytesError(data);\n};\n/**\n * @internal\n */ const { uint8ArrayToHexString } = web3_validator__WEBPACK_IMPORTED_MODULE_2__.utils;\n/**\n * Convert a byte array to a hex string\n * @param bytes - Byte array to be converted\n * @returns - The hex string representation of the input byte array\n *\n * @example\n * ```ts\n * console.log(web3.utils.bytesToHex(new Uint8Array([72, 12])));\n * > \"0x480c\"\n *\n */ const bytesToHex = (bytes)=>uint8ArrayToHexString(bytesToUint8Array(bytes));\n/**\n * Convert a hex string to a byte array\n * @param hex - Hex string to be converted\n * @returns - The byte array representation of the input hex string\n *\n * @example\n * ```ts\n * console.log(web3.utils.hexToBytes('0x74657374'));\n * > Uint8Array(4) [ 116, 101, 115, 116 ]\n * ```\n */ const hexToBytes = (bytes)=>{\n    if (typeof bytes === \"string\" && bytes.slice(0, 2).toLowerCase() !== \"0x\") {\n        return bytesToUint8Array(`0x${bytes}`);\n    }\n    return bytesToUint8Array(bytes);\n};\n/**\n * Converts value to it's number representation\n * @param value - Hex string to be converted\n * @returns - The number representation of the input value\n *\n * @example\n * ```ts\n * conoslle.log(web3.utils.hexToNumber('0xa'));\n * > 10\n * ```\n */ const hexToNumber = (value)=>{\n    web3_validator__WEBPACK_IMPORTED_MODULE_2__.validator.validate([\n        \"hex\"\n    ], [\n        value\n    ]);\n    // To avoid duplicate code and circular dependency we will\n    // use `hexToNumber` implementation from `web3-validator`\n    return web3_validator__WEBPACK_IMPORTED_MODULE_2__.utils.hexToNumber(value);\n};\n/**\n * Converts value to it's number representation @alias `hexToNumber`\n */ const toDecimal = hexToNumber;\n/**\n * Converts value to it's hex representation\n * @param value - Value to be converted\n * @param hexstrict - Add padding to converted value if odd, to make it hexstrict\n * @returns - The hex representation of the input value\n *\n * @example\n * ```ts\n * console.log(web3.utils.numberToHex(10));\n * > \"0xa\"\n * ```\n */ const numberToHex = (value, hexstrict)=>{\n    if (typeof value !== \"bigint\") web3_validator__WEBPACK_IMPORTED_MODULE_2__.validator.validate([\n        \"int\"\n    ], [\n        value\n    ]);\n    // To avoid duplicate code and circular dependency we will\n    // use `numberToHex` implementation from `web3-validator`\n    let updatedValue = web3_validator__WEBPACK_IMPORTED_MODULE_2__.utils.numberToHex(value);\n    if (hexstrict) {\n        if (!updatedValue.startsWith(\"-\") && updatedValue.length % 2 === 1) {\n            // To avoid duplicate a circular dependancy we will not be using the padLeft method\n            updatedValue = \"0x0\".concat(updatedValue.slice(2));\n        } else if (updatedValue.length % 2 === 0 && updatedValue.startsWith(\"-\")) updatedValue = \"-0x0\".concat(updatedValue.slice(3));\n    }\n    return updatedValue;\n};\n/**\n * Converts value to it's hex representation @alias `numberToHex`\n *\n */ const fromDecimal = numberToHex;\n/**\n * Converts value to it's decimal representation in string\n * @param value - Hex string to be converted\n * @returns - The decimal representation of the input value\n *\n * @example\n * ```ts\n * console.log(web3.utils.hexToNumberString('0xa'));\n * > \"10\"\n * ```\n */ const hexToNumberString = (data)=>hexToNumber(data).toString();\n/**\n * Should be called to get hex representation (prefixed by 0x) of utf8 string\n * @param str - Utf8 string to be converted\n * @returns - The hex representation of the input string\n *\n * @example\n * ```ts\n * console.log(utf8ToHex('web3.js'));\n * > \"0x776562332e6a73\"\n *\n */ const utf8ToHex = (str)=>{\n    web3_validator__WEBPACK_IMPORTED_MODULE_2__.validator.validate([\n        \"string\"\n    ], [\n        str\n    ]);\n    // To be compatible with 1.x trim null character\n    // eslint-disable-next-line no-control-regex\n    let strWithoutNullCharacter = str.replace(/^(?:\\u0000)/, \"\");\n    // eslint-disable-next-line no-control-regex\n    strWithoutNullCharacter = strWithoutNullCharacter.replace(/(?:\\u0000)$/, \"\");\n    return bytesToHex(new TextEncoder().encode(strWithoutNullCharacter));\n};\n/**\n * @alias utf8ToHex\n */ const fromUtf8 = utf8ToHex;\n/**\n * @alias utf8ToHex\n */ const stringToHex = utf8ToHex;\n/**\n * Should be called to get utf8 from it's hex representation\n * @param str - Hex string to be converted\n * @returns - Utf8 string\n *\n * @example\n * ```ts\n * console.log(web3.utils.hexToUtf8('0x48656c6c6f20576f726c64'));\n * > Hello World\n * ```\n */ const hexToUtf8 = (str)=>(0,ethereum_cryptography_utils_js__WEBPACK_IMPORTED_MODULE_1__.bytesToUtf8)(hexToBytes(str));\n/**\n * @alias hexToUtf8\n */ const toUtf8 = (input)=>{\n    if (typeof input === \"string\") {\n        return hexToUtf8(input);\n    }\n    web3_validator__WEBPACK_IMPORTED_MODULE_2__.validator.validate([\n        \"bytes\"\n    ], [\n        input\n    ]);\n    return (0,ethereum_cryptography_utils_js__WEBPACK_IMPORTED_MODULE_1__.bytesToUtf8)(input);\n};\nconst utf8ToBytes = ethereum_cryptography_utils_js__WEBPACK_IMPORTED_MODULE_1__.utf8ToBytes;\n/**\n * @alias hexToUtf8\n */ const hexToString = hexToUtf8;\n/**\n * Should be called to get hex representation (prefixed by 0x) of ascii string\n * @param str - String to be converted to hex\n * @returns - Hex string\n *\n * @example\n * ```ts\n * console.log(web3.utils.asciiToHex('Hello World'));\n * > 0x48656c6c6f20576f726c64\n * ```\n */ const asciiToHex = (str)=>{\n    web3_validator__WEBPACK_IMPORTED_MODULE_2__.validator.validate([\n        \"string\"\n    ], [\n        str\n    ]);\n    let hexString = \"\";\n    for(let i = 0; i < str.length; i += 1){\n        const hexCharCode = str.charCodeAt(i).toString(16);\n        // might need a leading 0\n        hexString += hexCharCode.length % 2 !== 0 ? `0${hexCharCode}` : hexCharCode;\n    }\n    return `0x${hexString}`;\n};\n/**\n * @alias asciiToHex\n */ const fromAscii = asciiToHex;\n/**\n * Should be called to get ascii from it's hex representation\n * @param str - Hex string to be converted to ascii\n * @returns - Ascii string\n *\n * @example\n * ```ts\n * console.log(web3.utils.hexToAscii('0x48656c6c6f20576f726c64'));\n * > Hello World\n * ```\n */ const hexToAscii = (str)=>{\n    const decoder = new TextDecoder(\"ascii\");\n    return decoder.decode(hexToBytes(str));\n};\n/**\n * @alias hexToAscii\n */ const toAscii = hexToAscii;\n/**\n * Auto converts any given value into it's hex representation.\n * @param value - Value to be converted to hex\n * @param returnType - If true, it will return the type of the value\n *\n * @example\n * ```ts\n * console.log(web3.utils.toHex(10));\n * > 0xa\n *\n * console.log(web3.utils.toHex('0x123', true));\n * > bytes\n *```\n */ const toHex = (value, returnType)=>{\n    if (typeof value === \"string\" && (0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isAddress)(value)) {\n        return returnType ? \"address\" : `0x${value.toLowerCase().replace(/^0x/i, \"\")}`;\n    }\n    if (typeof value === \"boolean\") {\n        // eslint-disable-next-line no-nested-ternary\n        return returnType ? \"bool\" : value ? \"0x01\" : \"0x00\";\n    }\n    if (typeof value === \"number\") {\n        // eslint-disable-next-line no-nested-ternary\n        return returnType ? value < 0 ? \"int256\" : \"uint256\" : numberToHex(value);\n    }\n    if (typeof value === \"bigint\") {\n        return returnType ? \"bigint\" : numberToHex(value);\n    }\n    if (typeof value === \"object\" && !!value) {\n        return returnType ? \"string\" : utf8ToHex(JSON.stringify(value));\n    }\n    if (typeof value === \"string\") {\n        if (value.startsWith(\"-0x\") || value.startsWith(\"-0X\")) {\n            return returnType ? \"int256\" : numberToHex(value);\n        }\n        if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isHexStrict)(value)) {\n            return returnType ? \"bytes\" : value;\n        }\n        if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isHex)(value) && !(0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isInt)(value)) {\n            return returnType ? \"bytes\" : `0x${value}`;\n        }\n        if (!Number.isFinite(value)) {\n            return returnType ? \"string\" : utf8ToHex(value);\n        }\n    }\n    throw new web3_errors__WEBPACK_IMPORTED_MODULE_3__.HexProcessingError(value);\n};\n/**\n * Converts any given value into it's number representation, if possible, else into it's bigint representation.\n * @param value - The value to convert\n * @returns - Returns the value in number or bigint representation\n *\n * @example\n * ```ts\n * console.log(web3.utils.toNumber(1));\n * > 1\n * console.log(web3.utils.toNumber(Number.MAX_SAFE_INTEGER));\n * > 9007199254740991\n *\n * console.log(web3.utils.toNumber(BigInt(Number.MAX_SAFE_INTEGER)));\n * > 9007199254740991\n *\n * console.log(web3.utils.toNumber(BigInt(Number.MAX_SAFE_INTEGER) + BigInt(1)));\n * > 9007199254740992n\n *\n * ```\n */ const toNumber = (value)=>{\n    if (typeof value === \"number\") {\n        return value;\n    }\n    if (typeof value === \"bigint\") {\n        return value >= Number.MIN_SAFE_INTEGER && value <= Number.MAX_SAFE_INTEGER ? Number(value) : value;\n    }\n    if (typeof value === \"string\" && (0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isHexStrict)(value)) {\n        return hexToNumber(value);\n    }\n    try {\n        return toNumber(BigInt(value));\n    } catch (_a) {\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_3__.InvalidNumberError(value);\n    }\n};\n/**\n * Auto converts any given value into it's bigint representation\n *\n * @param value - The value to convert\n * @returns - Returns the value in bigint representation\n\n * @example\n * ```ts\n * console.log(web3.utils.toBigInt(1));\n * > 1n\n * ```\n */ const toBigInt = (value)=>{\n    if (typeof value === \"number\") {\n        return BigInt(value);\n    }\n    if (typeof value === \"bigint\") {\n        return value;\n    }\n    // isHex passes for dec, too\n    if (typeof value === \"string\" && (0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isHex)(value)) {\n        if (value.startsWith(\"-\")) {\n            return -BigInt(value.substring(1));\n        }\n        return BigInt(value);\n    }\n    throw new web3_errors__WEBPACK_IMPORTED_MODULE_3__.InvalidNumberError(value);\n};\n/**\n * Takes a number of wei and converts it to any other ether unit.\n * @param number - The value in wei\n * @param unit - The unit to convert to\n * @returns - Returns the converted value in the given unit\n *\n * @example\n * ```ts\n * console.log(web3.utils.fromWei(\"1\", \"ether\"));\n * > 0.000000000000000001\n *\n * console.log(web3.utils.fromWei(\"1\", \"shannon\"));\n * > 0.000000001\n * ```\n */ const fromWei = (number, unit)=>{\n    const denomination = ethUnitMap[unit];\n    if (!denomination) {\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_3__.InvalidUnitError(unit);\n    }\n    // value in wei would always be integer\n    // 13456789, 1234\n    const value = String(toNumber(number));\n    // count number of zeros in denomination\n    // 1000000 -> 6\n    const numberOfZerosInDenomination = denomination.toString().length - 1;\n    if (numberOfZerosInDenomination <= 0) {\n        return value.toString();\n    }\n    // pad the value with required zeros\n    // 13456789 -> 13456789, 1234 -> 001234\n    const zeroPaddedValue = value.padStart(numberOfZerosInDenomination, \"0\");\n    // get the integer part of value by counting number of zeros from start\n    // 13456789 -> '13'\n    // 001234 -> ''\n    const integer = zeroPaddedValue.slice(0, -numberOfZerosInDenomination);\n    // get the fraction part of value by counting number of zeros backward\n    // 13456789 -> '456789'\n    // 001234 -> '001234'\n    const fraction = zeroPaddedValue.slice(-numberOfZerosInDenomination).replace(/\\.?0+$/, \"\");\n    if (integer === \"\") {\n        return `0.${fraction}`;\n    }\n    if (fraction === \"\") {\n        return integer;\n    }\n    return `${integer}.${fraction}`;\n};\n/**\n * Takes a number of a unit and converts it to wei.\n *\n * @param number - The number to convert.\n * @param unit - {@link EtherUnits} The unit of the number passed.\n * @returns The number converted to wei.\n *\n * @example\n * ```ts\n * console.log(web3.utils.toWei(\"0.001\", \"ether\"));\n * > 1000000000000000 //(wei)\n * ```\n */ // todo in 1.x unit defaults to 'ether'\nconst toWei = (number, unit)=>{\n    web3_validator__WEBPACK_IMPORTED_MODULE_2__.validator.validate([\n        \"number\"\n    ], [\n        number\n    ]);\n    const denomination = ethUnitMap[unit];\n    if (!denomination) {\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_3__.InvalidUnitError(unit);\n    }\n    // if value is decimal e.g. 24.56 extract `integer` and `fraction` part\n    // to avoid `fraction` to be null use `concat` with empty string\n    const [integer, fraction] = String(typeof number === \"string\" && !(0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isHexStrict)(number) ? number : toNumber(number)).split(\".\").concat(\"\");\n    // join the value removing `.` from\n    // 24.56 -> 2456\n    const value = BigInt(`${integer}${fraction}`);\n    // multiply value with denomination\n    // 2456 * 1000000 -> 2456000000\n    const updatedValue = value * denomination;\n    // count number of zeros in denomination\n    const numberOfZerosInDenomination = denomination.toString().length - 1;\n    // check which either `fraction` or `denomination` have lower number of zeros\n    const decimals = Math.min(fraction.length, numberOfZerosInDenomination);\n    if (decimals === 0) {\n        return updatedValue.toString();\n    }\n    // Add zeros to make length equal to required decimal points\n    // If string is larger than decimal points required then remove last zeros\n    return updatedValue.toString().padStart(decimals, \"0\").slice(0, -decimals);\n};\n/**\n * Will convert an upper or lowercase Ethereum address to a checksum address.\n * @param address - An address string\n * @returns\tThe checksum address\n * @example\n * ```ts\n * web3.utils.toChecksumAddress('0xc1912fee45d61c87cc5ea59dae31190fffff232d');\n * > \"0xc1912fEE45d61C87Cc5EA59DaE31190FFFFf232d\"\n * ```\n */ const toChecksumAddress = (address)=>{\n    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isAddress)(address, false)) {\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_3__.InvalidAddressError(address);\n    }\n    const lowerCaseAddress = address.toLowerCase().replace(/^0x/i, \"\");\n    const hash = web3_validator__WEBPACK_IMPORTED_MODULE_2__.utils.uint8ArrayToHexString((0,ethereum_cryptography_keccak_js__WEBPACK_IMPORTED_MODULE_0__.keccak256)(utf8ToBytes(lowerCaseAddress)));\n    if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isNullish)(hash) || hash === \"0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470\") return \"\"; // // EIP-1052 if hash is equal to c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470, keccak was given empty data\n    let checksumAddress = \"0x\";\n    const addressHash = hash.replace(/^0x/i, \"\");\n    for(let i = 0; i < lowerCaseAddress.length; i += 1){\n        // If ith character is 8 to f then make it uppercase\n        if (parseInt(addressHash[i], 16) > 7) {\n            checksumAddress += lowerCaseAddress[i].toUpperCase();\n        } else {\n            checksumAddress += lowerCaseAddress[i];\n        }\n    }\n    return checksumAddress;\n};\nconst toBool = (value)=>{\n    if (typeof value === \"boolean\") {\n        return value;\n    }\n    if (typeof value === \"number\" && (value === 0 || value === 1)) {\n        return Boolean(value);\n    }\n    if (typeof value === \"bigint\" && (value === BigInt(0) || value === BigInt(1))) {\n        return Boolean(value);\n    }\n    if (typeof value === \"string\" && !(0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isHexStrict)(value) && (value === \"1\" || value === \"0\" || value === \"false\" || value === \"true\")) {\n        if (value === \"true\") {\n            return true;\n        }\n        if (value === \"false\") {\n            return false;\n        }\n        return Boolean(Number(value));\n    }\n    if (typeof value === \"string\" && (0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isHexStrict)(value) && (value === \"0x1\" || value === \"0x0\")) {\n        return Boolean(toNumber(value));\n    }\n    throw new web3_errors__WEBPACK_IMPORTED_MODULE_3__.InvalidBooleanError(value);\n}; //# sourceMappingURL=converters.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-utils/lib/esm/converters.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-utils/lib/esm/event_emitter.js":
/*!**********************************************************!*\
  !*** ./node_modules/web3-utils/lib/esm/event_emitter.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EventEmitter: () => (/* binding */ EventEmitter)\n/* harmony export */ });\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! events */ \"events\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ /* eslint-disable max-classes-per-file */ var __awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\nconst wrapFunction = (fn)=>(params)=>fn(params.detail);\n/**\n * This class copy the behavior of Node.js EventEmitter class.\n * It is used to provide the same interface for the browser environment.\n */ class EventEmitterAtBrowser extends EventTarget {\n    constructor(){\n        super(...arguments);\n        this._listeners = {};\n        this.maxListeners = Number.MAX_SAFE_INTEGER;\n    }\n    on(eventName, fn) {\n        this.addEventListener(eventName, fn);\n        return this;\n    }\n    once(eventName, fn) {\n        const onceCallback = (params)=>__awaiter(this, void 0, void 0, function*() {\n                this.off(eventName, onceCallback);\n                yield fn(params);\n            });\n        return this.on(eventName, onceCallback);\n    }\n    off(eventName, fn) {\n        this.removeEventListener(eventName, fn);\n        return this;\n    }\n    emit(eventName, params) {\n        const event = new CustomEvent(eventName, {\n            detail: params\n        });\n        return super.dispatchEvent(event);\n    }\n    listenerCount(eventName) {\n        const eventListeners = this._listeners[eventName];\n        return eventListeners ? eventListeners.length : 0;\n    }\n    listeners(eventName) {\n        return this._listeners[eventName].map((value)=>value[0]) || [];\n    }\n    eventNames() {\n        return Object.keys(this._listeners);\n    }\n    removeAllListeners() {\n        Object.keys(this._listeners).forEach((event)=>{\n            this._listeners[event].forEach((listener)=>{\n                super.removeEventListener(event, listener[1]);\n            });\n        });\n        this._listeners = {};\n        return this;\n    }\n    setMaxListeners(maxListeners) {\n        this.maxListeners = maxListeners;\n        return this;\n    }\n    getMaxListeners() {\n        return this.maxListeners;\n    }\n    addEventListener(eventName, fn) {\n        const wrappedFn = wrapFunction(fn);\n        super.addEventListener(eventName, wrappedFn);\n        if (!this._listeners[eventName]) {\n            this._listeners[eventName] = [];\n        }\n        this._listeners[eventName].push([\n            fn,\n            wrappedFn\n        ]);\n    }\n    removeEventListener(eventName, fn) {\n        const eventListeners = this._listeners[eventName];\n        if (eventListeners) {\n            const index = eventListeners.findIndex((item)=>item[0] === fn);\n            if (index !== -1) {\n                super.removeEventListener(eventName, eventListeners[index][1]);\n                eventListeners.splice(index, 1);\n            }\n        }\n    }\n}\n// eslint-disable-next-line import/no-mutable-exports\nlet EventEmitterType;\n// Check if the code is running in a Node.js environment\nif (true) {\n    EventEmitterType = events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter;\n} else {}\nclass EventEmitter extends EventEmitterType {\n} //# sourceMappingURL=event_emitter.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy11dGlscy9saWIvZXNtL2V2ZW50X2VtaXR0ZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTs7Ozs7Ozs7Ozs7Ozs7O0FBZUEsR0FDQSx1Q0FBdUMsR0FDdkMsSUFBSUEsWUFBWSxTQUFLLElBQUksU0FBSSxDQUFDQSxTQUFTLElBQUssU0FBVUMsT0FBTyxFQUFFQyxVQUFVLEVBQUVDLENBQUMsRUFBRUMsU0FBUztJQUNuRixTQUFTQyxNQUFNQyxLQUFLO1FBQUksT0FBT0EsaUJBQWlCSCxJQUFJRyxRQUFRLElBQUlILEVBQUUsU0FBVUksT0FBTztZQUFJQSxRQUFRRDtRQUFRO0lBQUk7SUFDM0csT0FBTyxJQUFLSCxDQUFBQSxLQUFNQSxDQUFBQSxJQUFJSyxPQUFNLENBQUMsRUFBRyxTQUFVRCxPQUFPLEVBQUVFLE1BQU07UUFDckQsU0FBU0MsVUFBVUosS0FBSztZQUFJLElBQUk7Z0JBQUVLLEtBQUtQLFVBQVVRLElBQUksQ0FBQ047WUFBUyxFQUFFLE9BQU9PLEdBQUc7Z0JBQUVKLE9BQU9JO1lBQUk7UUFBRTtRQUMxRixTQUFTQyxTQUFTUixLQUFLO1lBQUksSUFBSTtnQkFBRUssS0FBS1AsU0FBUyxDQUFDLFFBQVEsQ0FBQ0U7WUFBUyxFQUFFLE9BQU9PLEdBQUc7Z0JBQUVKLE9BQU9JO1lBQUk7UUFBRTtRQUM3RixTQUFTRixLQUFLSSxNQUFNO1lBQUlBLE9BQU9DLElBQUksR0FBR1QsUUFBUVEsT0FBT1QsS0FBSyxJQUFJRCxNQUFNVSxPQUFPVCxLQUFLLEVBQUVXLElBQUksQ0FBQ1AsV0FBV0k7UUFBVztRQUM3R0gsS0FBSyxDQUFDUCxZQUFZQSxVQUFVYyxLQUFLLENBQUNqQixTQUFTQyxjQUFjLEVBQUUsR0FBR1UsSUFBSTtJQUN0RTtBQUNKO0FBQzREO0FBQzVELE1BQU1TLGVBQWUsQ0FBQ0MsS0FBTyxDQUFDQyxTQUFXRCxHQUFHQyxPQUFPQyxNQUFNO0FBQ3pEOzs7Q0FHQyxHQUNELE1BQU1DLDhC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QzdEZCxlQUFlaUIsTUFBTSxDQUFDSCxPQUFPO1lBQ2pDO1FBQ0o7SUFDSjtBQUNKO0FBQ0EscURBQXFEO0FBQ3JELElBQUlJO0FBQ0osd0RBQXdEO0FBQ3hELElBQUksSUFBa0IsRUFBYTtJQUMvQkEsbUJBQW1CM0MsZ0RBQWtCQTtBQUN6QyxPQUNLLEVBR0o7QUFDTSxNQUFNRCxxQkFBcUI0QztBQUNsQyxFQUNBLHlDQUF5QyIsInNvdXJjZXMiOlsid2VicGFjazovL2Zyb250ZW5kLy4vbm9kZV9tb2R1bGVzL3dlYjMtdXRpbHMvbGliL2VzbS9ldmVudF9lbWl0dGVyLmpzP2QwMjUiXSwic291cmNlc0NvbnRlbnQiOlsiLypcblRoaXMgZmlsZSBpcyBwYXJ0IG9mIHdlYjMuanMuXG5cbndlYjMuanMgaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeVxuaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5XG50aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBlaXRoZXIgdmVyc2lvbiAzIG9mIHRoZSBMaWNlbnNlLCBvclxuKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi5cblxud2ViMy5qcyBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLFxuYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2Zcbk1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGVcbkdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLlxuXG5Zb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2VcbmFsb25nIHdpdGggd2ViMy5qcy4gIElmIG5vdCwgc2VlIDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi5cbiovXG4vKiBlc2xpbnQtZGlzYWJsZSBtYXgtY2xhc3Nlcy1wZXItZmlsZSAqL1xudmFyIF9fYXdhaXRlciA9ICh0aGlzICYmIHRoaXMuX19hd2FpdGVyKSB8fCBmdW5jdGlvbiAodGhpc0FyZywgX2FyZ3VtZW50cywgUCwgZ2VuZXJhdG9yKSB7XG4gICAgZnVuY3Rpb24gYWRvcHQodmFsdWUpIHsgcmV0dXJuIHZhbHVlIGluc3RhbmNlb2YgUCA/IHZhbHVlIDogbmV3IFAoZnVuY3Rpb24gKHJlc29sdmUpIHsgcmVzb2x2ZSh2YWx1ZSk7IH0pOyB9XG4gICAgcmV0dXJuIG5ldyAoUCB8fCAoUCA9IFByb21pc2UpKShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICAgIGZ1bmN0aW9uIGZ1bGZpbGxlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvci5uZXh0KHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gcmVqZWN0ZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3JbXCJ0aHJvd1wiXSh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHN0ZXAocmVzdWx0KSB7IHJlc3VsdC5kb25lID8gcmVzb2x2ZShyZXN1bHQudmFsdWUpIDogYWRvcHQocmVzdWx0LnZhbHVlKS50aGVuKGZ1bGZpbGxlZCwgcmVqZWN0ZWQpOyB9XG4gICAgICAgIHN0ZXAoKGdlbmVyYXRvciA9IGdlbmVyYXRvci5hcHBseSh0aGlzQXJnLCBfYXJndW1lbnRzIHx8IFtdKSkubmV4dCgpKTtcbiAgICB9KTtcbn07XG5pbXBvcnQgeyBFdmVudEVtaXR0ZXIgYXMgRXZlbnRFbWl0dGVyQXROb2RlIH0gZnJvbSAnZXZlbnRzJztcbmNvbnN0IHdyYXBGdW5jdGlvbiA9IChmbikgPT4gKHBhcmFtcykgPT4gZm4ocGFyYW1zLmRldGFpbCk7XG4vKipcbiAqIFRoaXMgY2xhc3MgY29weSB0aGUgYmVoYXZpb3Igb2YgTm9kZS5qcyBFdmVudEVtaXR0ZXIgY2xhc3MuXG4gKiBJdCBpcyB1c2VkIHRvIHByb3ZpZGUgdGhlIHNhbWUgaW50ZXJmYWNlIGZvciB0aGUgYnJvd3NlciBlbnZpcm9ubWVudC5cbiAqL1xuY2xhc3MgRXZlbnRFbWl0dGVyQXRCcm93c2VyIGV4dGVuZHMgRXZlbnRUYXJnZXQge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlciguLi5hcmd1bWVudHMpO1xuICAgICAgICB0aGlzLl9saXN0ZW5lcnMgPSB7fTtcbiAgICAgICAgdGhpcy5tYXhMaXN0ZW5lcnMgPSBOdW1iZXIuTUFYX1NBRkVfSU5URUdFUjtcbiAgICB9XG4gICAgb24oZXZlbnROYW1lLCBmbikge1xuICAgICAgICB0aGlzLmFkZEV2ZW50TGlzdGVuZXIoZXZlbnROYW1lLCBmbik7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgICBvbmNlKGV2ZW50TmFtZSwgZm4pIHtcbiAgICAgICAgY29uc3Qgb25jZUNhbGxiYWNrID0gKHBhcmFtcykgPT4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgdGhpcy5vZmYoZXZlbnROYW1lLCBvbmNlQ2FsbGJhY2spO1xuICAgICAgICAgICAgeWllbGQgZm4ocGFyYW1zKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiB0aGlzLm9uKGV2ZW50TmFtZSwgb25jZUNhbGxiYWNrKTtcbiAgICB9XG4gICAgb2ZmKGV2ZW50TmFtZSwgZm4pIHtcbiAgICAgICAgdGhpcy5yZW1vdmVFdmVudExpc3RlbmVyKGV2ZW50TmFtZSwgZm4pO1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgZW1pdChldmVudE5hbWUsIHBhcmFtcykge1xuICAgICAgICBjb25zdCBldmVudCA9IG5ldyBDdXN0b21FdmVudChldmVudE5hbWUsIHsgZGV0YWlsOiBwYXJhbXMgfSk7XG4gICAgICAgIHJldHVybiBzdXBlci5kaXNwYXRjaEV2ZW50KGV2ZW50KTtcbiAgICB9XG4gICAgbGlzdGVuZXJDb3VudChldmVudE5hbWUpIHtcbiAgICAgICAgY29uc3QgZXZlbnRMaXN0ZW5lcnMgPSB0aGlzLl9saXN0ZW5lcnNbZXZlbnROYW1lXTtcbiAgICAgICAgcmV0dXJuIGV2ZW50TGlzdGVuZXJzID8gZXZlbnRMaXN0ZW5lcnMubGVuZ3RoIDogMDtcbiAgICB9XG4gICAgbGlzdGVuZXJzKGV2ZW50TmFtZSkge1xuICAgICAgICByZXR1cm4gdGhpcy5fbGlzdGVuZXJzW2V2ZW50TmFtZV0ubWFwKHZhbHVlID0+IHZhbHVlWzBdKSB8fCBbXTtcbiAgICB9XG4gICAgZXZlbnROYW1lcygpIHtcbiAgICAgICAgcmV0dXJuIE9iamVjdC5rZXlzKHRoaXMuX2xpc3RlbmVycyk7XG4gICAgfVxuICAgIHJlbW92ZUFsbExpc3RlbmVycygpIHtcbiAgICAgICAgT2JqZWN0LmtleXModGhpcy5fbGlzdGVuZXJzKS5mb3JFYWNoKGV2ZW50ID0+IHtcbiAgICAgICAgICAgIHRoaXMuX2xpc3RlbmVyc1tldmVudF0uZm9yRWFjaCgobGlzdGVuZXIpID0+IHtcbiAgICAgICAgICAgICAgICBzdXBlci5yZW1vdmVFdmVudExpc3RlbmVyKGV2ZW50LCBsaXN0ZW5lclsxXSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMuX2xpc3RlbmVycyA9IHt9O1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgc2V0TWF4TGlzdGVuZXJzKG1heExpc3RlbmVycykge1xuICAgICAgICB0aGlzLm1heExpc3RlbmVycyA9IG1heExpc3RlbmVycztcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIGdldE1heExpc3RlbmVycygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMubWF4TGlzdGVuZXJzO1xuICAgIH1cbiAgICBhZGRFdmVudExpc3RlbmVyKGV2ZW50TmFtZSwgZm4pIHtcbiAgICAgICAgY29uc3Qgd3JhcHBlZEZuID0gd3JhcEZ1bmN0aW9uKGZuKTtcbiAgICAgICAgc3VwZXIuYWRkRXZlbnRMaXN0ZW5lcihldmVudE5hbWUsIHdyYXBwZWRGbik7XG4gICAgICAgIGlmICghdGhpcy5fbGlzdGVuZXJzW2V2ZW50TmFtZV0pIHtcbiAgICAgICAgICAgIHRoaXMuX2xpc3RlbmVyc1tldmVudE5hbWVdID0gW107XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5fbGlzdGVuZXJzW2V2ZW50TmFtZV0ucHVzaChbZm4sIHdyYXBwZWRGbl0pO1xuICAgIH1cbiAgICByZW1vdmVFdmVudExpc3RlbmVyKGV2ZW50TmFtZSwgZm4pIHtcbiAgICAgICAgY29uc3QgZXZlbnRMaXN0ZW5lcnMgPSB0aGlzLl9saXN0ZW5lcnNbZXZlbnROYW1lXTtcbiAgICAgICAgaWYgKGV2ZW50TGlzdGVuZXJzKSB7XG4gICAgICAgICAgICBjb25zdCBpbmRleCA9IGV2ZW50TGlzdGVuZXJzLmZpbmRJbmRleChpdGVtID0+IGl0ZW1bMF0gPT09IGZuKTtcbiAgICAgICAgICAgIGlmIChpbmRleCAhPT0gLTEpIHtcbiAgICAgICAgICAgICAgICBzdXBlci5yZW1vdmVFdmVudExpc3RlbmVyKGV2ZW50TmFtZSwgZXZlbnRMaXN0ZW5lcnNbaW5kZXhdWzFdKTtcbiAgICAgICAgICAgICAgICBldmVudExpc3RlbmVycy5zcGxpY2UoaW5kZXgsIDEpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufVxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGltcG9ydC9uby1tdXRhYmxlLWV4cG9ydHNcbmxldCBFdmVudEVtaXR0ZXJUeXBlO1xuLy8gQ2hlY2sgaWYgdGhlIGNvZGUgaXMgcnVubmluZyBpbiBhIE5vZGUuanMgZW52aXJvbm1lbnRcbmlmICh0eXBlb2Ygd2luZG93ID09PSAndW5kZWZpbmVkJykge1xuICAgIEV2ZW50RW1pdHRlclR5cGUgPSBFdmVudEVtaXR0ZXJBdE5vZGU7XG59XG5lbHNlIHtcbiAgICAvLyBGYWxsYmFjayBmb3IgdGhlIGJyb3dzZXIgZW52aXJvbm1lbnRcbiAgICBFdmVudEVtaXR0ZXJUeXBlID0gRXZlbnRFbWl0dGVyQXRCcm93c2VyO1xufVxuZXhwb3J0IGNsYXNzIEV2ZW50RW1pdHRlciBleHRlbmRzIEV2ZW50RW1pdHRlclR5cGUge1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZXZlbnRfZW1pdHRlci5qcy5tYXAiXSwibmFtZXMiOlsiX19hd2FpdGVyIiwidGhpc0FyZyIsIl9hcmd1bWVudHMiLCJQIiwiZ2VuZXJhdG9yIiwiYWRvcHQiLCJ2YWx1ZSIsInJlc29sdmUiLCJQcm9taXNlIiwicmVqZWN0IiwiZnVsZmlsbGVkIiwic3RlcCIsIm5leHQiLCJlIiwicmVqZWN0ZWQiLCJyZXN1bHQiLCJkb25lIiwidGhlbiIsImFwcGx5IiwiRXZlbnRFbWl0dGVyIiwiRXZlbnRFbWl0dGVyQXROb2RlIiwid3JhcEZ1bmN0aW9uIiwiZm4iLCJwYXJhbXMiLCJkZXRhaWwiLCJFdmVudEVtaXR0ZXJBdEJyb3dzZXIiLCJFdmVudFRhcmdldCIsImNvbnN0cnVjdG9yIiwiYXJndW1lbnRzIiwiX2xpc3RlbmVycyIsIm1heExpc3RlbmVycyIsIk51bWJlciIsIk1BWF9TQUZFX0lOVEVHRVIiLCJvbiIsImV2ZW50TmFtZSIsImFkZEV2ZW50TGlzdGVuZXIiLCJvbmNlIiwib25jZUNhbGxiYWNrIiwib2ZmIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsImVtaXQiLCJldmVudCIsIkN1c3RvbUV2ZW50IiwiZGlzcGF0Y2hFdmVudCIsImxpc3RlbmVyQ291bnQiLCJldmVudExpc3RlbmVycyIsImxlbmd0aCIsImxpc3RlbmVycyIsIm1hcCIsImV2ZW50TmFtZXMiLCJPYmplY3QiLCJrZXlzIiwicmVtb3ZlQWxsTGlzdGVuZXJzIiwiZm9yRWFjaCIsImxpc3RlbmVyIiwic2V0TWF4TGlzdGVuZXJzIiwiZ2V0TWF4TGlzdGVuZXJzIiwid3JhcHBlZEZuIiwicHVzaCIsImluZGV4IiwiZmluZEluZGV4IiwiaXRlbSIsInNwbGljZSIsIkV2ZW50RW1pdHRlclR5cGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-utils/lib/esm/event_emitter.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-utils/lib/esm/formatter.js":
/*!******************************************************!*\
  !*** ./node_modules/web3-utils/lib/esm/formatter.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   convert: () => (/* binding */ convert),\n/* harmony export */   convertScalarValue: () => (/* binding */ convertScalarValue),\n/* harmony export */   format: () => (/* binding */ format),\n/* harmony export */   isDataFormat: () => (/* binding */ isDataFormat)\n/* harmony export */ });\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-errors */ \"(ssr)/./node_modules/web3-errors/lib/esm/index.js\");\n/* harmony import */ var web3_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-types */ \"(ssr)/./node_modules/web3-types/lib/esm/index.js\");\n/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-validator */ \"(ssr)/./node_modules/web3-validator/lib/esm/index.js\");\n/* harmony import */ var _converters_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./converters.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/converters.js\");\n/* harmony import */ var _objects_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./objects.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/objects.js\");\n/* harmony import */ var _string_manipulation_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./string_manipulation.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/string_manipulation.js\");\n/* harmony import */ var _uint8array_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./uint8array.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/uint8array.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ \n\n\n\n\n\n\nconst { parseBaseType } = web3_validator__WEBPACK_IMPORTED_MODULE_2__.utils;\nconst isDataFormat = (dataFormat)=>typeof dataFormat === \"object\" && !(0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isNullish)(dataFormat) && \"number\" in dataFormat && \"bytes\" in dataFormat;\n/**\n * Finds the schema that corresponds to a specific data path within a larger JSON schema.\n * It works by iterating over the dataPath array and traversing the JSON schema one step at a time until it reaches the end of the path.\n *\n * @param schema - represents a JSON schema, which is an object that describes the structure of JSON data\n * @param dataPath - represents an array of strings that specifies the path to the data within the JSON schema\n * @param oneOfPath - represents an optional array of two-element tuples that specifies the \"oneOf\" option to choose, if the schema has oneOf and the data path can match multiple subschemas\n * @returns the JSON schema that matches the data path\n *\n */ const findSchemaByDataPath = (schema, dataPath, oneOfPath = [])=>{\n    let result = Object.assign({}, schema);\n    let previousDataPath;\n    for (const dataPart of dataPath){\n        if (result.oneOf && previousDataPath) {\n            const path = oneOfPath.find(function(element) {\n                return this === element[0];\n            }, previousDataPath !== null && previousDataPath !== void 0 ? previousDataPath : \"\");\n            if (path && path[0] === previousDataPath) {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access\n                result = result.oneOf[path[1]];\n            }\n        }\n        if (!result.properties && !result.items) {\n            return undefined;\n        }\n        if (result.properties) {\n            result = result.properties[dataPart];\n        } else if (result.items && result.items.properties) {\n            const node = result.items.properties;\n            if (!node) {\n                return undefined;\n            }\n            result = node[dataPart];\n        } else if (result.items && (0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isObject)(result.items)) {\n            result = result.items;\n        } else if (result.items && Array.isArray(result.items)) {\n            result = result.items[parseInt(dataPart, 10)];\n        }\n        if (result && dataPart) previousDataPath = dataPart;\n    }\n    return result;\n};\n/**\n * Converts a value depending on the format\n * @param value - value to convert\n * @param ethType - The type of the value to be parsed\n * @param format - The format to be converted to\n * @returns - The value converted to the specified format\n */ const convertScalarValue = (value, ethType, format)=>{\n    try {\n        const { baseType, baseTypeSize } = parseBaseType(ethType);\n        if (baseType === \"int\" || baseType === \"uint\") {\n            switch(format.number){\n                case web3_types__WEBPACK_IMPORTED_MODULE_1__.FMT_NUMBER.NUMBER:\n                    return Number((0,_converters_js__WEBPACK_IMPORTED_MODULE_3__.toBigInt)(value));\n                case web3_types__WEBPACK_IMPORTED_MODULE_1__.FMT_NUMBER.HEX:\n                    return (0,_converters_js__WEBPACK_IMPORTED_MODULE_3__.numberToHex)((0,_converters_js__WEBPACK_IMPORTED_MODULE_3__.toBigInt)(value));\n                case web3_types__WEBPACK_IMPORTED_MODULE_1__.FMT_NUMBER.STR:\n                    return (0,_converters_js__WEBPACK_IMPORTED_MODULE_3__.toBigInt)(value).toString();\n                case web3_types__WEBPACK_IMPORTED_MODULE_1__.FMT_NUMBER.BIGINT:\n                    return (0,_converters_js__WEBPACK_IMPORTED_MODULE_3__.toBigInt)(value);\n                default:\n                    throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.FormatterError(`Invalid format: ${String(format.number)}`);\n            }\n        }\n        if (baseType === \"bytes\") {\n            let paddedValue;\n            if (baseTypeSize) {\n                if (typeof value === \"string\") paddedValue = (0,_string_manipulation_js__WEBPACK_IMPORTED_MODULE_5__.padLeft)(value, baseTypeSize * 2);\n                else if (value instanceof Uint8Array) {\n                    paddedValue = (0,_uint8array_js__WEBPACK_IMPORTED_MODULE_6__.uint8ArrayConcat)(new Uint8Array(baseTypeSize - value.length), value);\n                }\n            } else {\n                paddedValue = value;\n            }\n            switch(format.bytes){\n                case web3_types__WEBPACK_IMPORTED_MODULE_1__.FMT_BYTES.HEX:\n                    return (0,_converters_js__WEBPACK_IMPORTED_MODULE_3__.bytesToHex)((0,_converters_js__WEBPACK_IMPORTED_MODULE_3__.bytesToUint8Array)(paddedValue));\n                case web3_types__WEBPACK_IMPORTED_MODULE_1__.FMT_BYTES.UINT8ARRAY:\n                    return (0,_converters_js__WEBPACK_IMPORTED_MODULE_3__.bytesToUint8Array)(paddedValue);\n                default:\n                    throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.FormatterError(`Invalid format: ${String(format.bytes)}`);\n            }\n        }\n    } catch (error) {\n        // If someone didn't use `eth` keyword we can return original value\n        // as the scope of this code is formatting not validation\n        return value;\n    }\n    return value;\n};\n/**\n * Converts the data to the specified format\n * @param data - data to convert\n * @param schema - The JSON schema that describes the structure of the data\n * @param dataPath - A string array that specifies the path to the data within the JSON schema\n * @param format  - The format to be converted to\n * @param oneOfPath - An optional array of two-element tuples that specifies the \"oneOf\" option to choose, if the schema has oneOf and the data path can match multiple subschemas\n * @returns - The data converted to the specified format\n */ const convert = (data, schema, dataPath, format, oneOfPath = [])=>{\n    var _a, _b;\n    // If it's a scalar value\n    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isObject)(data) && !Array.isArray(data)) {\n        return convertScalarValue(data, schema === null || schema === void 0 ? void 0 : schema.format, format);\n    }\n    const object = data;\n    for (const [key, value] of Object.entries(object)){\n        dataPath.push(key);\n        const schemaProp = findSchemaByDataPath(schema, dataPath, oneOfPath);\n        // If value is a scaler value\n        if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isNullish)(schemaProp)) {\n            delete object[key];\n            dataPath.pop();\n            continue;\n        }\n        // If value is an object, recurse into it\n        if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isObject)(value)) {\n            convert(value, schema, dataPath, format);\n            dataPath.pop();\n            continue;\n        }\n        // If value is an array\n        if (Array.isArray(value)) {\n            let _schemaProp = schemaProp;\n            // TODO This is a naive approach to solving the issue of\n            // a schema using oneOf. This chunk of code was intended to handle\n            // BlockSchema.transactions\n            // TODO BlockSchema.transactions are not being formatted\n            if ((schemaProp === null || schemaProp === void 0 ? void 0 : schemaProp.oneOf) !== undefined) {\n                // The following code is basically saying:\n                // if the schema specifies oneOf, then we are to loop\n                // over each possible schema and check if they type of the schema\n                // matches the type of value[0], and if so we use the oneOfSchemaProp\n                // as the schema for formatting\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\n                schemaProp.oneOf.forEach((oneOfSchemaProp, index)=>{\n                    var _a, _b;\n                    if (!Array.isArray(schemaProp === null || schemaProp === void 0 ? void 0 : schemaProp.items) && (typeof value[0] === \"object\" && ((_a = oneOfSchemaProp === null || oneOfSchemaProp === void 0 ? void 0 : oneOfSchemaProp.items) === null || _a === void 0 ? void 0 : _a.type) === \"object\" || typeof value[0] === \"string\" && ((_b = oneOfSchemaProp === null || oneOfSchemaProp === void 0 ? void 0 : oneOfSchemaProp.items) === null || _b === void 0 ? void 0 : _b.type) !== \"object\")) {\n                        _schemaProp = oneOfSchemaProp;\n                        oneOfPath.push([\n                            key,\n                            index\n                        ]);\n                    }\n                });\n            }\n            if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isNullish)(_schemaProp === null || _schemaProp === void 0 ? void 0 : _schemaProp.items)) {\n                // Can not find schema for array item, delete that item\n                delete object[key];\n                dataPath.pop();\n                continue;\n            }\n            // If schema for array items is a single type\n            if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isObject)(_schemaProp.items) && !(0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isNullish)(_schemaProp.items.format)) {\n                for(let i = 0; i < value.length; i += 1){\n                    object[key][i] = convertScalarValue(value[i], // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n                    (_a = _schemaProp === null || _schemaProp === void 0 ? void 0 : _schemaProp.items) === null || _a === void 0 ? void 0 : _a.format, format);\n                }\n                dataPath.pop();\n                continue;\n            }\n            // If schema for array items is an object\n            if (!Array.isArray(_schemaProp === null || _schemaProp === void 0 ? void 0 : _schemaProp.items) && ((_b = _schemaProp === null || _schemaProp === void 0 ? void 0 : _schemaProp.items) === null || _b === void 0 ? void 0 : _b.type) === \"object\") {\n                for (const arrObject of value){\n                    convert(arrObject, schema, dataPath, format, oneOfPath);\n                }\n                dataPath.pop();\n                continue;\n            }\n            // If schema for array is a tuple\n            if (Array.isArray(_schemaProp === null || _schemaProp === void 0 ? void 0 : _schemaProp.items)) {\n                for(let i = 0; i < value.length; i += 1){\n                    object[key][i] = convertScalarValue(value[i], _schemaProp.items[i].format, format);\n                }\n                dataPath.pop();\n                continue;\n            }\n        }\n        object[key] = convertScalarValue(value, schemaProp.format, format);\n        dataPath.pop();\n    }\n    return object;\n};\nconst format = (schema, data, returnFormat)=>{\n    let dataToParse;\n    if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isObject)(data)) {\n        dataToParse = (0,_objects_js__WEBPACK_IMPORTED_MODULE_4__.mergeDeep)({}, data);\n    } else if (Array.isArray(data)) {\n        dataToParse = [\n            ...data\n        ];\n    } else {\n        dataToParse = data;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    const jsonSchema = (0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isObject)(schema) ? schema : web3_validator__WEBPACK_IMPORTED_MODULE_2__.utils.ethAbiToJsonSchema(schema);\n    if (!jsonSchema.properties && !jsonSchema.items && !jsonSchema.format) {\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.FormatterError(\"Invalid json schema for formatting\");\n    }\n    return convert(dataToParse, jsonSchema, [], returnFormat);\n}; //# sourceMappingURL=formatter.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-utils/lib/esm/formatter.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-utils/lib/esm/hash.js":
/*!*************************************************!*\
  !*** ./node_modules/web3-utils/lib/esm/hash.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   encodePacked: () => (/* binding */ encodePacked),\n/* harmony export */   getStorageSlotNumForLongString: () => (/* binding */ getStorageSlotNumForLongString),\n/* harmony export */   keccak256: () => (/* binding */ keccak256Wrapper),\n/* harmony export */   keccak256Wrapper: () => (/* binding */ keccak256Wrapper),\n/* harmony export */   processSolidityEncodePackedArgs: () => (/* binding */ processSolidityEncodePackedArgs),\n/* harmony export */   sha3: () => (/* binding */ sha3),\n/* harmony export */   sha3Raw: () => (/* binding */ sha3Raw),\n/* harmony export */   soliditySha3: () => (/* binding */ soliditySha3),\n/* harmony export */   soliditySha3Raw: () => (/* binding */ soliditySha3Raw)\n/* harmony export */ });\n/* harmony import */ var ethereum_cryptography_keccak_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ethereum-cryptography/keccak.js */ \"(ssr)/./node_modules/ethereum-cryptography/esm/keccak.js\");\n/* harmony import */ var ethereum_cryptography_utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ethereum-cryptography/utils.js */ \"(ssr)/./node_modules/ethereum-cryptography/esm/utils.js\");\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-errors */ \"(ssr)/./node_modules/web3-errors/lib/esm/index.js\");\n/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! web3-validator */ \"(ssr)/./node_modules/web3-validator/lib/esm/index.js\");\n/* harmony import */ var _converters_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./converters.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/converters.js\");\n/* harmony import */ var _string_manipulation_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./string_manipulation.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/string_manipulation.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ /**\n * @module Utils\n */ \n\n\n\n\n\nconst SHA3_EMPTY_BYTES = \"0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470\";\n/**\n * computes the Keccak-256 hash of the input and returns a hexstring\n * @param data - the input to hash\n * @returns - the Keccak-256 hash of the input\n *\n * @example\n * ```ts\n * console.log(web3.utils.sha3('web3.js'));\n * > 0x63667efb1961039c9bb0d6ea7a5abdd223a3aca7daa5044ad894226e1f83919a\n *\n * console.log(web3.utils.sha3(''));\n * > undefined\n * ```\n */ const sha3 = (data)=>{\n    let updatedData;\n    if (typeof data === \"string\") {\n        if (data.startsWith(\"0x\") && (0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isHexStrict)(data)) {\n            updatedData = (0,_converters_js__WEBPACK_IMPORTED_MODULE_4__.hexToBytes)(data);\n        } else {\n            updatedData = (0,ethereum_cryptography_utils_js__WEBPACK_IMPORTED_MODULE_1__.utf8ToBytes)(data);\n        }\n    } else {\n        updatedData = data;\n    }\n    const hash = (0,_converters_js__WEBPACK_IMPORTED_MODULE_4__.bytesToHex)((0,ethereum_cryptography_keccak_js__WEBPACK_IMPORTED_MODULE_0__.keccak256)(updatedData));\n    // EIP-1052 if hash is equal to c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470, keccak was given empty data\n    return hash === SHA3_EMPTY_BYTES ? undefined : hash;\n};\n/**\n * Will calculate the sha3 of the input but does return the hash value instead of null if for example a empty string is passed.\n * @param data - the input to hash\n * @returns - the Keccak-256 hash of the input\n *\n * @example\n * ```ts\n * conosle.log(web3.utils.sha3Raw('web3.js'));\n * > 0x63667efb1961039c9bb0d6ea7a5abdd223a3aca7daa5044ad894226e1f83919a\n *\n * console.log(web3.utils.sha3Raw(''));\n * > 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470\n * ```\n */ const sha3Raw = (data)=>{\n    const hash = sha3(data);\n    if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isNullish)(hash)) {\n        return SHA3_EMPTY_BYTES;\n    }\n    return hash;\n};\n/**\n * A wrapper for ethereum-cryptography/keccak256 to allow hashing a `string` and a `bigint` in addition to `UInt8Array`\n * @param data - the input to hash\n * @returns - the Keccak-256 hash of the input\n *\n * @example\n * ```ts\n * console.log(web3.utils.keccak256Wrapper('web3.js'));\n * > 0x63667efb1961039c9bb0d6ea7a5abdd223a3aca7daa5044ad894226e1f83919a\n *\n * console.log(web3.utils.keccak256Wrapper(1));\n * > 0xc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6\n *\n * console.log(web3.utils.keccak256Wrapper(0xaf12fd));\n * > 0x358640fd4719fa923525d74ab5ae80a594301aba5543e3492b052bf4598b794c\n * ```\n */ const keccak256Wrapper = (data)=>{\n    let processedData;\n    if (typeof data === \"bigint\" || typeof data === \"number\") {\n        processedData = (0,ethereum_cryptography_utils_js__WEBPACK_IMPORTED_MODULE_1__.utf8ToBytes)(data.toString());\n    } else if (Array.isArray(data)) {\n        processedData = new Uint8Array(data);\n    } else if (typeof data === \"string\" && !(0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isHexStrict)(data)) {\n        processedData = (0,ethereum_cryptography_utils_js__WEBPACK_IMPORTED_MODULE_1__.utf8ToBytes)(data);\n    } else {\n        processedData = (0,_converters_js__WEBPACK_IMPORTED_MODULE_4__.bytesToUint8Array)(data);\n    }\n    return (0,_converters_js__WEBPACK_IMPORTED_MODULE_4__.bytesToHex)((0,ethereum_cryptography_keccak_js__WEBPACK_IMPORTED_MODULE_0__.keccak256)(processedData));\n};\n\n/**\n * returns type and value\n * @param arg - the input to return the type and value\n * @returns - the type and value of the input\n */ const getType = (arg)=>{\n    if (Array.isArray(arg)) {\n        throw new Error(\"Autodetection of array types is not supported.\");\n    }\n    let type;\n    let value;\n    // if type is given\n    if (typeof arg === \"object\" && (\"t\" in arg || \"type\" in arg) && (\"v\" in arg || \"value\" in arg)) {\n        type = \"t\" in arg ? arg.t : arg.type;\n        value = \"v\" in arg ? arg.v : arg.value;\n        type = type.toLowerCase() === \"bigint\" ? \"int\" : type;\n    } else if (typeof arg === \"bigint\") {\n        return [\n            \"int\",\n            arg\n        ];\n    } else {\n        type = (0,_converters_js__WEBPACK_IMPORTED_MODULE_4__.toHex)(arg, true);\n        value = (0,_converters_js__WEBPACK_IMPORTED_MODULE_4__.toHex)(arg);\n        if (!type.startsWith(\"int\") && !type.startsWith(\"uint\")) {\n            type = \"bytes\";\n        }\n    }\n    if ((type.startsWith(\"int\") || type.startsWith(\"uint\")) && typeof value === \"string\" && !/^(-)?0x/i.test(value)) {\n        value = (0,_converters_js__WEBPACK_IMPORTED_MODULE_4__.toBigInt)(value);\n    }\n    return [\n        type,\n        value\n    ];\n};\n/**\n * returns the type with size if uint or int\n * @param name - the input to return the type with size\n * @returns - the type with size of the input\n */ const elementaryName = (name)=>{\n    if (name.startsWith(\"int[\")) {\n        return `int256${name.slice(3)}`;\n    }\n    if (name === \"int\") {\n        return \"int256\";\n    }\n    if (name.startsWith(\"uint[\")) {\n        return `uint256'${name.slice(4)}`;\n    }\n    if (name === \"uint\") {\n        return \"uint256\";\n    }\n    return name;\n};\n/**\n * returns the size of the value of type 'byte'\n */ const parseTypeN = (value, typeLength)=>{\n    const typesize = /^(\\d+).*$/.exec(value.slice(typeLength));\n    return typesize ? parseInt(typesize[1], 10) : 0;\n};\n/**\n * returns the bit length of the value\n * @param value - the input to return the bit length\n * @returns - the bit length of the input\n */ const bitLength = (value)=>{\n    const updatedVal = value.toString(2);\n    return updatedVal.length;\n};\n/**\n * Pads the value based on size and type\n * returns a string of the padded value\n * @param type - the input to pad\n * @returns = the padded value\n */ const solidityPack = (type, val)=>{\n    const value = val.toString();\n    if (type === \"string\") {\n        if (typeof val === \"string\") return (0,_converters_js__WEBPACK_IMPORTED_MODULE_4__.utf8ToHex)(val);\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.InvalidStringError(val);\n    }\n    if (type === \"bool\" || type === \"boolean\") {\n        if (typeof val === \"boolean\") return val ? \"01\" : \"00\";\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.InvalidBooleanError(val);\n    }\n    if (type === \"address\") {\n        if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isAddress)(value)) {\n            throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.InvalidAddressError(value);\n        }\n        return value;\n    }\n    const name = elementaryName(type);\n    if (type.startsWith(\"uint\")) {\n        const size = parseTypeN(name, \"uint\".length);\n        if (size % 8 || size < 8 || size > 256) {\n            throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.InvalidSizeError(value);\n        }\n        const num = (0,_converters_js__WEBPACK_IMPORTED_MODULE_4__.toNumber)(value);\n        if (bitLength(num) > size) {\n            throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.InvalidLargeValueError(value);\n        }\n        if (num < BigInt(0)) {\n            throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.InvalidUnsignedIntegerError(value);\n        }\n        return size ? (0,_string_manipulation_js__WEBPACK_IMPORTED_MODULE_5__.leftPad)(num.toString(16), size / 8 * 2) : num.toString(16);\n    }\n    if (type.startsWith(\"int\")) {\n        const size = parseTypeN(name, \"int\".length);\n        if (size % 8 || size < 8 || size > 256) {\n            throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.InvalidSizeError(type);\n        }\n        const num = (0,_converters_js__WEBPACK_IMPORTED_MODULE_4__.toNumber)(value);\n        if (bitLength(num) > size) {\n            throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.InvalidLargeValueError(value);\n        }\n        if (num < BigInt(0)) {\n            return (0,_string_manipulation_js__WEBPACK_IMPORTED_MODULE_5__.toTwosComplement)(num.toString(), size / 8 * 2);\n        }\n        return size ? (0,_string_manipulation_js__WEBPACK_IMPORTED_MODULE_5__.leftPad)(num.toString(16), size / 4) : num.toString(16);\n    }\n    if (name === \"bytes\") {\n        if (value.replace(/^0x/i, \"\").length % 2 !== 0) {\n            throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.InvalidBytesError(value);\n        }\n        return value;\n    }\n    if (type.startsWith(\"bytes\")) {\n        if (value.replace(/^0x/i, \"\").length % 2 !== 0) {\n            throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.InvalidBytesError(value);\n        }\n        const size = parseTypeN(type, \"bytes\".length);\n        if (!size || size < 1 || size > 64 || size < value.replace(/^0x/i, \"\").length / 2) {\n            throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.InvalidBytesError(value);\n        }\n        return (0,_string_manipulation_js__WEBPACK_IMPORTED_MODULE_5__.rightPad)(value, size * 2);\n    }\n    return \"\";\n};\n/**\n * returns a string of the tightly packed value given based on the type\n * @param arg - the input to return the tightly packed value\n * @returns - the tightly packed value\n */ const processSolidityEncodePackedArgs = (arg)=>{\n    const [type, val] = getType(arg);\n    // array case\n    if (Array.isArray(val)) {\n        // go through each element of the array and use map function to create new hexarg list\n        const hexArg = val.map((v)=>solidityPack(type, v).replace(\"0x\", \"\"));\n        return hexArg.join(\"\");\n    }\n    const hexArg = solidityPack(type, val);\n    return hexArg.replace(\"0x\", \"\");\n};\n/**\n * Encode packed arguments to a hexstring\n */ const encodePacked = (...values)=>{\n    const hexArgs = values.map(processSolidityEncodePackedArgs);\n    return `0x${hexArgs.join(\"\").toLowerCase()}`;\n};\n/**\n * Will tightly pack values given in the same way solidity would then hash.\n * returns a hash string, or null if input is empty\n * @param values - the input to return the tightly packed values\n * @returns - the keccack246 of the tightly packed values\n *\n * @example\n * ```ts\n *  console.log([{ type: 'string', value: '31323334' }]);\n * console.log(web3.utils.soliditySha3({ type: \"string\", value: \"31323334\" }));\n * > 0xf15f8da2ad27e486d632dc37d24912f634398918d6f9913a0a0ff84e388be62b\n * ```\n */ const soliditySha3 = (...values)=>sha3(encodePacked(...values));\n/**\n * Will tightly pack values given in the same way solidity would then hash.\n * returns a hash string, if input is empty will return `0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470`\n * @param values - the input to return the tightly packed values\n * @returns - the keccack246 of the tightly packed values\n *\n * @example\n * ```ts\n * console.log(web3.utils.soliditySha3Raw({ type: \"string\", value: \"helloworld\" }))\n * > 0xfa26db7ca85ead399216e7c6316bc50ed24393c3122b582735e7f3b0f91b93f0\n * ```\n */ const soliditySha3Raw = (...values)=>sha3Raw(encodePacked(...values));\n/**\n * Get slot number for storage long string in contract. Basically for getStorage method\n * returns slotNumber where will data placed\n * @param mainSlotNumber - the slot number where will be stored hash of long string\n * @returns - the slot number where will be stored long string\n */ const getStorageSlotNumForLongString = (mainSlotNumber)=>sha3(`0x${(typeof mainSlotNumber === \"number\" ? mainSlotNumber.toString() : mainSlotNumber).padStart(64, \"0\")}`); //# sourceMappingURL=hash.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-utils/lib/esm/hash.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-utils/lib/esm/index.js":
/*!**************************************************!*\
  !*** ./node_modules/web3-utils/lib/esm/index.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChunkResponseParser: () => (/* reexport safe */ _chunk_response_parser_js__WEBPACK_IMPORTED_MODULE_11__.ChunkResponseParser),\n/* harmony export */   Eip1193Provider: () => (/* reexport safe */ _web3_eip1193_provider_js__WEBPACK_IMPORTED_MODULE_13__.Eip1193Provider),\n/* harmony export */   EventEmitter: () => (/* reexport safe */ _event_emitter_js__WEBPACK_IMPORTED_MODULE_1__.EventEmitter),\n/* harmony export */   SocketProvider: () => (/* reexport safe */ _socket_provider_js__WEBPACK_IMPORTED_MODULE_14__.SocketProvider),\n/* harmony export */   Web3DeferredPromise: () => (/* reexport safe */ _web3_deferred_promise_js__WEBPACK_IMPORTED_MODULE_10__.Web3DeferredPromise),\n/* harmony export */   asciiToHex: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.asciiToHex),\n/* harmony export */   bytesToHex: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.bytesToHex),\n/* harmony export */   bytesToUint8Array: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.bytesToUint8Array),\n/* harmony export */   checkAddressCheckSum: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_2__.checkAddressCheckSum),\n/* harmony export */   compareBlockNumbers: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_2__.compareBlockNumbers),\n/* harmony export */   convert: () => (/* reexport safe */ _formatter_js__WEBPACK_IMPORTED_MODULE_3__.convert),\n/* harmony export */   convertScalarValue: () => (/* reexport safe */ _formatter_js__WEBPACK_IMPORTED_MODULE_3__.convertScalarValue),\n/* harmony export */   encodePacked: () => (/* reexport safe */ _hash_js__WEBPACK_IMPORTED_MODULE_4__.encodePacked),\n/* harmony export */   ethUnitMap: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.ethUnitMap),\n/* harmony export */   format: () => (/* reexport safe */ _formatter_js__WEBPACK_IMPORTED_MODULE_3__.format),\n/* harmony export */   fromAscii: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.fromAscii),\n/* harmony export */   fromDecimal: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.fromDecimal),\n/* harmony export */   fromTwosComplement: () => (/* reexport safe */ _string_manipulation_js__WEBPACK_IMPORTED_MODULE_6__.fromTwosComplement),\n/* harmony export */   fromUtf8: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.fromUtf8),\n/* harmony export */   fromWei: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.fromWei),\n/* harmony export */   getStorageSlotNumForLongString: () => (/* reexport safe */ _hash_js__WEBPACK_IMPORTED_MODULE_4__.getStorageSlotNumForLongString),\n/* harmony export */   hexToAscii: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.hexToAscii),\n/* harmony export */   hexToBytes: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.hexToBytes),\n/* harmony export */   hexToNumber: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.hexToNumber),\n/* harmony export */   hexToNumberString: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.hexToNumberString),\n/* harmony export */   hexToString: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.hexToString),\n/* harmony export */   hexToUtf8: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.hexToUtf8),\n/* harmony export */   isAddress: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_2__.isAddress),\n/* harmony export */   isBatchRequest: () => (/* reexport safe */ _json_rpc_js__WEBPACK_IMPORTED_MODULE_9__.isBatchRequest),\n/* harmony export */   isBatchResponse: () => (/* reexport safe */ _json_rpc_js__WEBPACK_IMPORTED_MODULE_9__.isBatchResponse),\n/* harmony export */   isBloom: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_2__.isBloom),\n/* harmony export */   isContractAddressInBloom: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_2__.isContractAddressInBloom),\n/* harmony export */   isContractInitOptions: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_2__.isContractInitOptions),\n/* harmony export */   isDataFormat: () => (/* reexport safe */ _formatter_js__WEBPACK_IMPORTED_MODULE_3__.isDataFormat),\n/* harmony export */   isHex: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_2__.isHex),\n/* harmony export */   isHexStrict: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_2__.isHexStrict),\n/* harmony export */   isInBloom: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_2__.isInBloom),\n/* harmony export */   isNullish: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_2__.isNullish),\n/* harmony export */   isPromise: () => (/* reexport safe */ _promise_helpers_js__WEBPACK_IMPORTED_MODULE_8__.isPromise),\n/* harmony export */   isResponseRpcError: () => (/* reexport safe */ _json_rpc_js__WEBPACK_IMPORTED_MODULE_9__.isResponseRpcError),\n/* harmony export */   isResponseWithError: () => (/* reexport safe */ _json_rpc_js__WEBPACK_IMPORTED_MODULE_9__.isResponseWithError),\n/* harmony export */   isResponseWithNotification: () => (/* reexport safe */ _json_rpc_js__WEBPACK_IMPORTED_MODULE_9__.isResponseWithNotification),\n/* harmony export */   isResponseWithResult: () => (/* reexport safe */ _json_rpc_js__WEBPACK_IMPORTED_MODULE_9__.isResponseWithResult),\n/* harmony export */   isSubscriptionResult: () => (/* reexport safe */ _json_rpc_js__WEBPACK_IMPORTED_MODULE_9__.isSubscriptionResult),\n/* harmony export */   isTopic: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_2__.isTopic),\n/* harmony export */   isTopicInBloom: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_2__.isTopicInBloom),\n/* harmony export */   isUserEthereumAddressInBloom: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_2__.isUserEthereumAddressInBloom),\n/* harmony export */   isValidResponse: () => (/* reexport safe */ _json_rpc_js__WEBPACK_IMPORTED_MODULE_9__.isValidResponse),\n/* harmony export */   jsonRpc: () => (/* reexport module object */ _json_rpc_js__WEBPACK_IMPORTED_MODULE_9__),\n/* harmony export */   keccak256: () => (/* reexport safe */ _hash_js__WEBPACK_IMPORTED_MODULE_4__.keccak256),\n/* harmony export */   keccak256Wrapper: () => (/* reexport safe */ _hash_js__WEBPACK_IMPORTED_MODULE_4__.keccak256Wrapper),\n/* harmony export */   leftPad: () => (/* reexport safe */ _string_manipulation_js__WEBPACK_IMPORTED_MODULE_6__.leftPad),\n/* harmony export */   mergeDeep: () => (/* reexport safe */ _objects_js__WEBPACK_IMPORTED_MODULE_7__.mergeDeep),\n/* harmony export */   numberToHex: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.numberToHex),\n/* harmony export */   padLeft: () => (/* reexport safe */ _string_manipulation_js__WEBPACK_IMPORTED_MODULE_6__.padLeft),\n/* harmony export */   padRight: () => (/* reexport safe */ _string_manipulation_js__WEBPACK_IMPORTED_MODULE_6__.padRight),\n/* harmony export */   pollTillDefined: () => (/* reexport safe */ _promise_helpers_js__WEBPACK_IMPORTED_MODULE_8__.pollTillDefined),\n/* harmony export */   pollTillDefinedAndReturnIntervalId: () => (/* reexport safe */ _promise_helpers_js__WEBPACK_IMPORTED_MODULE_8__.pollTillDefinedAndReturnIntervalId),\n/* harmony export */   processSolidityEncodePackedArgs: () => (/* reexport safe */ _hash_js__WEBPACK_IMPORTED_MODULE_4__.processSolidityEncodePackedArgs),\n/* harmony export */   randomBytes: () => (/* reexport safe */ _random_js__WEBPACK_IMPORTED_MODULE_5__.randomBytes),\n/* harmony export */   randomHex: () => (/* reexport safe */ _random_js__WEBPACK_IMPORTED_MODULE_5__.randomHex),\n/* harmony export */   rejectIfConditionAtInterval: () => (/* reexport safe */ _promise_helpers_js__WEBPACK_IMPORTED_MODULE_8__.rejectIfConditionAtInterval),\n/* harmony export */   rejectIfTimeout: () => (/* reexport safe */ _promise_helpers_js__WEBPACK_IMPORTED_MODULE_8__.rejectIfTimeout),\n/* harmony export */   rightPad: () => (/* reexport safe */ _string_manipulation_js__WEBPACK_IMPORTED_MODULE_6__.rightPad),\n/* harmony export */   setRequestIdStart: () => (/* reexport safe */ _json_rpc_js__WEBPACK_IMPORTED_MODULE_9__.setRequestIdStart),\n/* harmony export */   sha3: () => (/* reexport safe */ _hash_js__WEBPACK_IMPORTED_MODULE_4__.sha3),\n/* harmony export */   sha3Raw: () => (/* reexport safe */ _hash_js__WEBPACK_IMPORTED_MODULE_4__.sha3Raw),\n/* harmony export */   soliditySha3: () => (/* reexport safe */ _hash_js__WEBPACK_IMPORTED_MODULE_4__.soliditySha3),\n/* harmony export */   soliditySha3Raw: () => (/* reexport safe */ _hash_js__WEBPACK_IMPORTED_MODULE_4__.soliditySha3Raw),\n/* harmony export */   stringToHex: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.stringToHex),\n/* harmony export */   toAscii: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.toAscii),\n/* harmony export */   toBatchPayload: () => (/* reexport safe */ _json_rpc_js__WEBPACK_IMPORTED_MODULE_9__.toBatchPayload),\n/* harmony export */   toBigInt: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.toBigInt),\n/* harmony export */   toBool: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.toBool),\n/* harmony export */   toChecksumAddress: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.toChecksumAddress),\n/* harmony export */   toDecimal: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.toDecimal),\n/* harmony export */   toHex: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.toHex),\n/* harmony export */   toNumber: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.toNumber),\n/* harmony export */   toPayload: () => (/* reexport safe */ _json_rpc_js__WEBPACK_IMPORTED_MODULE_9__.toPayload),\n/* harmony export */   toTwosComplement: () => (/* reexport safe */ _string_manipulation_js__WEBPACK_IMPORTED_MODULE_6__.toTwosComplement),\n/* harmony export */   toUtf8: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.toUtf8),\n/* harmony export */   toWei: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.toWei),\n/* harmony export */   uint8ArrayConcat: () => (/* reexport safe */ _uint8array_js__WEBPACK_IMPORTED_MODULE_15__.uint8ArrayConcat),\n/* harmony export */   uint8ArrayEquals: () => (/* reexport safe */ _uint8array_js__WEBPACK_IMPORTED_MODULE_15__.uint8ArrayEquals),\n/* harmony export */   utf8ToBytes: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.utf8ToBytes),\n/* harmony export */   utf8ToHex: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.utf8ToHex),\n/* harmony export */   uuidV4: () => (/* reexport safe */ _uuid_js__WEBPACK_IMPORTED_MODULE_12__.uuidV4),\n/* harmony export */   validateResponse: () => (/* reexport safe */ _json_rpc_js__WEBPACK_IMPORTED_MODULE_9__.validateResponse),\n/* harmony export */   waitWithTimeout: () => (/* reexport safe */ _promise_helpers_js__WEBPACK_IMPORTED_MODULE_8__.waitWithTimeout)\n/* harmony export */ });\n/* harmony import */ var _converters_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./converters.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/converters.js\");\n/* harmony import */ var _event_emitter_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./event_emitter.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/event_emitter.js\");\n/* harmony import */ var _validation_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./validation.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/validation.js\");\n/* harmony import */ var _formatter_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./formatter.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/formatter.js\");\n/* harmony import */ var _hash_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./hash.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/hash.js\");\n/* harmony import */ var _random_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./random.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/random.js\");\n/* harmony import */ var _string_manipulation_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./string_manipulation.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/string_manipulation.js\");\n/* harmony import */ var _objects_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./objects.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/objects.js\");\n/* harmony import */ var _promise_helpers_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./promise_helpers.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/promise_helpers.js\");\n/* harmony import */ var _json_rpc_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./json_rpc.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/json_rpc.js\");\n/* harmony import */ var _web3_deferred_promise_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./web3_deferred_promise.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/web3_deferred_promise.js\");\n/* harmony import */ var _chunk_response_parser_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./chunk_response_parser.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/chunk_response_parser.js\");\n/* harmony import */ var _uuid_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./uuid.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/uuid.js\");\n/* harmony import */ var _web3_eip1193_provider_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./web3_eip1193_provider.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/web3_eip1193_provider.js\");\n/* harmony import */ var _socket_provider_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./socket_provider.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/socket_provider.js\");\n/* harmony import */ var _uint8array_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./uint8array.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/uint8array.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy11dGlscy9saWIvZXNtL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBOzs7Ozs7Ozs7Ozs7Ozs7QUFlQSxHQUNnQztBQUNHO0FBQ0g7QUFDRDtBQUNMO0FBQ0U7QUFDYTtBQUNaO0FBQ1E7QUFDUDtBQUNXO0FBQ0U7QUFDQTtBQUNqQjtBQUNpQjtBQUNOO0FBQ0wsQ0FDaEMsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvd2ViMy11dGlscy9saWIvZXNtL2luZGV4LmpzPzkxY2QiXSwic291cmNlc0NvbnRlbnQiOlsiLypcblRoaXMgZmlsZSBpcyBwYXJ0IG9mIHdlYjMuanMuXG5cbndlYjMuanMgaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeVxuaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5XG50aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBlaXRoZXIgdmVyc2lvbiAzIG9mIHRoZSBMaWNlbnNlLCBvclxuKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi5cblxud2ViMy5qcyBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLFxuYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2Zcbk1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGVcbkdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLlxuXG5Zb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2VcbmFsb25nIHdpdGggd2ViMy5qcy4gIElmIG5vdCwgc2VlIDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi5cbiovXG5leHBvcnQgKiBmcm9tICcuL2NvbnZlcnRlcnMuanMnO1xuZXhwb3J0ICogZnJvbSAnLi9ldmVudF9lbWl0dGVyLmpzJztcbmV4cG9ydCAqIGZyb20gJy4vdmFsaWRhdGlvbi5qcyc7XG5leHBvcnQgKiBmcm9tICcuL2Zvcm1hdHRlci5qcyc7XG5leHBvcnQgKiBmcm9tICcuL2hhc2guanMnO1xuZXhwb3J0ICogZnJvbSAnLi9yYW5kb20uanMnO1xuZXhwb3J0ICogZnJvbSAnLi9zdHJpbmdfbWFuaXB1bGF0aW9uLmpzJztcbmV4cG9ydCAqIGZyb20gJy4vb2JqZWN0cy5qcyc7XG5leHBvcnQgKiBmcm9tICcuL3Byb21pc2VfaGVscGVycy5qcyc7XG5leHBvcnQgKiBmcm9tICcuL2pzb25fcnBjLmpzJztcbmV4cG9ydCAqIGFzIGpzb25ScGMgZnJvbSAnLi9qc29uX3JwYy5qcyc7XG5leHBvcnQgKiBmcm9tICcuL3dlYjNfZGVmZXJyZWRfcHJvbWlzZS5qcyc7XG5leHBvcnQgKiBmcm9tICcuL2NodW5rX3Jlc3BvbnNlX3BhcnNlci5qcyc7XG5leHBvcnQgKiBmcm9tICcuL3V1aWQuanMnO1xuZXhwb3J0ICogZnJvbSAnLi93ZWIzX2VpcDExOTNfcHJvdmlkZXIuanMnO1xuZXhwb3J0ICogZnJvbSAnLi9zb2NrZXRfcHJvdmlkZXIuanMnO1xuZXhwb3J0ICogZnJvbSAnLi91aW50OGFycmF5LmpzJztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6WyJqc29uUnBjIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-utils/lib/esm/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-utils/lib/esm/json_rpc.js":
/*!*****************************************************!*\
  !*** ./node_modules/web3-utils/lib/esm/json_rpc.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isBatchRequest: () => (/* binding */ isBatchRequest),\n/* harmony export */   isBatchResponse: () => (/* binding */ isBatchResponse),\n/* harmony export */   isResponseRpcError: () => (/* binding */ isResponseRpcError),\n/* harmony export */   isResponseWithError: () => (/* binding */ isResponseWithError),\n/* harmony export */   isResponseWithNotification: () => (/* binding */ isResponseWithNotification),\n/* harmony export */   isResponseWithResult: () => (/* binding */ isResponseWithResult),\n/* harmony export */   isSubscriptionResult: () => (/* binding */ isSubscriptionResult),\n/* harmony export */   isValidResponse: () => (/* binding */ isValidResponse),\n/* harmony export */   setRequestIdStart: () => (/* binding */ setRequestIdStart),\n/* harmony export */   toBatchPayload: () => (/* binding */ toBatchPayload),\n/* harmony export */   toPayload: () => (/* binding */ toPayload),\n/* harmony export */   validateResponse: () => (/* binding */ validateResponse)\n/* harmony export */ });\n/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-validator */ \"(ssr)/./node_modules/web3-validator/lib/esm/index.js\");\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-errors */ \"(ssr)/./node_modules/web3-errors/lib/esm/index.js\");\n/* harmony import */ var _uuid_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./uuid.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/uuid.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ \n\n\n// check if code is a valid rpc server error code\nconst isResponseRpcError = (rpcError)=>{\n    const errorCode = rpcError.error.code;\n    return web3_errors__WEBPACK_IMPORTED_MODULE_1__.rpcErrorsMap.has(errorCode) || errorCode >= -32099 && errorCode <= -32000;\n};\nconst isResponseWithResult = (response)=>!Array.isArray(response) && !!response && response.jsonrpc === \"2.0\" && // JSON RPC consider \"null\" as valid response\n    \"result\" in response && (0,web3_validator__WEBPACK_IMPORTED_MODULE_0__.isNullish)(response.error) && (typeof response.id === \"number\" || typeof response.id === \"string\");\n// To avoid circular package dependency, copied to code here. If you update this please update same function in `response_errors.ts`\nconst isResponseWithError = (response)=>!Array.isArray(response) && response.jsonrpc === \"2.0\" && !!response && (0,web3_validator__WEBPACK_IMPORTED_MODULE_0__.isNullish)(response.result) && // JSON RPC consider \"null\" as valid response\n    \"error\" in response && (typeof response.id === \"number\" || typeof response.id === \"string\");\nconst isResponseWithNotification = (response)=>!Array.isArray(response) && !!response && response.jsonrpc === \"2.0\" && !(0,web3_validator__WEBPACK_IMPORTED_MODULE_0__.isNullish)(response.params) && !(0,web3_validator__WEBPACK_IMPORTED_MODULE_0__.isNullish)(response.method);\nconst isSubscriptionResult = (response)=>!Array.isArray(response) && !!response && response.jsonrpc === \"2.0\" && \"id\" in response && // JSON RPC consider \"null\" as valid response\n    \"result\" in response;\nconst validateResponse = (response)=>isResponseWithResult(response) || isResponseWithError(response);\nconst isValidResponse = (response)=>Array.isArray(response) ? response.every(validateResponse) : validateResponse(response);\nconst isBatchResponse = (response)=>Array.isArray(response) && response.length > 0 && isValidResponse(response);\n// internal optional variable to increment and use for the jsonrpc `id`\nlet requestIdSeed;\n/**\n * Optionally use to make the jsonrpc `id` start from a specific number.\n * Without calling this function, the `id` will be filled with a Uuid.\n * But after this being called with a number, the `id` will be a number staring from the provided `start` variable.\n * However, if `undefined` was passed to this function, the `id` will be a Uuid again.\n * @param start - a number to start incrementing from.\n * \tOr `undefined` to use a new Uuid (this is the default behavior)\n */ const setRequestIdStart = (start)=>{\n    requestIdSeed = start;\n};\nconst toPayload = (request)=>{\n    var _a, _b, _c, _d;\n    if (typeof requestIdSeed !== \"undefined\") {\n        requestIdSeed += 1;\n    }\n    return {\n        jsonrpc: (_a = request.jsonrpc) !== null && _a !== void 0 ? _a : \"2.0\",\n        id: (_c = (_b = request.id) !== null && _b !== void 0 ? _b : requestIdSeed) !== null && _c !== void 0 ? _c : (0,_uuid_js__WEBPACK_IMPORTED_MODULE_2__.uuidV4)(),\n        method: request.method,\n        params: (_d = request.params) !== null && _d !== void 0 ? _d : undefined\n    };\n};\nconst toBatchPayload = (requests)=>requests.map((request)=>toPayload(request));\nconst isBatchRequest = (request)=>Array.isArray(request) && request.length > 0; //# sourceMappingURL=json_rpc.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-utils/lib/esm/json_rpc.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-utils/lib/esm/objects.js":
/*!****************************************************!*\
  !*** ./node_modules/web3-utils/lib/esm/objects.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mergeDeep: () => (/* binding */ mergeDeep)\n/* harmony export */ });\n/* harmony import */ var web3_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-types */ \"(ssr)/./node_modules/web3-types/lib/esm/index.js\");\n/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-validator */ \"(ssr)/./node_modules/web3-validator/lib/esm/index.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ \n\nconst isIterable = (item)=>typeof item === \"object\" && !(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(item) && !Array.isArray(item) && !(item instanceof web3_types__WEBPACK_IMPORTED_MODULE_0__.TypedArray);\n// The following code is a derivative work of the code from the \"LiskHQ/lisk-sdk\" project,\n// which is licensed under Apache version 2.\n/**\n * Deep merge two objects.\n * @param destination - The destination object.\n * @param sources - An array of source objects.\n * @returns - The merged object.\n */ const mergeDeep = (destination, ...sources)=>{\n    const result = destination; // clone deep here\n    if (!isIterable(result)) {\n        return result;\n    }\n    for (const src of sources){\n        // eslint-disable-next-line no-restricted-syntax\n        for(const key in src){\n            if (isIterable(src[key])) {\n                if (!result[key]) {\n                    result[key] = {};\n                }\n                mergeDeep(result[key], src[key]);\n            } else if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(src[key]) && Object.hasOwnProperty.call(src, key)) {\n                if (Array.isArray(src[key]) || src[key] instanceof web3_types__WEBPACK_IMPORTED_MODULE_0__.TypedArray) {\n                    result[key] = src[key].slice(0);\n                } else {\n                    result[key] = src[key];\n                }\n            }\n        }\n    }\n    return result;\n}; //# sourceMappingURL=objects.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy11dGlscy9saWIvZXNtL29iamVjdHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7Ozs7Ozs7Ozs7Ozs7OztBQWVBLEdBQ3dDO0FBQ0c7QUFDM0MsTUFBTUUsYUFBYSxDQUFDQyxPQUFTLE9BQU9BLFNBQVMsWUFDekMsQ0FBQ0YseURBQVNBLENBQUNFLFNBQ1gsQ0FBQ0MsTUFBTUMsT0FBTyxDQUFDRixTQUNmLENBQUVBLENBQUFBLGdCQUFnQkgsa0RBQVM7QUFDL0IsMEZBQTBGO0FBQzFGLDRDQUE0QztBQUM1Qzs7Ozs7Q0FLQyxHQUNNLE1BQU1NLFlBQVksQ0FBQ0MsYUFBYSxHQUFHQztJQUN0QyxNQUFNQyxTQUFTRixhQUFhLGtCQUFrQjtJQUM5QyxJQUFJLENBQUNMLFdBQVdPLFNBQVM7UUFDckIsT0FBT0E7SUFDWDtJQUNBLEtBQUssTUFBTUMsT0FBT0YsUUFBUztRQUN2QixnREFBZ0Q7UUFDaEQsSUFBSyxNQUFNRyxPQUFPRCxJQUFLO1lBQ25CLElBQUlSLFdBQVdRLEdBQUcsQ0FBQ0MsSUFBSSxHQUFHO2dCQUN0QixJQUFJLENBQUNGLE1BQU0sQ0FBQ0UsSUFBSSxFQUFFO29CQUNkRixNQUFNLENBQUNFLElBQUksR0FBRyxDQUFDO2dCQUNuQjtnQkFDQUwsVUFBVUcsTUFBTSxDQUFDRSxJQUFJLEVBQUVELEdBQUcsQ0FBQ0MsSUFBSTtZQUNuQyxPQUNLLElBQUksQ0FBQ1YseURBQVNBLENBQUNTLEdBQUcsQ0FBQ0MsSUFBSSxLQUFLQyxPQUFPQyxjQUFjLENBQUNDLElBQUksQ0FBQ0osS0FBS0MsTUFBTTtnQkFDbkUsSUFBSVAsTUFBTUMsT0FBTyxDQUFDSyxHQUFHLENBQUNDLElBQUksS0FBS0QsR0FBRyxDQUFDQyxJQUFJLFlBQVlYLGtEQUFVQSxFQUFFO29CQUMzRFMsTUFBTSxDQUFDRSxJQUFJLEdBQUdELEdBQUcsQ0FBQ0MsSUFBSSxDQUFDSSxLQUFLLENBQUM7Z0JBQ2pDLE9BQ0s7b0JBQ0ROLE1BQU0sQ0FBQ0UsSUFBSSxHQUFHRCxHQUFHLENBQUNDLElBQUk7Z0JBQzFCO1lBQ0o7UUFDSjtJQUNKO0lBQ0EsT0FBT0Y7QUFDWCxFQUFFLENBQ0YsbUNBQW1DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvd2ViMy11dGlscy9saWIvZXNtL29iamVjdHMuanM/MmRmNCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuVGhpcyBmaWxlIGlzIHBhcnQgb2Ygd2ViMy5qcy5cblxud2ViMy5qcyBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5XG5pdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnlcbnRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yXG4oYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLlxuXG53ZWIzLmpzIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsXG5idXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZlxuTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZVxuR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG5cbllvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZVxuYWxvbmcgd2l0aCB3ZWIzLmpzLiAgSWYgbm90LCBzZWUgPGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LlxuKi9cbmltcG9ydCB7IFR5cGVkQXJyYXkgfSBmcm9tICd3ZWIzLXR5cGVzJztcbmltcG9ydCB7IGlzTnVsbGlzaCB9IGZyb20gJ3dlYjMtdmFsaWRhdG9yJztcbmNvbnN0IGlzSXRlcmFibGUgPSAoaXRlbSkgPT4gdHlwZW9mIGl0ZW0gPT09ICdvYmplY3QnICYmXG4gICAgIWlzTnVsbGlzaChpdGVtKSAmJlxuICAgICFBcnJheS5pc0FycmF5KGl0ZW0pICYmXG4gICAgIShpdGVtIGluc3RhbmNlb2YgVHlwZWRBcnJheSk7XG4vLyBUaGUgZm9sbG93aW5nIGNvZGUgaXMgYSBkZXJpdmF0aXZlIHdvcmsgb2YgdGhlIGNvZGUgZnJvbSB0aGUgXCJMaXNrSFEvbGlzay1zZGtcIiBwcm9qZWN0LFxuLy8gd2hpY2ggaXMgbGljZW5zZWQgdW5kZXIgQXBhY2hlIHZlcnNpb24gMi5cbi8qKlxuICogRGVlcCBtZXJnZSB0d28gb2JqZWN0cy5cbiAqIEBwYXJhbSBkZXN0aW5hdGlvbiAtIFRoZSBkZXN0aW5hdGlvbiBvYmplY3QuXG4gKiBAcGFyYW0gc291cmNlcyAtIEFuIGFycmF5IG9mIHNvdXJjZSBvYmplY3RzLlxuICogQHJldHVybnMgLSBUaGUgbWVyZ2VkIG9iamVjdC5cbiAqL1xuZXhwb3J0IGNvbnN0IG1lcmdlRGVlcCA9IChkZXN0aW5hdGlvbiwgLi4uc291cmNlcykgPT4ge1xuICAgIGNvbnN0IHJlc3VsdCA9IGRlc3RpbmF0aW9uOyAvLyBjbG9uZSBkZWVwIGhlcmVcbiAgICBpZiAoIWlzSXRlcmFibGUocmVzdWx0KSkge1xuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cbiAgICBmb3IgKGNvbnN0IHNyYyBvZiBzb3VyY2VzKSB7XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1yZXN0cmljdGVkLXN5bnRheFxuICAgICAgICBmb3IgKGNvbnN0IGtleSBpbiBzcmMpIHtcbiAgICAgICAgICAgIGlmIChpc0l0ZXJhYmxlKHNyY1trZXldKSkge1xuICAgICAgICAgICAgICAgIGlmICghcmVzdWx0W2tleV0pIHtcbiAgICAgICAgICAgICAgICAgICAgcmVzdWx0W2tleV0gPSB7fTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgbWVyZ2VEZWVwKHJlc3VsdFtrZXldLCBzcmNba2V5XSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmICghaXNOdWxsaXNoKHNyY1trZXldKSAmJiBPYmplY3QuaGFzT3duUHJvcGVydHkuY2FsbChzcmMsIGtleSkpIHtcbiAgICAgICAgICAgICAgICBpZiAoQXJyYXkuaXNBcnJheShzcmNba2V5XSkgfHwgc3JjW2tleV0gaW5zdGFuY2VvZiBUeXBlZEFycmF5KSB7XG4gICAgICAgICAgICAgICAgICAgIHJlc3VsdFtrZXldID0gc3JjW2tleV0uc2xpY2UoMCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICByZXN1bHRba2V5XSA9IHNyY1trZXldO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW9iamVjdHMuanMubWFwIl0sIm5hbWVzIjpbIlR5cGVkQXJyYXkiLCJpc051bGxpc2giLCJpc0l0ZXJhYmxlIiwiaXRlbSIsIkFycmF5IiwiaXNBcnJheSIsIm1lcmdlRGVlcCIsImRlc3RpbmF0aW9uIiwic291cmNlcyIsInJlc3VsdCIsInNyYyIsImtleSIsIk9iamVjdCIsImhhc093blByb3BlcnR5IiwiY2FsbCIsInNsaWNlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-utils/lib/esm/objects.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-utils/lib/esm/promise_helpers.js":
/*!************************************************************!*\
  !*** ./node_modules/web3-utils/lib/esm/promise_helpers.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isPromise: () => (/* binding */ isPromise),\n/* harmony export */   pollTillDefined: () => (/* binding */ pollTillDefined),\n/* harmony export */   pollTillDefinedAndReturnIntervalId: () => (/* binding */ pollTillDefinedAndReturnIntervalId),\n/* harmony export */   rejectIfConditionAtInterval: () => (/* binding */ rejectIfConditionAtInterval),\n/* harmony export */   rejectIfTimeout: () => (/* binding */ rejectIfTimeout),\n/* harmony export */   waitWithTimeout: () => (/* binding */ waitWithTimeout)\n/* harmony export */ });\n/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-validator */ \"(ssr)/./node_modules/web3-validator/lib/esm/index.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ var __awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n/**\n * An alternative to the node function `isPromise` that exists in `util/types` because it is not available on the browser.\n * @param object - to check if it is a `Promise`\n * @returns `true` if it is an `object` or a `function` that has a `then` function. And returns `false` otherwise.\n */ function isPromise(object) {\n    return (typeof object === \"object\" || typeof object === \"function\") && // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    typeof object.then === \"function\";\n}\n/**\n * Wait for a promise but interrupt it if it did not resolve within a given timeout.\n * If the timeout reached, before the promise code resolve, either throw an error if an error object was provided, or return `undefined`.\n * @param awaitable - The promise or function to wait for.\n * @param timeout - The timeout in milliseconds.\n * @param error - (Optional) The error to throw if the timeout reached.\n */ function waitWithTimeout(awaitable, timeout, error) {\n    return __awaiter(this, void 0, void 0, function*() {\n        let timeoutId;\n        const result = yield Promise.race([\n            awaitable instanceof Promise ? awaitable : awaitable(),\n            new Promise((resolve, reject)=>{\n                timeoutId = setTimeout(()=>error ? reject(error) : resolve(undefined), timeout);\n            })\n        ]);\n        if (timeoutId) {\n            clearTimeout(timeoutId);\n        }\n        if (result instanceof Error) {\n            throw result;\n        }\n        return result;\n    });\n}\n/**\n * Repeatedly calls an async function with a given interval until the result of the function is defined (not undefined or null),\n * or until a timeout is reached. It returns promise and intervalId.\n * @param func - The function to call.\n * @param interval - The interval in milliseconds.\n */ function pollTillDefinedAndReturnIntervalId(func, interval) {\n    let intervalId;\n    const polledRes = new Promise((resolve, reject)=>{\n        intervalId = setInterval(function intervalCallbackFunc() {\n            (()=>__awaiter(this, void 0, void 0, function*() {\n                    try {\n                        const res = yield waitWithTimeout(func, interval);\n                        if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_0__.isNullish)(res)) {\n                            clearInterval(intervalId);\n                            resolve(res);\n                        }\n                    } catch (error) {\n                        clearInterval(intervalId);\n                        reject(error);\n                    }\n                }))();\n            return intervalCallbackFunc;\n        }() // this will immediate invoke first call\n        , interval);\n    });\n    return [\n        polledRes,\n        intervalId\n    ];\n}\n/**\n * Repeatedly calls an async function with a given interval until the result of the function is defined (not undefined or null),\n * or until a timeout is reached.\n * pollTillDefinedAndReturnIntervalId() function should be used instead of pollTillDefined if you need IntervalId in result.\n * This function will be deprecated in next major release so use pollTillDefinedAndReturnIntervalId().\n * @param func - The function to call.\n * @param interval - The interval in milliseconds.\n */ function pollTillDefined(func, interval) {\n    return __awaiter(this, void 0, void 0, function*() {\n        return pollTillDefinedAndReturnIntervalId(func, interval)[0];\n    });\n}\n/**\n * Enforce a timeout on a promise, so that it can be rejected if it takes too long to complete\n * @param timeout - The timeout to enforced in milliseconds.\n * @param error - The error to throw if the timeout is reached.\n * @returns A tuple of the timeout id and the promise that will be rejected if the timeout is reached.\n *\n * @example\n * ```ts\n * const [timerId, promise] = web3.utils.rejectIfTimeout(100, new Error('time out'));\n * ```\n */ function rejectIfTimeout(timeout, error) {\n    let timeoutId;\n    const rejectOnTimeout = new Promise((_, reject)=>{\n        timeoutId = setTimeout(()=>{\n            reject(error);\n        }, timeout);\n    });\n    return [\n        timeoutId,\n        rejectOnTimeout\n    ];\n}\n/**\n * Sets an interval that repeatedly executes the given cond function with the specified interval between each call.\n * If the condition is met, the interval is cleared and a Promise that rejects with the returned value is returned.\n * @param cond - The function/confition to call.\n * @param interval - The interval in milliseconds.\n * @returns - an array with the interval ID and the Promise.\n */ function rejectIfConditionAtInterval(cond, interval) {\n    let intervalId;\n    const rejectIfCondition = new Promise((_, reject)=>{\n        intervalId = setInterval(()=>{\n            (()=>__awaiter(this, void 0, void 0, function*() {\n                    const error = yield cond();\n                    if (error) {\n                        clearInterval(intervalId);\n                        reject(error);\n                    }\n                }))();\n        }, interval);\n    });\n    return [\n        intervalId,\n        rejectIfCondition\n    ];\n} //# sourceMappingURL=promise_helpers.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-utils/lib/esm/promise_helpers.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-utils/lib/esm/random.js":
/*!***************************************************!*\
  !*** ./node_modules/web3-utils/lib/esm/random.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   randomBytes: () => (/* binding */ randomBytes),\n/* harmony export */   randomHex: () => (/* binding */ randomHex)\n/* harmony export */ });\n/* harmony import */ var ethereum_cryptography_random_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ethereum-cryptography/random.js */ \"(ssr)/./node_modules/ethereum-cryptography/esm/random.js\");\n/* harmony import */ var _converters_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./converters.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/converters.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ \n\n/**\n * Returns a random byte array by the given bytes size\n * @param size - The size of the random byte array returned\n * @returns - random byte array\n *\n * @example\n * ```ts\n * console.log(web3.utils.randomBytes(32));\n * > Uint8Array(32) [\n *       93, 172, 226,  32,  33, 176, 156, 156,\n *       182,  30, 240,   2,  69,  96, 174, 197,\n *       33, 136, 194, 241, 197, 156, 110, 111,\n *       66,  87,  17,  88,  67,  48, 245, 183\n *    ]\n * ```\n */ const randomBytes = (size)=>(0,ethereum_cryptography_random_js__WEBPACK_IMPORTED_MODULE_0__.getRandomBytesSync)(size);\n/**\n * Returns a random hex string by the given bytes size\n * @param byteSize - The size of the random hex string returned\n * @returns - random hex string\n *\n * ```ts\n * console.log(web3.utils.randomHex(32));\n * > 0x139f5b88b72a25eab053d3b57fe1f8a9dbc62a526b1cb1774d0d7db1c3e7ce9e\n * ```\n */ const randomHex = (byteSize)=>(0,_converters_js__WEBPACK_IMPORTED_MODULE_1__.bytesToHex)(randomBytes(byteSize)); //# sourceMappingURL=random.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy11dGlscy9saWIvZXNtL3JhbmRvbS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7Ozs7Ozs7Ozs7OztBQWVBLEdBQ3FFO0FBQ3hCO0FBQzdDOzs7Ozs7Ozs7Ozs7Ozs7Q0FlQyxHQUNNLE1BQU1FLGNBQWMsQ0FBQ0MsT0FBU0gsbUZBQWtCQSxDQUFDRyxNQUFNO0FBQzlEOzs7Ozs7Ozs7Q0FTQyxHQUNNLE1BQU1DLFlBQVksQ0FBQ0MsV0FBYUosMERBQVVBLENBQUNDLFlBQVlHLFdBQVcsQ0FDekUsa0NBQWtDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvd2ViMy11dGlscy9saWIvZXNtL3JhbmRvbS5qcz83OTRmIl0sInNvdXJjZXNDb250ZW50IjpbIi8qXG5UaGlzIGZpbGUgaXMgcGFydCBvZiB3ZWIzLmpzLlxuXG53ZWIzLmpzIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnlcbml0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieVxudGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSwgb3JcbihhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uXG5cbndlYjMuanMgaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCxcbmJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mXG5NRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlXG5HTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy5cblxuWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG5hbG9uZyB3aXRoIHdlYjMuanMuICBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uXG4qL1xuaW1wb3J0IHsgZ2V0UmFuZG9tQnl0ZXNTeW5jIH0gZnJvbSAnZXRoZXJldW0tY3J5cHRvZ3JhcGh5L3JhbmRvbS5qcyc7XG5pbXBvcnQgeyBieXRlc1RvSGV4IH0gZnJvbSAnLi9jb252ZXJ0ZXJzLmpzJztcbi8qKlxuICogUmV0dXJucyBhIHJhbmRvbSBieXRlIGFycmF5IGJ5IHRoZSBnaXZlbiBieXRlcyBzaXplXG4gKiBAcGFyYW0gc2l6ZSAtIFRoZSBzaXplIG9mIHRoZSByYW5kb20gYnl0ZSBhcnJheSByZXR1cm5lZFxuICogQHJldHVybnMgLSByYW5kb20gYnl0ZSBhcnJheVxuICpcbiAqIEBleGFtcGxlXG4gKiBgYGB0c1xuICogY29uc29sZS5sb2cod2ViMy51dGlscy5yYW5kb21CeXRlcygzMikpO1xuICogPiBVaW50OEFycmF5KDMyKSBbXG4gKiAgICAgICA5MywgMTcyLCAyMjYsICAzMiwgIDMzLCAxNzYsIDE1NiwgMTU2LFxuICogICAgICAgMTgyLCAgMzAsIDI0MCwgICAyLCAgNjksICA5NiwgMTc0LCAxOTcsXG4gKiAgICAgICAzMywgMTM2LCAxOTQsIDI0MSwgMTk3LCAxNTYsIDExMCwgMTExLFxuICogICAgICAgNjYsICA4NywgIDE3LCAgODgsICA2NywgIDQ4LCAyNDUsIDE4M1xuICogICAgXVxuICogYGBgXG4gKi9cbmV4cG9ydCBjb25zdCByYW5kb21CeXRlcyA9IChzaXplKSA9PiBnZXRSYW5kb21CeXRlc1N5bmMoc2l6ZSk7XG4vKipcbiAqIFJldHVybnMgYSByYW5kb20gaGV4IHN0cmluZyBieSB0aGUgZ2l2ZW4gYnl0ZXMgc2l6ZVxuICogQHBhcmFtIGJ5dGVTaXplIC0gVGhlIHNpemUgb2YgdGhlIHJhbmRvbSBoZXggc3RyaW5nIHJldHVybmVkXG4gKiBAcmV0dXJucyAtIHJhbmRvbSBoZXggc3RyaW5nXG4gKlxuICogYGBgdHNcbiAqIGNvbnNvbGUubG9nKHdlYjMudXRpbHMucmFuZG9tSGV4KDMyKSk7XG4gKiA+IDB4MTM5ZjViODhiNzJhMjVlYWIwNTNkM2I1N2ZlMWY4YTlkYmM2MmE1MjZiMWNiMTc3NGQwZDdkYjFjM2U3Y2U5ZVxuICogYGBgXG4gKi9cbmV4cG9ydCBjb25zdCByYW5kb21IZXggPSAoYnl0ZVNpemUpID0+IGJ5dGVzVG9IZXgocmFuZG9tQnl0ZXMoYnl0ZVNpemUpKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJhbmRvbS5qcy5tYXAiXSwibmFtZXMiOlsiZ2V0UmFuZG9tQnl0ZXNTeW5jIiwiYnl0ZXNUb0hleCIsInJhbmRvbUJ5dGVzIiwic2l6ZSIsInJhbmRvbUhleCIsImJ5dGVTaXplIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-utils/lib/esm/random.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-utils/lib/esm/socket_provider.js":
/*!************************************************************!*\
  !*** ./node_modules/web3-utils/lib/esm/socket_provider.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SocketProvider: () => (/* binding */ SocketProvider)\n/* harmony export */ });\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-errors */ \"(ssr)/./node_modules/web3-errors/lib/esm/index.js\");\n/* harmony import */ var _web3_eip1193_provider_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./web3_eip1193_provider.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/web3_eip1193_provider.js\");\n/* harmony import */ var _chunk_response_parser_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./chunk_response_parser.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/chunk_response_parser.js\");\n/* harmony import */ var _validation_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./validation.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/validation.js\");\n/* harmony import */ var _web3_deferred_promise_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./web3_deferred_promise.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/web3_deferred_promise.js\");\n/* harmony import */ var _json_rpc_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./json_rpc.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/json_rpc.js\");\nvar __awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n\n\n\n\nconst DEFAULT_RECONNECTION_OPTIONS = {\n    autoReconnect: true,\n    delay: 5000,\n    maxAttempts: 5\n};\nconst NORMAL_CLOSE_CODE = 1000; // https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/close\nclass SocketProvider extends _web3_eip1193_provider_js__WEBPACK_IMPORTED_MODULE_1__.Eip1193Provider {\n    /**\n     * This is an abstract class for implementing a socket provider (e.g. WebSocket, IPC). It extends the EIP-1193 provider {@link EIP1193Provider}.\n     * @param socketPath - The path to the socket (e.g. /ipc/path or ws://localhost:8546)\n     * @param socketOptions - The options for the socket connection. Its type is supposed to be specified in the inherited classes.\n     * @param reconnectOptions - The options for the socket reconnection {@link ReconnectOptions}\n     */ constructor(socketPath, socketOptions, reconnectOptions){\n        super();\n        this._connectionStatus = \"connecting\";\n        // Message handlers. Due to bounding of `this` and removing the listeners we have to keep it's reference.\n        this._onMessageHandler = this._onMessage.bind(this);\n        this._onOpenHandler = this._onConnect.bind(this);\n        this._onCloseHandler = this._onCloseEvent.bind(this);\n        this._onErrorHandler = this._onError.bind(this);\n        if (!this._validateProviderPath(socketPath)) throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.InvalidClientError(socketPath);\n        this._socketPath = socketPath;\n        this._socketOptions = socketOptions;\n        this._reconnectOptions = Object.assign(Object.assign({}, DEFAULT_RECONNECTION_OPTIONS), reconnectOptions !== null && reconnectOptions !== void 0 ? reconnectOptions : {});\n        this._pendingRequestsQueue = new Map();\n        this._sentRequestsQueue = new Map();\n        this._init();\n        this.connect();\n        this.chunkResponseParser = new _chunk_response_parser_js__WEBPACK_IMPORTED_MODULE_2__.ChunkResponseParser(this._eventEmitter, this._reconnectOptions.autoReconnect);\n        this.chunkResponseParser.onError(()=>{\n            this._clearQueues();\n        });\n        this.isReconnecting = false;\n    }\n    get SocketConnection() {\n        return this._socketConnection;\n    }\n    _init() {\n        this._reconnectAttempts = 0;\n    }\n    /**\n     * Try to establish a connection to the socket\n     */ connect() {\n        try {\n            this._openSocketConnection();\n            this._connectionStatus = \"connecting\";\n            this._addSocketListeners();\n        } catch (e) {\n            if (!this.isReconnecting) {\n                this._connectionStatus = \"disconnected\";\n                if (e && e.message) {\n                    throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.ConnectionError(`Error while connecting to ${this._socketPath}. Reason: ${e.message}`);\n                } else {\n                    throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.InvalidClientError(this._socketPath);\n                }\n            } else {\n                setImmediate(()=>{\n                    this._reconnect();\n                });\n            }\n        }\n    }\n    // eslint-disable-next-line class-methods-use-this\n    _validateProviderPath(path) {\n        return !!path;\n    }\n    /**\n     *\n     * @returns the pendingRequestQueue size\n     */ // eslint-disable-next-line class-methods-use-this\n    getPendingRequestQueueSize() {\n        return this._pendingRequestsQueue.size;\n    }\n    /**\n     *\n     * @returns the sendPendingRequests size\n     */ // eslint-disable-next-line class-methods-use-this\n    getSentRequestsQueueSize() {\n        return this._sentRequestsQueue.size;\n    }\n    /**\n     *\n     * @returns `true` if the socket supports subscriptions\n     */ // eslint-disable-next-line class-methods-use-this\n    supportsSubscriptions() {\n        return true;\n    }\n    on(type, listener) {\n        this._eventEmitter.on(type, listener);\n    }\n    once(type, listener) {\n        this._eventEmitter.once(type, listener);\n    }\n    removeListener(type, listener) {\n        this._eventEmitter.removeListener(type, listener);\n    }\n    _onDisconnect(code, data) {\n        this._connectionStatus = \"disconnected\";\n        super._onDisconnect(code, data);\n    }\n    /**\n     * Disconnects the socket\n     * @param code - The code to be sent to the server\n     * @param data - The data to be sent to the server\n     */ disconnect(code, data) {\n        const disconnectCode = code !== null && code !== void 0 ? code : NORMAL_CLOSE_CODE;\n        this._removeSocketListeners();\n        if (this.getStatus() !== \"disconnected\") {\n            this._closeSocketConnection(disconnectCode, data);\n        }\n        this._onDisconnect(disconnectCode, data);\n    }\n    /**\n     * Safely disconnects the socket, async and waits for request size to be 0 before disconnecting\n     * @param forceDisconnect - If true, will clear queue after 5 attempts of waiting for both pending and sent queue to be 0\n     * @param ms - Determines the ms of setInterval\n     * @param code - The code to be sent to the server\n     * @param data - The data to be sent to the server\n     */ safeDisconnect(code, data, forceDisconnect = false, ms = 1000) {\n        return __awaiter(this, void 0, void 0, function*() {\n            let retryAttempt = 0;\n            const checkQueue = ()=>__awaiter(this, void 0, void 0, function*() {\n                    return new Promise((resolve)=>{\n                        const interval = setInterval(()=>{\n                            if (forceDisconnect && retryAttempt === 5) {\n                                this.clearQueues();\n                            }\n                            if (this.getPendingRequestQueueSize() === 0 && this.getSentRequestsQueueSize() === 0) {\n                                clearInterval(interval);\n                                resolve(true);\n                            }\n                            retryAttempt += 1;\n                        }, ms);\n                    });\n                });\n            yield checkQueue();\n            this.disconnect(code, data);\n        });\n    }\n    /**\n     * Removes all listeners for the specified event type.\n     * @param type - The event type to remove the listeners for\n     */ removeAllListeners(type) {\n        this._eventEmitter.removeAllListeners(type);\n    }\n    _onError(event) {\n        // do not emit error while trying to reconnect\n        if (this.isReconnecting) {\n            this._reconnect();\n        } else {\n            this._eventEmitter.emit(\"error\", event);\n        }\n    }\n    /**\n     * Resets the socket, removing all listeners and pending requests\n     */ reset() {\n        this._sentRequestsQueue.clear();\n        this._pendingRequestsQueue.clear();\n        this._init();\n        this._removeSocketListeners();\n        this._addSocketListeners();\n    }\n    _reconnect() {\n        if (this.isReconnecting) {\n            return;\n        }\n        this.isReconnecting = true;\n        if (this._sentRequestsQueue.size > 0) {\n            this._sentRequestsQueue.forEach((request, key)=>{\n                request.deferredPromise.reject(new web3_errors__WEBPACK_IMPORTED_MODULE_0__.PendingRequestsOnReconnectingError());\n                this._sentRequestsQueue.delete(key);\n            });\n        }\n        if (this._reconnectAttempts < this._reconnectOptions.maxAttempts) {\n            this._reconnectAttempts += 1;\n            setTimeout(()=>{\n                this._removeSocketListeners();\n                this.connect();\n                this.isReconnecting = false;\n            }, this._reconnectOptions.delay);\n        } else {\n            this.isReconnecting = false;\n            this._clearQueues();\n            this._removeSocketListeners();\n            this._eventEmitter.emit(\"error\", new web3_errors__WEBPACK_IMPORTED_MODULE_0__.MaxAttemptsReachedOnReconnectingError(this._reconnectOptions.maxAttempts));\n        }\n    }\n    /**\n     *  Creates a request object to be sent to the server\n     */ request(request) {\n        return __awaiter(this, void 0, void 0, function*() {\n            if ((0,_validation_js__WEBPACK_IMPORTED_MODULE_3__.isNullish)(this._socketConnection)) {\n                throw new Error(\"Connection is undefined\");\n            }\n            // if socket disconnected - open connection\n            if (this.getStatus() === \"disconnected\") {\n                this.connect();\n            }\n            const requestId = _json_rpc_js__WEBPACK_IMPORTED_MODULE_5__.isBatchRequest(request) ? request[0].id : request.id;\n            if (!requestId) {\n                throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.Web3WSProviderError(\"Request Id not defined\");\n            }\n            if (this._sentRequestsQueue.has(requestId)) {\n                throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.RequestAlreadySentError(requestId);\n            }\n            const deferredPromise = new _web3_deferred_promise_js__WEBPACK_IMPORTED_MODULE_4__.Web3DeferredPromise();\n            deferredPromise.catch((error)=>{\n                this._eventEmitter.emit(\"error\", error);\n            });\n            const reqItem = {\n                payload: request,\n                deferredPromise\n            };\n            if (this.getStatus() === \"connecting\") {\n                this._pendingRequestsQueue.set(requestId, reqItem);\n                return reqItem.deferredPromise;\n            }\n            this._sentRequestsQueue.set(requestId, reqItem);\n            try {\n                this._sendToSocket(reqItem.payload);\n            } catch (error) {\n                this._sentRequestsQueue.delete(requestId);\n                this._eventEmitter.emit(\"error\", error);\n            }\n            return deferredPromise;\n        });\n    }\n    _onConnect() {\n        this._connectionStatus = \"connected\";\n        this._reconnectAttempts = 0;\n        super._onConnect();\n        this._sendPendingRequests();\n    }\n    _sendPendingRequests() {\n        for (const [id, value] of this._pendingRequestsQueue.entries()){\n            this._sendToSocket(value.payload);\n            this._pendingRequestsQueue.delete(id);\n            this._sentRequestsQueue.set(id, value);\n        }\n    }\n    _onMessage(event) {\n        const responses = this._parseResponses(event);\n        if ((0,_validation_js__WEBPACK_IMPORTED_MODULE_3__.isNullish)(responses) || responses.length === 0) {\n            return;\n        }\n        for (const response of responses){\n            if (_json_rpc_js__WEBPACK_IMPORTED_MODULE_5__.isResponseWithNotification(response) && response.method.endsWith(\"_subscription\")) {\n                this._eventEmitter.emit(\"message\", response);\n                return;\n            }\n            const requestId = _json_rpc_js__WEBPACK_IMPORTED_MODULE_5__.isBatchResponse(response) ? response[0].id : response.id;\n            const requestItem = this._sentRequestsQueue.get(requestId);\n            if (!requestItem) {\n                return;\n            }\n            if (_json_rpc_js__WEBPACK_IMPORTED_MODULE_5__.isBatchResponse(response) || _json_rpc_js__WEBPACK_IMPORTED_MODULE_5__.isResponseWithResult(response) || _json_rpc_js__WEBPACK_IMPORTED_MODULE_5__.isResponseWithError(response)) {\n                this._eventEmitter.emit(\"message\", response);\n                requestItem.deferredPromise.resolve(response);\n            }\n            this._sentRequestsQueue.delete(requestId);\n        }\n    }\n    clearQueues(event) {\n        this._clearQueues(event);\n    }\n    _clearQueues(event) {\n        if (this._pendingRequestsQueue.size > 0) {\n            this._pendingRequestsQueue.forEach((request, key)=>{\n                request.deferredPromise.reject(new web3_errors__WEBPACK_IMPORTED_MODULE_0__.ConnectionNotOpenError(event));\n                this._pendingRequestsQueue.delete(key);\n            });\n        }\n        if (this._sentRequestsQueue.size > 0) {\n            this._sentRequestsQueue.forEach((request, key)=>{\n                request.deferredPromise.reject(new web3_errors__WEBPACK_IMPORTED_MODULE_0__.ConnectionNotOpenError(event));\n                this._sentRequestsQueue.delete(key);\n            });\n        }\n        this._removeSocketListeners();\n    }\n} //# sourceMappingURL=socket_provider.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy11dGlscy9saWIvZXNtL3NvY2tldF9wcm92aWRlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUEsSUFBSUEsWUFBWSxTQUFLLElBQUksU0FBSSxDQUFDQSxTQUFTLElBQUssU0FBVUMsT0FBTyxFQUFFQyxVQUFVLEVBQUVDLENBQUMsRUFBRUMsU0FBUztJQUNuRixTQUFTQyxNQUFNQyxLQUFLO1FBQUksT0FBT0EsaUJBQWlCSCxJQUFJRyxRQUFRLElBQUlILEVBQUUsU0FBVUksT0FBTztZQUFJQSxRQUFRRDtRQUFRO0lBQUk7SUFDM0csT0FBTyxJQUFLSCxDQUFBQSxLQUFNQSxDQUFBQSxJQUFJSyxPQUFNLENBQUMsRUFBRyxTQUFVRCxPQUFPLEVBQUVFLE1BQU07UUFDckQsU0FBU0MsVUFBVUosS0FBSztZQUFJLElBQUk7Z0JBQUVLLEtBQUtQLFVBQVVRLElBQUksQ0FBQ047WUFBUyxFQUFFLE9BQU9PLEdBQUc7Z0JBQUVKLE9BQU9JO1lBQUk7UUFBRTtRQUMxRixTQUFTQyxTQUFTUixLQUFLO1lBQUksSUFBSTtnQkFBRUssS0FBS1AsU0FBUyxDQUFDLFFBQVEsQ0FBQ0U7WUFBUyxFQUFFLE9BQU9PLEdBQUc7Z0JBQUVKLE9BQU9JO1lBQUk7UUFBRTtRQUM3RixTQUFTRixLQUFLSSxNQUFNO1lBQUlBLE9BQU9DLElBQUksR0FBR1QsUUFBUVEsT0FBT1QsS0FBSyxJQUFJRCxNQUFNVSxPQUFPVCxLQUFLLEVBQUVXLElBQUksQ0FBQ1AsV0FBV0k7UUFBVztRQUM3R0gsS0FBSyxDQUFDUCxZQUFZQSxVQUFVYyxLQUFLLENBQUNqQixTQUFTQyxjQUFjLEVBQUUsR0FBR1UsSUFBSTtJQUN0RTtBQUNKO0FBQ29OO0FBQ3ZKO0FBQ0k7QUFDckI7QUFDcUI7QUFDeEI7QUFDekMsTUFBTW1CLCtCQUErQjtJQUNqQ0MsZUFBZTtJQUNmQyxPQUFPO0lBQ1BDLGFBQWE7QUFDakI7QUFDQSxNQUFNQyxvQkFBb0IsTUFBTSxt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QUN6Q0QsUUFBUUUsZUFBZSxDQUFDckcsTUFBTSxDQUFDLElBQUlXLCtEQUFzQkEsQ0FBQ21GO2dCQUMxRCxJQUFJLENBQUM5QyxxQkFBcUIsQ0FBQ3NELE1BQU0sQ0FBQ0Y7WUFDdEM7UUFDSjtRQUNBLElBQUksSUFBSSxDQUFDbEQsa0JBQWtCLENBQUNrQixJQUFJLEdBQUcsR0FBRztZQUNsQyxJQUFJLENBQUNsQixrQkFBa0IsQ0FBQ2dELE9BQU8sQ0FBQyxDQUFDQyxTQUFTQztnQkFDdENELFFBQVFFLGVBQWUsQ0FBQ3JHLE1BQU0sQ0FBQyxJQUFJVywrREFBc0JBLENBQUNtRjtnQkFDMUQsSUFBSSxDQUFDNUMsa0JBQWtCLENBQUNvRCxNQUFNLENBQUNGO1lBQ25DO1FBQ0o7UUFDQSxJQUFJLENBQUNuQixzQkFBc0I7SUFDL0I7QUFDSixFQUNBLDJDQUEyQyIsInNvdXJjZXMiOlsid2VicGFjazovL2Zyb250ZW5kLy4vbm9kZV9tb2R1bGVzL3dlYjMtdXRpbHMvbGliL2VzbS9zb2NrZXRfcHJvdmlkZXIuanM/ZDkyNyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgX19hd2FpdGVyID0gKHRoaXMgJiYgdGhpcy5fX2F3YWl0ZXIpIHx8IGZ1bmN0aW9uICh0aGlzQXJnLCBfYXJndW1lbnRzLCBQLCBnZW5lcmF0b3IpIHtcbiAgICBmdW5jdGlvbiBhZG9wdCh2YWx1ZSkgeyByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBQID8gdmFsdWUgOiBuZXcgUChmdW5jdGlvbiAocmVzb2x2ZSkgeyByZXNvbHZlKHZhbHVlKTsgfSk7IH1cbiAgICByZXR1cm4gbmV3IChQIHx8IChQID0gUHJvbWlzZSkpKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgZnVuY3Rpb24gZnVsZmlsbGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yLm5leHQodmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiByZWplY3RlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvcltcInRocm93XCJdKHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gc3RlcChyZXN1bHQpIHsgcmVzdWx0LmRvbmUgPyByZXNvbHZlKHJlc3VsdC52YWx1ZSkgOiBhZG9wdChyZXN1bHQudmFsdWUpLnRoZW4oZnVsZmlsbGVkLCByZWplY3RlZCk7IH1cbiAgICAgICAgc3RlcCgoZ2VuZXJhdG9yID0gZ2VuZXJhdG9yLmFwcGx5KHRoaXNBcmcsIF9hcmd1bWVudHMgfHwgW10pKS5uZXh0KCkpO1xuICAgIH0pO1xufTtcbmltcG9ydCB7IENvbm5lY3Rpb25FcnJvciwgQ29ubmVjdGlvbk5vdE9wZW5FcnJvciwgSW52YWxpZENsaWVudEVycm9yLCBNYXhBdHRlbXB0c1JlYWNoZWRPblJlY29ubmVjdGluZ0Vycm9yLCBQZW5kaW5nUmVxdWVzdHNPblJlY29ubmVjdGluZ0Vycm9yLCBSZXF1ZXN0QWxyZWFkeVNlbnRFcnJvciwgV2ViM1dTUHJvdmlkZXJFcnJvciwgfSBmcm9tICd3ZWIzLWVycm9ycyc7XG5pbXBvcnQgeyBFaXAxMTkzUHJvdmlkZXIgfSBmcm9tICcuL3dlYjNfZWlwMTE5M19wcm92aWRlci5qcyc7XG5pbXBvcnQgeyBDaHVua1Jlc3BvbnNlUGFyc2VyIH0gZnJvbSAnLi9jaHVua19yZXNwb25zZV9wYXJzZXIuanMnO1xuaW1wb3J0IHsgaXNOdWxsaXNoIH0gZnJvbSAnLi92YWxpZGF0aW9uLmpzJztcbmltcG9ydCB7IFdlYjNEZWZlcnJlZFByb21pc2UgfSBmcm9tICcuL3dlYjNfZGVmZXJyZWRfcHJvbWlzZS5qcyc7XG5pbXBvcnQgKiBhcyBqc29uUnBjIGZyb20gJy4vanNvbl9ycGMuanMnO1xuY29uc3QgREVGQVVMVF9SRUNPTk5FQ1RJT05fT1BUSU9OUyA9IHtcbiAgICBhdXRvUmVjb25uZWN0OiB0cnVlLFxuICAgIGRlbGF5OiA1MDAwLFxuICAgIG1heEF0dGVtcHRzOiA1LFxufTtcbmNvbnN0IE5PUk1BTF9DTE9TRV9DT0RFID0gMTAwMDsgLy8gaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL1dlYlNvY2tldC9jbG9zZVxuZXhwb3J0IGNsYXNzIFNvY2tldFByb3ZpZGVyIGV4dGVuZHMgRWlwMTE5M1Byb3ZpZGVyIHtcbiAgICAvKipcbiAgICAgKiBUaGlzIGlzIGFuIGFic3RyYWN0IGNsYXNzIGZvciBpbXBsZW1lbnRpbmcgYSBzb2NrZXQgcHJvdmlkZXIgKGUuZy4gV2ViU29ja2V0LCBJUEMpLiBJdCBleHRlbmRzIHRoZSBFSVAtMTE5MyBwcm92aWRlciB7QGxpbmsgRUlQMTE5M1Byb3ZpZGVyfS5cbiAgICAgKiBAcGFyYW0gc29ja2V0UGF0aCAtIFRoZSBwYXRoIHRvIHRoZSBzb2NrZXQgKGUuZy4gL2lwYy9wYXRoIG9yIHdzOi8vbG9jYWxob3N0Ojg1NDYpXG4gICAgICogQHBhcmFtIHNvY2tldE9wdGlvbnMgLSBUaGUgb3B0aW9ucyBmb3IgdGhlIHNvY2tldCBjb25uZWN0aW9uLiBJdHMgdHlwZSBpcyBzdXBwb3NlZCB0byBiZSBzcGVjaWZpZWQgaW4gdGhlIGluaGVyaXRlZCBjbGFzc2VzLlxuICAgICAqIEBwYXJhbSByZWNvbm5lY3RPcHRpb25zIC0gVGhlIG9wdGlvbnMgZm9yIHRoZSBzb2NrZXQgcmVjb25uZWN0aW9uIHtAbGluayBSZWNvbm5lY3RPcHRpb25zfVxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKHNvY2tldFBhdGgsIHNvY2tldE9wdGlvbnMsIHJlY29ubmVjdE9wdGlvbnMpIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICAgICAgdGhpcy5fY29ubmVjdGlvblN0YXR1cyA9ICdjb25uZWN0aW5nJztcbiAgICAgICAgLy8gTWVzc2FnZSBoYW5kbGVycy4gRHVlIHRvIGJvdW5kaW5nIG9mIGB0aGlzYCBhbmQgcmVtb3ZpbmcgdGhlIGxpc3RlbmVycyB3ZSBoYXZlIHRvIGtlZXAgaXQncyByZWZlcmVuY2UuXG4gICAgICAgIHRoaXMuX29uTWVzc2FnZUhhbmRsZXIgPSB0aGlzLl9vbk1lc3NhZ2UuYmluZCh0aGlzKTtcbiAgICAgICAgdGhpcy5fb25PcGVuSGFuZGxlciA9IHRoaXMuX29uQ29ubmVjdC5iaW5kKHRoaXMpO1xuICAgICAgICB0aGlzLl9vbkNsb3NlSGFuZGxlciA9IHRoaXMuX29uQ2xvc2VFdmVudC5iaW5kKHRoaXMpO1xuICAgICAgICB0aGlzLl9vbkVycm9ySGFuZGxlciA9IHRoaXMuX29uRXJyb3IuYmluZCh0aGlzKTtcbiAgICAgICAgaWYgKCF0aGlzLl92YWxpZGF0ZVByb3ZpZGVyUGF0aChzb2NrZXRQYXRoKSlcbiAgICAgICAgICAgIHRocm93IG5ldyBJbnZhbGlkQ2xpZW50RXJyb3Ioc29ja2V0UGF0aCk7XG4gICAgICAgIHRoaXMuX3NvY2tldFBhdGggPSBzb2NrZXRQYXRoO1xuICAgICAgICB0aGlzLl9zb2NrZXRPcHRpb25zID0gc29ja2V0T3B0aW9ucztcbiAgICAgICAgdGhpcy5fcmVjb25uZWN0T3B0aW9ucyA9IE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgREVGQVVMVF9SRUNPTk5FQ1RJT05fT1BUSU9OUyksIChyZWNvbm5lY3RPcHRpb25zICE9PSBudWxsICYmIHJlY29ubmVjdE9wdGlvbnMgIT09IHZvaWQgMCA/IHJlY29ubmVjdE9wdGlvbnMgOiB7fSkpO1xuICAgICAgICB0aGlzLl9wZW5kaW5nUmVxdWVzdHNRdWV1ZSA9IG5ldyBNYXAoKTtcbiAgICAgICAgdGhpcy5fc2VudFJlcXVlc3RzUXVldWUgPSBuZXcgTWFwKCk7XG4gICAgICAgIHRoaXMuX2luaXQoKTtcbiAgICAgICAgdGhpcy5jb25uZWN0KCk7XG4gICAgICAgIHRoaXMuY2h1bmtSZXNwb25zZVBhcnNlciA9IG5ldyBDaHVua1Jlc3BvbnNlUGFyc2VyKHRoaXMuX2V2ZW50RW1pdHRlciwgdGhpcy5fcmVjb25uZWN0T3B0aW9ucy5hdXRvUmVjb25uZWN0KTtcbiAgICAgICAgdGhpcy5jaHVua1Jlc3BvbnNlUGFyc2VyLm9uRXJyb3IoKCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5fY2xlYXJRdWV1ZXMoKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMuaXNSZWNvbm5lY3RpbmcgPSBmYWxzZTtcbiAgICB9XG4gICAgZ2V0IFNvY2tldENvbm5lY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9zb2NrZXRDb25uZWN0aW9uO1xuICAgIH1cbiAgICBfaW5pdCgpIHtcbiAgICAgICAgdGhpcy5fcmVjb25uZWN0QXR0ZW1wdHMgPSAwO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBUcnkgdG8gZXN0YWJsaXNoIGEgY29ubmVjdGlvbiB0byB0aGUgc29ja2V0XG4gICAgICovXG4gICAgY29ubmVjdCgpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHRoaXMuX29wZW5Tb2NrZXRDb25uZWN0aW9uKCk7XG4gICAgICAgICAgICB0aGlzLl9jb25uZWN0aW9uU3RhdHVzID0gJ2Nvbm5lY3RpbmcnO1xuICAgICAgICAgICAgdGhpcy5fYWRkU29ja2V0TGlzdGVuZXJzKCk7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgIGlmICghdGhpcy5pc1JlY29ubmVjdGluZykge1xuICAgICAgICAgICAgICAgIHRoaXMuX2Nvbm5lY3Rpb25TdGF0dXMgPSAnZGlzY29ubmVjdGVkJztcbiAgICAgICAgICAgICAgICBpZiAoZSAmJiBlLm1lc3NhZ2UpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IENvbm5lY3Rpb25FcnJvcihgRXJyb3Igd2hpbGUgY29ubmVjdGluZyB0byAke3RoaXMuX3NvY2tldFBhdGh9LiBSZWFzb246ICR7ZS5tZXNzYWdlfWApO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEludmFsaWRDbGllbnRFcnJvcih0aGlzLl9zb2NrZXRQYXRoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBzZXRJbW1lZGlhdGUoKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLl9yZWNvbm5lY3QoKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgY2xhc3MtbWV0aG9kcy11c2UtdGhpc1xuICAgIF92YWxpZGF0ZVByb3ZpZGVyUGF0aChwYXRoKSB7XG4gICAgICAgIHJldHVybiAhIXBhdGg7XG4gICAgfVxuICAgIC8qKlxuICAgICAqXG4gICAgICogQHJldHVybnMgdGhlIHBlbmRpbmdSZXF1ZXN0UXVldWUgc2l6ZVxuICAgICAqL1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBjbGFzcy1tZXRob2RzLXVzZS10aGlzXG4gICAgZ2V0UGVuZGluZ1JlcXVlc3RRdWV1ZVNpemUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9wZW5kaW5nUmVxdWVzdHNRdWV1ZS5zaXplO1xuICAgIH1cbiAgICAvKipcbiAgICAgKlxuICAgICAqIEByZXR1cm5zIHRoZSBzZW5kUGVuZGluZ1JlcXVlc3RzIHNpemVcbiAgICAgKi9cbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgY2xhc3MtbWV0aG9kcy11c2UtdGhpc1xuICAgIGdldFNlbnRSZXF1ZXN0c1F1ZXVlU2l6ZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3NlbnRSZXF1ZXN0c1F1ZXVlLnNpemU7XG4gICAgfVxuICAgIC8qKlxuICAgICAqXG4gICAgICogQHJldHVybnMgYHRydWVgIGlmIHRoZSBzb2NrZXQgc3VwcG9ydHMgc3Vic2NyaXB0aW9uc1xuICAgICAqL1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBjbGFzcy1tZXRob2RzLXVzZS10aGlzXG4gICAgc3VwcG9ydHNTdWJzY3JpcHRpb25zKCkge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgb24odHlwZSwgbGlzdGVuZXIpIHtcbiAgICAgICAgdGhpcy5fZXZlbnRFbWl0dGVyLm9uKHR5cGUsIGxpc3RlbmVyKTtcbiAgICB9XG4gICAgb25jZSh0eXBlLCBsaXN0ZW5lcikge1xuICAgICAgICB0aGlzLl9ldmVudEVtaXR0ZXIub25jZSh0eXBlLCBsaXN0ZW5lcik7XG4gICAgfVxuICAgIHJlbW92ZUxpc3RlbmVyKHR5cGUsIGxpc3RlbmVyKSB7XG4gICAgICAgIHRoaXMuX2V2ZW50RW1pdHRlci5yZW1vdmVMaXN0ZW5lcih0eXBlLCBsaXN0ZW5lcik7XG4gICAgfVxuICAgIF9vbkRpc2Nvbm5lY3QoY29kZSwgZGF0YSkge1xuICAgICAgICB0aGlzLl9jb25uZWN0aW9uU3RhdHVzID0gJ2Rpc2Nvbm5lY3RlZCc7XG4gICAgICAgIHN1cGVyLl9vbkRpc2Nvbm5lY3QoY29kZSwgZGF0YSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIERpc2Nvbm5lY3RzIHRoZSBzb2NrZXRcbiAgICAgKiBAcGFyYW0gY29kZSAtIFRoZSBjb2RlIHRvIGJlIHNlbnQgdG8gdGhlIHNlcnZlclxuICAgICAqIEBwYXJhbSBkYXRhIC0gVGhlIGRhdGEgdG8gYmUgc2VudCB0byB0aGUgc2VydmVyXG4gICAgICovXG4gICAgZGlzY29ubmVjdChjb2RlLCBkYXRhKSB7XG4gICAgICAgIGNvbnN0IGRpc2Nvbm5lY3RDb2RlID0gY29kZSAhPT0gbnVsbCAmJiBjb2RlICE9PSB2b2lkIDAgPyBjb2RlIDogTk9STUFMX0NMT1NFX0NPREU7XG4gICAgICAgIHRoaXMuX3JlbW92ZVNvY2tldExpc3RlbmVycygpO1xuICAgICAgICBpZiAodGhpcy5nZXRTdGF0dXMoKSAhPT0gJ2Rpc2Nvbm5lY3RlZCcpIHtcbiAgICAgICAgICAgIHRoaXMuX2Nsb3NlU29ja2V0Q29ubmVjdGlvbihkaXNjb25uZWN0Q29kZSwgZGF0YSk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5fb25EaXNjb25uZWN0KGRpc2Nvbm5lY3RDb2RlLCBkYXRhKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogU2FmZWx5IGRpc2Nvbm5lY3RzIHRoZSBzb2NrZXQsIGFzeW5jIGFuZCB3YWl0cyBmb3IgcmVxdWVzdCBzaXplIHRvIGJlIDAgYmVmb3JlIGRpc2Nvbm5lY3RpbmdcbiAgICAgKiBAcGFyYW0gZm9yY2VEaXNjb25uZWN0IC0gSWYgdHJ1ZSwgd2lsbCBjbGVhciBxdWV1ZSBhZnRlciA1IGF0dGVtcHRzIG9mIHdhaXRpbmcgZm9yIGJvdGggcGVuZGluZyBhbmQgc2VudCBxdWV1ZSB0byBiZSAwXG4gICAgICogQHBhcmFtIG1zIC0gRGV0ZXJtaW5lcyB0aGUgbXMgb2Ygc2V0SW50ZXJ2YWxcbiAgICAgKiBAcGFyYW0gY29kZSAtIFRoZSBjb2RlIHRvIGJlIHNlbnQgdG8gdGhlIHNlcnZlclxuICAgICAqIEBwYXJhbSBkYXRhIC0gVGhlIGRhdGEgdG8gYmUgc2VudCB0byB0aGUgc2VydmVyXG4gICAgICovXG4gICAgc2FmZURpc2Nvbm5lY3QoY29kZSwgZGF0YSwgZm9yY2VEaXNjb25uZWN0ID0gZmFsc2UsIG1zID0gMTAwMCkge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgbGV0IHJldHJ5QXR0ZW1wdCA9IDA7XG4gICAgICAgICAgICBjb25zdCBjaGVja1F1ZXVlID0gKCkgPT4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgaW50ZXJ2YWwgPSBzZXRJbnRlcnZhbCgoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoZm9yY2VEaXNjb25uZWN0ICYmIHJldHJ5QXR0ZW1wdCA9PT0gNSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuY2xlYXJRdWV1ZXMoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLmdldFBlbmRpbmdSZXF1ZXN0UXVldWVTaXplKCkgPT09IDAgJiYgdGhpcy5nZXRTZW50UmVxdWVzdHNRdWV1ZVNpemUoKSA9PT0gMCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsZWFySW50ZXJ2YWwoaW50ZXJ2YWwpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc29sdmUodHJ1ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICByZXRyeUF0dGVtcHQgKz0gMTtcbiAgICAgICAgICAgICAgICAgICAgfSwgbXMpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB5aWVsZCBjaGVja1F1ZXVlKCk7XG4gICAgICAgICAgICB0aGlzLmRpc2Nvbm5lY3QoY29kZSwgZGF0YSk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZW1vdmVzIGFsbCBsaXN0ZW5lcnMgZm9yIHRoZSBzcGVjaWZpZWQgZXZlbnQgdHlwZS5cbiAgICAgKiBAcGFyYW0gdHlwZSAtIFRoZSBldmVudCB0eXBlIHRvIHJlbW92ZSB0aGUgbGlzdGVuZXJzIGZvclxuICAgICAqL1xuICAgIHJlbW92ZUFsbExpc3RlbmVycyh0eXBlKSB7XG4gICAgICAgIHRoaXMuX2V2ZW50RW1pdHRlci5yZW1vdmVBbGxMaXN0ZW5lcnModHlwZSk7XG4gICAgfVxuICAgIF9vbkVycm9yKGV2ZW50KSB7XG4gICAgICAgIC8vIGRvIG5vdCBlbWl0IGVycm9yIHdoaWxlIHRyeWluZyB0byByZWNvbm5lY3RcbiAgICAgICAgaWYgKHRoaXMuaXNSZWNvbm5lY3RpbmcpIHtcbiAgICAgICAgICAgIHRoaXMuX3JlY29ubmVjdCgpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5fZXZlbnRFbWl0dGVyLmVtaXQoJ2Vycm9yJywgZXZlbnQpO1xuICAgICAgICB9XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJlc2V0cyB0aGUgc29ja2V0LCByZW1vdmluZyBhbGwgbGlzdGVuZXJzIGFuZCBwZW5kaW5nIHJlcXVlc3RzXG4gICAgICovXG4gICAgcmVzZXQoKSB7XG4gICAgICAgIHRoaXMuX3NlbnRSZXF1ZXN0c1F1ZXVlLmNsZWFyKCk7XG4gICAgICAgIHRoaXMuX3BlbmRpbmdSZXF1ZXN0c1F1ZXVlLmNsZWFyKCk7XG4gICAgICAgIHRoaXMuX2luaXQoKTtcbiAgICAgICAgdGhpcy5fcmVtb3ZlU29ja2V0TGlzdGVuZXJzKCk7XG4gICAgICAgIHRoaXMuX2FkZFNvY2tldExpc3RlbmVycygpO1xuICAgIH1cbiAgICBfcmVjb25uZWN0KCkge1xuICAgICAgICBpZiAodGhpcy5pc1JlY29ubmVjdGluZykge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuaXNSZWNvbm5lY3RpbmcgPSB0cnVlO1xuICAgICAgICBpZiAodGhpcy5fc2VudFJlcXVlc3RzUXVldWUuc2l6ZSA+IDApIHtcbiAgICAgICAgICAgIHRoaXMuX3NlbnRSZXF1ZXN0c1F1ZXVlLmZvckVhY2goKHJlcXVlc3QsIGtleSkgPT4ge1xuICAgICAgICAgICAgICAgIHJlcXVlc3QuZGVmZXJyZWRQcm9taXNlLnJlamVjdChuZXcgUGVuZGluZ1JlcXVlc3RzT25SZWNvbm5lY3RpbmdFcnJvcigpKTtcbiAgICAgICAgICAgICAgICB0aGlzLl9zZW50UmVxdWVzdHNRdWV1ZS5kZWxldGUoa2V5KTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLl9yZWNvbm5lY3RBdHRlbXB0cyA8IHRoaXMuX3JlY29ubmVjdE9wdGlvbnMubWF4QXR0ZW1wdHMpIHtcbiAgICAgICAgICAgIHRoaXMuX3JlY29ubmVjdEF0dGVtcHRzICs9IDE7XG4gICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLl9yZW1vdmVTb2NrZXRMaXN0ZW5lcnMoKTtcbiAgICAgICAgICAgICAgICB0aGlzLmNvbm5lY3QoKTtcbiAgICAgICAgICAgICAgICB0aGlzLmlzUmVjb25uZWN0aW5nID0gZmFsc2U7XG4gICAgICAgICAgICB9LCB0aGlzLl9yZWNvbm5lY3RPcHRpb25zLmRlbGF5KTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuaXNSZWNvbm5lY3RpbmcgPSBmYWxzZTtcbiAgICAgICAgICAgIHRoaXMuX2NsZWFyUXVldWVzKCk7XG4gICAgICAgICAgICB0aGlzLl9yZW1vdmVTb2NrZXRMaXN0ZW5lcnMoKTtcbiAgICAgICAgICAgIHRoaXMuX2V2ZW50RW1pdHRlci5lbWl0KCdlcnJvcicsIG5ldyBNYXhBdHRlbXB0c1JlYWNoZWRPblJlY29ubmVjdGluZ0Vycm9yKHRoaXMuX3JlY29ubmVjdE9wdGlvbnMubWF4QXR0ZW1wdHMpKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiAgQ3JlYXRlcyBhIHJlcXVlc3Qgb2JqZWN0IHRvIGJlIHNlbnQgdG8gdGhlIHNlcnZlclxuICAgICAqL1xuICAgIHJlcXVlc3QocmVxdWVzdCkge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgaWYgKGlzTnVsbGlzaCh0aGlzLl9zb2NrZXRDb25uZWN0aW9uKSkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignQ29ubmVjdGlvbiBpcyB1bmRlZmluZWQnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIGlmIHNvY2tldCBkaXNjb25uZWN0ZWQgLSBvcGVuIGNvbm5lY3Rpb25cbiAgICAgICAgICAgIGlmICh0aGlzLmdldFN0YXR1cygpID09PSAnZGlzY29ubmVjdGVkJykge1xuICAgICAgICAgICAgICAgIHRoaXMuY29ubmVjdCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgcmVxdWVzdElkID0ganNvblJwYy5pc0JhdGNoUmVxdWVzdChyZXF1ZXN0KVxuICAgICAgICAgICAgICAgID8gcmVxdWVzdFswXS5pZFxuICAgICAgICAgICAgICAgIDogcmVxdWVzdC5pZDtcbiAgICAgICAgICAgIGlmICghcmVxdWVzdElkKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IFdlYjNXU1Byb3ZpZGVyRXJyb3IoJ1JlcXVlc3QgSWQgbm90IGRlZmluZWQnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICh0aGlzLl9zZW50UmVxdWVzdHNRdWV1ZS5oYXMocmVxdWVzdElkKSkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBSZXF1ZXN0QWxyZWFkeVNlbnRFcnJvcihyZXF1ZXN0SWQpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgZGVmZXJyZWRQcm9taXNlID0gbmV3IFdlYjNEZWZlcnJlZFByb21pc2UoKTtcbiAgICAgICAgICAgIGRlZmVycmVkUHJvbWlzZS5jYXRjaChlcnJvciA9PiB7XG4gICAgICAgICAgICAgICAgdGhpcy5fZXZlbnRFbWl0dGVyLmVtaXQoJ2Vycm9yJywgZXJyb3IpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBjb25zdCByZXFJdGVtID0ge1xuICAgICAgICAgICAgICAgIHBheWxvYWQ6IHJlcXVlc3QsXG4gICAgICAgICAgICAgICAgZGVmZXJyZWRQcm9taXNlLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIGlmICh0aGlzLmdldFN0YXR1cygpID09PSAnY29ubmVjdGluZycpIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9wZW5kaW5nUmVxdWVzdHNRdWV1ZS5zZXQocmVxdWVzdElkLCByZXFJdGVtKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gcmVxSXRlbS5kZWZlcnJlZFByb21pc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLl9zZW50UmVxdWVzdHNRdWV1ZS5zZXQocmVxdWVzdElkLCByZXFJdGVtKTtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgdGhpcy5fc2VuZFRvU29ja2V0KHJlcUl0ZW0ucGF5bG9hZCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9zZW50UmVxdWVzdHNRdWV1ZS5kZWxldGUocmVxdWVzdElkKTtcbiAgICAgICAgICAgICAgICB0aGlzLl9ldmVudEVtaXR0ZXIuZW1pdCgnZXJyb3InLCBlcnJvcik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gZGVmZXJyZWRQcm9taXNlO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgX29uQ29ubmVjdCgpIHtcbiAgICAgICAgdGhpcy5fY29ubmVjdGlvblN0YXR1cyA9ICdjb25uZWN0ZWQnO1xuICAgICAgICB0aGlzLl9yZWNvbm5lY3RBdHRlbXB0cyA9IDA7XG4gICAgICAgIHN1cGVyLl9vbkNvbm5lY3QoKTtcbiAgICAgICAgdGhpcy5fc2VuZFBlbmRpbmdSZXF1ZXN0cygpO1xuICAgIH1cbiAgICBfc2VuZFBlbmRpbmdSZXF1ZXN0cygpIHtcbiAgICAgICAgZm9yIChjb25zdCBbaWQsIHZhbHVlXSBvZiB0aGlzLl9wZW5kaW5nUmVxdWVzdHNRdWV1ZS5lbnRyaWVzKCkpIHtcbiAgICAgICAgICAgIHRoaXMuX3NlbmRUb1NvY2tldCh2YWx1ZS5wYXlsb2FkKTtcbiAgICAgICAgICAgIHRoaXMuX3BlbmRpbmdSZXF1ZXN0c1F1ZXVlLmRlbGV0ZShpZCk7XG4gICAgICAgICAgICB0aGlzLl9zZW50UmVxdWVzdHNRdWV1ZS5zZXQoaWQsIHZhbHVlKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBfb25NZXNzYWdlKGV2ZW50KSB7XG4gICAgICAgIGNvbnN0IHJlc3BvbnNlcyA9IHRoaXMuX3BhcnNlUmVzcG9uc2VzKGV2ZW50KTtcbiAgICAgICAgaWYgKGlzTnVsbGlzaChyZXNwb25zZXMpIHx8IHJlc3BvbnNlcy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBmb3IgKGNvbnN0IHJlc3BvbnNlIG9mIHJlc3BvbnNlcykge1xuICAgICAgICAgICAgaWYgKGpzb25ScGMuaXNSZXNwb25zZVdpdGhOb3RpZmljYXRpb24ocmVzcG9uc2UpICYmXG4gICAgICAgICAgICAgICAgcmVzcG9uc2UubWV0aG9kLmVuZHNXaXRoKCdfc3Vic2NyaXB0aW9uJykpIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9ldmVudEVtaXR0ZXIuZW1pdCgnbWVzc2FnZScsIHJlc3BvbnNlKTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCByZXF1ZXN0SWQgPSBqc29uUnBjLmlzQmF0Y2hSZXNwb25zZShyZXNwb25zZSlcbiAgICAgICAgICAgICAgICA/IHJlc3BvbnNlWzBdLmlkXG4gICAgICAgICAgICAgICAgOiByZXNwb25zZS5pZDtcbiAgICAgICAgICAgIGNvbnN0IHJlcXVlc3RJdGVtID0gdGhpcy5fc2VudFJlcXVlc3RzUXVldWUuZ2V0KHJlcXVlc3RJZCk7XG4gICAgICAgICAgICBpZiAoIXJlcXVlc3RJdGVtKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGpzb25ScGMuaXNCYXRjaFJlc3BvbnNlKHJlc3BvbnNlKSB8fFxuICAgICAgICAgICAgICAgIGpzb25ScGMuaXNSZXNwb25zZVdpdGhSZXN1bHQocmVzcG9uc2UpIHx8XG4gICAgICAgICAgICAgICAganNvblJwYy5pc1Jlc3BvbnNlV2l0aEVycm9yKHJlc3BvbnNlKSkge1xuICAgICAgICAgICAgICAgIHRoaXMuX2V2ZW50RW1pdHRlci5lbWl0KCdtZXNzYWdlJywgcmVzcG9uc2UpO1xuICAgICAgICAgICAgICAgIHJlcXVlc3RJdGVtLmRlZmVycmVkUHJvbWlzZS5yZXNvbHZlKHJlc3BvbnNlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXMuX3NlbnRSZXF1ZXN0c1F1ZXVlLmRlbGV0ZShyZXF1ZXN0SWQpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGNsZWFyUXVldWVzKGV2ZW50KSB7XG4gICAgICAgIHRoaXMuX2NsZWFyUXVldWVzKGV2ZW50KTtcbiAgICB9XG4gICAgX2NsZWFyUXVldWVzKGV2ZW50KSB7XG4gICAgICAgIGlmICh0aGlzLl9wZW5kaW5nUmVxdWVzdHNRdWV1ZS5zaXplID4gMCkge1xuICAgICAgICAgICAgdGhpcy5fcGVuZGluZ1JlcXVlc3RzUXVldWUuZm9yRWFjaCgocmVxdWVzdCwga2V5KSA9PiB7XG4gICAgICAgICAgICAgICAgcmVxdWVzdC5kZWZlcnJlZFByb21pc2UucmVqZWN0KG5ldyBDb25uZWN0aW9uTm90T3BlbkVycm9yKGV2ZW50KSk7XG4gICAgICAgICAgICAgICAgdGhpcy5fcGVuZGluZ1JlcXVlc3RzUXVldWUuZGVsZXRlKGtleSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5fc2VudFJlcXVlc3RzUXVldWUuc2l6ZSA+IDApIHtcbiAgICAgICAgICAgIHRoaXMuX3NlbnRSZXF1ZXN0c1F1ZXVlLmZvckVhY2goKHJlcXVlc3QsIGtleSkgPT4ge1xuICAgICAgICAgICAgICAgIHJlcXVlc3QuZGVmZXJyZWRQcm9taXNlLnJlamVjdChuZXcgQ29ubmVjdGlvbk5vdE9wZW5FcnJvcihldmVudCkpO1xuICAgICAgICAgICAgICAgIHRoaXMuX3NlbnRSZXF1ZXN0c1F1ZXVlLmRlbGV0ZShrZXkpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5fcmVtb3ZlU29ja2V0TGlzdGVuZXJzKCk7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c29ja2V0X3Byb3ZpZGVyLmpzLm1hcCJdLCJuYW1lcyI6WyJfX2F3YWl0ZXIiLCJ0aGlzQXJnIiwiX2FyZ3VtZW50cyIsIlAiLCJnZW5lcmF0b3IiLCJhZG9wdCIsInZhbHVlIiwicmVzb2x2ZSIsIlByb21pc2UiLCJyZWplY3QiLCJmdWxmaWxsZWQiLCJzdGVwIiwibmV4dCIsImUiLCJyZWplY3RlZCIsInJlc3VsdCIsImRvbmUiLCJ0aGVuIiwiYXBwbHkiLCJDb25uZWN0aW9uRXJyb3IiLCJDb25uZWN0aW9uTm90T3BlbkVycm9yIiwiSW52YWxpZENsaWVudEVycm9yIiwiTWF4QXR0ZW1wdHNSZWFjaGVkT25SZWNvbm5lY3RpbmdFcnJvciIsIlBlbmRpbmdSZXF1ZXN0c09uUmVjb25uZWN0aW5nRXJyb3IiLCJSZXF1ZXN0QWxyZWFkeVNlbnRFcnJvciIsIldlYjNXU1Byb3ZpZGVyRXJyb3IiLCJFaXAxMTkzUHJvdmlkZXIiLCJDaHVua1Jlc3BvbnNlUGFyc2VyIiwiaXNOdWxsaXNoIiwiV2ViM0RlZmVycmVkUHJvbWlzZSIsImpzb25ScGMiLCJERUZBVUxUX1JFQ09OTkVDVElPTl9PUFRJT05TIiwiYXV0b1JlY29ubmVjdCIsImRlbGF5IiwibWF4QXR0ZW1wdHMiLCJOT1JNQUxfQ0xPU0VfQ09ERSIsIlNvY2tldFByb3ZpZGVyIiwiY29uc3RydWN0b3IiLCJzb2NrZXRQYXRoIiwic29ja2V0T3B0aW9ucyIsInJlY29ubmVjdE9wdGlvbnMiLCJfY29ubmVjdGlvblN0YXR1cyIsIl9vbk1lc3NhZ2VIYW5kbGVyIiwiX29uTWVzc2FnZSIsImJpbmQiLCJfb25PcGVuSGFuZGxlciIsIl9vbkNvbm5lY3QiLCJfb25DbG9zZUhhbmRsZXIiLCJfb25DbG9zZUV2ZW50IiwiX29uRXJyb3JIYW5kbGVyIiwiX29uRXJyb3IiLCJfdmFsaWRhdGVQcm92aWRlclBhdGgiLCJfc29ja2V0UGF0aCIsIl9zb2NrZXRPcHRpb25zIiwiX3JlY29ubmVjdE9wdGlvbnMiLCJPYmplY3QiLCJhc3NpZ24iLCJfcGVuZGluZ1JlcXVlc3RzUXVldWUiLCJNYXAiLCJfc2VudFJlcXVlc3RzUXVldWUiLCJfaW5pdCIsImNvbm5lY3QiLCJjaHVua1Jlc3BvbnNlUGFyc2VyIiwiX2V2ZW50RW1pdHRlciIsIm9uRXJyb3IiLCJfY2xlYXJRdWV1ZXMiLCJpc1JlY29ubmVjdGluZyIsIlNvY2tldENvbm5lY3Rpb24iLCJfc29ja2V0Q29ubmVjdGlvbiIsIl9yZWNvbm5lY3RBdHRlbXB0cyIsIl9vcGVuU29ja2V0Q29ubmVjdGlvbiIsIl9hZGRTb2NrZXRMaXN0ZW5lcnMiLCJtZXNzYWdlIiwic2V0SW1tZWRpYXRlIiwiX3JlY29ubmVjdCIsInBhdGgiLCJnZXRQZW5kaW5nUmVxdWVzdFF1ZXVlU2l6ZSIsInNpemUiLCJnZXRTZW50UmVxdWVzdHNRdWV1ZVNpemUiLCJzdXBwb3J0c1N1YnNjcmlwdGlvbnMiLCJvbiIsInR5cGUiLCJsaXN0ZW5lciIsIm9uY2UiLCJyZW1vdmVMaXN0ZW5lciIsIl9vbkRpc2Nvbm5lY3QiLCJjb2RlIiwiZGF0YSIsImRpc2Nvbm5lY3QiLCJkaXNjb25uZWN0Q29kZSIsIl9yZW1vdmVTb2NrZXRMaXN0ZW5lcnMiLCJnZXRTdGF0dXMiLCJfY2xvc2VTb2NrZXRDb25uZWN0aW9uIiwic2FmZURpc2Nvbm5lY3QiLCJmb3JjZURpc2Nvbm5lY3QiLCJtcyIsInJldHJ5QXR0ZW1wdCIsImNoZWNrUXVldWUiLCJpbnRlcnZhbCIsInNldEludGVydmFsIiwiY2xlYXJRdWV1ZXMiLCJjbGVhckludGVydmFsIiwicmVtb3ZlQWxsTGlzdGVuZXJzIiwiZXZlbnQiLCJlbWl0IiwicmVzZXQiLCJjbGVhciIsImZvckVhY2giLCJyZXF1ZXN0Iiwia2V5IiwiZGVmZXJyZWRQcm9taXNlIiwiZGVsZXRlIiwic2V0VGltZW91dCIsIkVycm9yIiwicmVxdWVzdElkIiwiaXNCYXRjaFJlcXVlc3QiLCJpZCIsImhhcyIsImNhdGNoIiwiZXJyb3IiLCJyZXFJdGVtIiwicGF5bG9hZCIsInNldCIsIl9zZW5kVG9Tb2NrZXQiLCJfc2VuZFBlbmRpbmdSZXF1ZXN0cyIsImVudHJpZXMiLCJyZXNwb25zZXMiLCJfcGFyc2VSZXNwb25zZXMiLCJsZW5ndGgiLCJyZXNwb25zZSIsImlzUmVzcG9uc2VXaXRoTm90aWZpY2F0aW9uIiwibWV0aG9kIiwiZW5kc1dpdGgiLCJpc0JhdGNoUmVzcG9uc2UiLCJyZXF1ZXN0SXRlbSIsImdldCIsImlzUmVzcG9uc2VXaXRoUmVzdWx0IiwiaXNSZXNwb25zZVdpdGhFcnJvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-utils/lib/esm/socket_provider.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-utils/lib/esm/string_manipulation.js":
/*!****************************************************************!*\
  !*** ./node_modules/web3-utils/lib/esm/string_manipulation.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fromTwosComplement: () => (/* binding */ fromTwosComplement),\n/* harmony export */   leftPad: () => (/* binding */ leftPad),\n/* harmony export */   padLeft: () => (/* binding */ padLeft),\n/* harmony export */   padRight: () => (/* binding */ padRight),\n/* harmony export */   rightPad: () => (/* binding */ rightPad),\n/* harmony export */   toTwosComplement: () => (/* binding */ toTwosComplement)\n/* harmony export */ });\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-errors */ \"(ssr)/./node_modules/web3-errors/lib/esm/index.js\");\n/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-validator */ \"(ssr)/./node_modules/web3-validator/lib/esm/index.js\");\n/* harmony import */ var _converters_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./converters.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/converters.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ \n\n\n/**\n * Adds a padding on the left of a string, if value is a integer or bigInt will be converted to a hex string.\n * @param value - The value to be padded.\n * @param characterAmount - The amount of characters the string should have.\n * @param sign - The sign to be added (default is 0).\n * @returns The padded string.\n *\n * @example\n * ```ts\n *\n * console.log(web3.utils.padLeft('0x123', 10));\n * >0x0000000123\n * ```\n */ const padLeft = (value, characterAmount, sign = \"0\")=>{\n    // To avoid duplicate code and circular dependency we will\n    // use `padLeft` implementation from `web3-validator`\n    if (typeof value === \"string\") {\n        if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isHexStrict)(value)) {\n            return value.padStart(characterAmount, sign);\n        }\n        return web3_validator__WEBPACK_IMPORTED_MODULE_1__.utils.padLeft(value, characterAmount, sign);\n    }\n    web3_validator__WEBPACK_IMPORTED_MODULE_1__.validator.validate([\n        \"int\"\n    ], [\n        value\n    ]);\n    return web3_validator__WEBPACK_IMPORTED_MODULE_1__.utils.padLeft(value, characterAmount, sign);\n};\n/**\n * Adds a padding on the right of a string, if value is a integer or bigInt will be converted to a hex string.\n * @param value - The value to be padded.\n * @param characterAmount - The amount of characters the string should have.\n * @param sign - The sign to be added (default is 0).\n * @returns The padded string.\n *\n * @example\n * ```ts\n * console.log(web3.utils.padRight('0x123', 10));\n * > 0x1230000000\n *\n * console.log(web3.utils.padRight('0x123', 10, '1'));\n * > 0x1231111111\n * ```\n */ const padRight = (value, characterAmount, sign = \"0\")=>{\n    if (typeof value === \"string\" && !(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isHexStrict)(value)) {\n        return value.padEnd(characterAmount, sign);\n    }\n    web3_validator__WEBPACK_IMPORTED_MODULE_1__.validator.validate([\n        \"int\"\n    ], [\n        value\n    ]);\n    const hexString = typeof value === \"string\" && (0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isHexStrict)(value) ? value : (0,_converters_js__WEBPACK_IMPORTED_MODULE_2__.numberToHex)(value);\n    const prefixLength = hexString.startsWith(\"-\") ? 3 : 2;\n    return hexString.padEnd(characterAmount + prefixLength, sign);\n};\n/**\n * Adds a padding on the right of a string, if value is a integer or bigInt will be converted to a hex string. @alias `padRight`\n */ const rightPad = padRight;\n/**\n * Adds a padding on the left of a string, if value is a integer or bigInt will be converted to a hex string. @alias `padLeft`\n */ const leftPad = padLeft;\n/**\n * Converts a negative number into the two’s complement and return a hexstring of 64 nibbles.\n * @param value - The value to be converted.\n * @param nibbleWidth - The nibble width of the hex string (default is 64).\n *\n * @returns The hex string of the two’s complement.\n *\n * @example\n * ```ts\n * console.log(web3.utils.toTwosComplement(13, 32));\n * > 0x0000000000000000000000000000000d\n *\n * console.log(web3.utils.toTwosComplement('-0x1', 32));\n * > 0xffffffffffffffffffffffffffffffff\n *\n * console.log(web3.utils.toTwosComplement(BigInt('9007199254740992'), 32));\n * > 0x00000000000000000020000000000000\n * ```\n */ const toTwosComplement = (value, nibbleWidth = 64)=>{\n    web3_validator__WEBPACK_IMPORTED_MODULE_1__.validator.validate([\n        \"int\"\n    ], [\n        value\n    ]);\n    const val = (0,_converters_js__WEBPACK_IMPORTED_MODULE_2__.toNumber)(value);\n    if (val >= 0) return padLeft((0,_converters_js__WEBPACK_IMPORTED_MODULE_2__.toHex)(val), nibbleWidth);\n    const largestBit = (0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.bigintPower)(BigInt(2), BigInt(nibbleWidth * 4));\n    if (-val >= largestBit) {\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.NibbleWidthError(`value: ${value}, nibbleWidth: ${nibbleWidth}`);\n    }\n    const updatedVal = BigInt(val);\n    const complement = updatedVal + largestBit;\n    return padLeft((0,_converters_js__WEBPACK_IMPORTED_MODULE_2__.numberToHex)(complement), nibbleWidth);\n};\n/**\n * Converts the twos complement into a decimal number or big int.\n * @param value - The value to be converted.\n * @param nibbleWidth - The nibble width of the hex string (default is 64).\n * @returns The decimal number or big int.\n *\n * @example\n * ```ts\n * console.log(web3.utils.fromTwosComplement(''0x0000000000000000000000000000000d', 32'));\n * > 13\n *\n * console.log(web3.utils.fromTwosComplement('0x00000000000000000020000000000000', 32));\n * > 9007199254740992n\n * ```\n */ const fromTwosComplement = (value, nibbleWidth = 64)=>{\n    web3_validator__WEBPACK_IMPORTED_MODULE_1__.validator.validate([\n        \"int\"\n    ], [\n        value\n    ]);\n    const val = (0,_converters_js__WEBPACK_IMPORTED_MODULE_2__.toNumber)(value);\n    if (val < 0) return val;\n    const largestBit = Math.ceil(Math.log(Number(val)) / Math.log(2));\n    if (largestBit > nibbleWidth * 4) throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.NibbleWidthError(`value: \"${value}\", nibbleWidth: \"${nibbleWidth}\"`);\n    // check the largest bit to see if negative\n    if (nibbleWidth * 4 !== largestBit) return val;\n    const complement = (0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.bigintPower)(BigInt(2), BigInt(nibbleWidth) * BigInt(4));\n    return (0,_converters_js__WEBPACK_IMPORTED_MODULE_2__.toNumber)(BigInt(val) - complement);\n}; //# sourceMappingURL=string_manipulation.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-utils/lib/esm/string_manipulation.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-utils/lib/esm/uint8array.js":
/*!*******************************************************!*\
  !*** ./node_modules/web3-utils/lib/esm/uint8array.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   uint8ArrayConcat: () => (/* binding */ uint8ArrayConcat),\n/* harmony export */   uint8ArrayEquals: () => (/* binding */ uint8ArrayEquals)\n/* harmony export */ });\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ function uint8ArrayConcat(...parts) {\n    const length = parts.reduce((prev, part)=>{\n        const agg = prev + part.length;\n        return agg;\n    }, 0);\n    const result = new Uint8Array(length);\n    let offset = 0;\n    for (const part of parts){\n        result.set(part, offset);\n        offset += part.length;\n    }\n    return result;\n}\n/**\n * Returns true if the two passed Uint8Arrays have the same content\n */ function uint8ArrayEquals(a, b) {\n    if (a === b) {\n        return true;\n    }\n    if (a.byteLength !== b.byteLength) {\n        return false;\n    }\n    for(let i = 0; i < a.byteLength; i += 1){\n        if (a[i] !== b[i]) {\n            return false;\n        }\n    }\n    return true;\n} //# sourceMappingURL=uint8array.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy11dGlscy9saWIvZXNtL3VpbnQ4YXJyYXkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTs7Ozs7Ozs7Ozs7Ozs7O0FBZUEsR0FDTyxTQUFTQSxpQkFBaUIsR0FBR0MsS0FBSztJQUNyQyxNQUFNQyxTQUFTRCxNQUFNRSxNQUFNLENBQUMsQ0FBQ0MsTUFBTUM7UUFDL0IsTUFBTUMsTUFBTUYsT0FBT0MsS0FBS0gsTUFBTTtRQUM5QixPQUFPSTtJQUNYLEdBQUc7SUFDSCxNQUFNQyxTQUFTLElBQUlDLFdBQVdOO0lBQzlCLElBQUlPLFNBQVM7SUFDYixLQUFLLE1BQU1KLFFBQVFKLE1BQU87UUFDdEJNLE9BQU9HLEdBQUcsQ0FBQ0wsTUFBTUk7UUFDakJBLFVBQVVKLEtBQUtILE1BQU07SUFDekI7SUFDQSxPQUFPSztBQUNYO0FBQ0E7O0NBRUMsR0FDTSxTQUFTSSxpQkFBaUJDLENBQUMsRUFBRUMsQ0FBQztJQUNqQyxJQUFJRCxNQUFNQyxHQUFHO1FBQ1QsT0FBTztJQUNYO0lBQ0EsSUFBSUQsRUFBRUUsVUFBVSxLQUFLRCxFQUFFQyxVQUFVLEVBQUU7UUFDL0IsT0FBTztJQUNYO0lBQ0EsSUFBSyxJQUFJQyxJQUFJLEdBQUdBLElBQUlILEVBQUVFLFVBQVUsRUFBRUMsS0FBSyxFQUFHO1FBQ3RDLElBQUlILENBQUMsQ0FBQ0csRUFBRSxLQUFLRixDQUFDLENBQUNFLEVBQUUsRUFBRTtZQUNmLE9BQU87UUFDWDtJQUNKO0lBQ0EsT0FBTztBQUNYLEVBQ0Esc0NBQXNDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvd2ViMy11dGlscy9saWIvZXNtL3VpbnQ4YXJyYXkuanM/ZDJlOCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuVGhpcyBmaWxlIGlzIHBhcnQgb2Ygd2ViMy5qcy5cblxud2ViMy5qcyBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5XG5pdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnlcbnRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yXG4oYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLlxuXG53ZWIzLmpzIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsXG5idXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZlxuTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZVxuR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG5cbllvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZVxuYWxvbmcgd2l0aCB3ZWIzLmpzLiAgSWYgbm90LCBzZWUgPGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LlxuKi9cbmV4cG9ydCBmdW5jdGlvbiB1aW50OEFycmF5Q29uY2F0KC4uLnBhcnRzKSB7XG4gICAgY29uc3QgbGVuZ3RoID0gcGFydHMucmVkdWNlKChwcmV2LCBwYXJ0KSA9PiB7XG4gICAgICAgIGNvbnN0IGFnZyA9IHByZXYgKyBwYXJ0Lmxlbmd0aDtcbiAgICAgICAgcmV0dXJuIGFnZztcbiAgICB9LCAwKTtcbiAgICBjb25zdCByZXN1bHQgPSBuZXcgVWludDhBcnJheShsZW5ndGgpO1xuICAgIGxldCBvZmZzZXQgPSAwO1xuICAgIGZvciAoY29uc3QgcGFydCBvZiBwYXJ0cykge1xuICAgICAgICByZXN1bHQuc2V0KHBhcnQsIG9mZnNldCk7XG4gICAgICAgIG9mZnNldCArPSBwYXJ0Lmxlbmd0aDtcbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbn1cbi8qKlxuICogUmV0dXJucyB0cnVlIGlmIHRoZSB0d28gcGFzc2VkIFVpbnQ4QXJyYXlzIGhhdmUgdGhlIHNhbWUgY29udGVudFxuICovXG5leHBvcnQgZnVuY3Rpb24gdWludDhBcnJheUVxdWFscyhhLCBiKSB7XG4gICAgaWYgKGEgPT09IGIpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIGlmIChhLmJ5dGVMZW5ndGggIT09IGIuYnl0ZUxlbmd0aCkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgYS5ieXRlTGVuZ3RoOyBpICs9IDEpIHtcbiAgICAgICAgaWYgKGFbaV0gIT09IGJbaV0pIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gdHJ1ZTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXVpbnQ4YXJyYXkuanMubWFwIl0sIm5hbWVzIjpbInVpbnQ4QXJyYXlDb25jYXQiLCJwYXJ0cyIsImxlbmd0aCIsInJlZHVjZSIsInByZXYiLCJwYXJ0IiwiYWdnIiwicmVzdWx0IiwiVWludDhBcnJheSIsIm9mZnNldCIsInNldCIsInVpbnQ4QXJyYXlFcXVhbHMiLCJhIiwiYiIsImJ5dGVMZW5ndGgiLCJpIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-utils/lib/esm/uint8array.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-utils/lib/esm/uuid.js":
/*!*************************************************!*\
  !*** ./node_modules/web3-utils/lib/esm/uuid.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   uuidV4: () => (/* binding */ uuidV4)\n/* harmony export */ });\n/* harmony import */ var _converters_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./converters.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/converters.js\");\n/* harmony import */ var _random_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./random.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/random.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ \n\n/**\n * Generate a version 4 (random) uuid\n * https://github.com/uuidjs/uuid/blob/main/src/v4.js#L5\n * @returns - A version 4 uuid of the form xxxxxxxx-xxxx-4xxx-xxxx-xxxxxxxxxxxx\n * @example\n * ```ts\n * console.log(web3.utils.uuidV4());\n * > \"1b9d6bcd-bbfd-4b2d-9b5d-ab8dfbbd4bed\"\n * ```\n */ const uuidV4 = ()=>{\n    const bytes = (0,_random_js__WEBPACK_IMPORTED_MODULE_1__.randomBytes)(16);\n    // https://github.com/ethers-io/ethers.js/blob/ce8f1e4015c0f27bf178238770b1325136e3351a/packages/json-wallets/src.ts/utils.ts#L54\n    // Section: 4.1.3:\n    // - time_hi_and_version[12:16] = 0b0100\n    /* eslint-disable-next-line */ bytes[6] = bytes[6] & 0x0f | 0x40;\n    // Section 4.4\n    // - clock_seq_hi_and_reserved[6] = 0b0\n    // - clock_seq_hi_and_reserved[7] = 0b1\n    /* eslint-disable-next-line */ bytes[8] = bytes[8] & 0x3f | 0x80;\n    const hexString = (0,_converters_js__WEBPACK_IMPORTED_MODULE_0__.bytesToHex)(bytes);\n    return [\n        hexString.substring(2, 10),\n        hexString.substring(10, 14),\n        hexString.substring(14, 18),\n        hexString.substring(18, 22),\n        hexString.substring(22, 34)\n    ].join(\"-\");\n}; //# sourceMappingURL=uuid.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy11dGlscy9saWIvZXNtL3V1aWQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7Ozs7Ozs7Ozs7Ozs7OztBQWVBLEdBQzZDO0FBQ0g7QUFDMUM7Ozs7Ozs7OztDQVNDLEdBQ00sTUFBTUUsU0FBUztJQUNsQixNQUFNQyxRQUFRRix1REFBV0EsQ0FBQztJQUMxQixpSUFBaUk7SUFDakksa0JBQWtCO0lBQ2xCLHdDQUF3QztJQUN4Qyw0QkFBNEIsR0FDNUJFLEtBQUssQ0FBQyxFQUFFLEdBQUcsS0FBTSxDQUFDLEVBQUUsR0FBRyxPQUFRO0lBQy9CLGNBQWM7SUFDZCx1Q0FBdUM7SUFDdkMsdUNBQXVDO0lBQ3ZDLDRCQUE0QixHQUM1QkEsS0FBSyxDQUFDLEVBQUUsR0FBRyxLQUFNLENBQUMsRUFBRSxHQUFHLE9BQVE7SUFDL0IsTUFBTUMsWUFBWUosMERBQVVBLENBQUNHO0lBQzdCLE9BQU87UUFDSEMsVUFBVUMsU0FBUyxDQUFDLEdBQUc7UUFDdkJELFVBQVVDLFNBQVMsQ0FBQyxJQUFJO1FBQ3hCRCxVQUFVQyxTQUFTLENBQUMsSUFBSTtRQUN4QkQsVUFBVUMsU0FBUyxDQUFDLElBQUk7UUFDeEJELFVBQVVDLFNBQVMsQ0FBQyxJQUFJO0tBQzNCLENBQUNDLElBQUksQ0FBQztBQUNYLEVBQUUsQ0FDRixnQ0FBZ0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mcm9udGVuZC8uL25vZGVfbW9kdWxlcy93ZWIzLXV0aWxzL2xpYi9lc20vdXVpZC5qcz9lMDI2Il0sInNvdXJjZXNDb250ZW50IjpbIi8qXG5UaGlzIGZpbGUgaXMgcGFydCBvZiB3ZWIzLmpzLlxuXG53ZWIzLmpzIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnlcbml0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieVxudGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSwgb3JcbihhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uXG5cbndlYjMuanMgaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCxcbmJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mXG5NRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlXG5HTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy5cblxuWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG5hbG9uZyB3aXRoIHdlYjMuanMuICBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uXG4qL1xuaW1wb3J0IHsgYnl0ZXNUb0hleCB9IGZyb20gJy4vY29udmVydGVycy5qcyc7XG5pbXBvcnQgeyByYW5kb21CeXRlcyB9IGZyb20gJy4vcmFuZG9tLmpzJztcbi8qKlxuICogR2VuZXJhdGUgYSB2ZXJzaW9uIDQgKHJhbmRvbSkgdXVpZFxuICogaHR0cHM6Ly9naXRodWIuY29tL3V1aWRqcy91dWlkL2Jsb2IvbWFpbi9zcmMvdjQuanMjTDVcbiAqIEByZXR1cm5zIC0gQSB2ZXJzaW9uIDQgdXVpZCBvZiB0aGUgZm9ybSB4eHh4eHh4eC14eHh4LTR4eHgteHh4eC14eHh4eHh4eHh4eHhcbiAqIEBleGFtcGxlXG4gKiBgYGB0c1xuICogY29uc29sZS5sb2cod2ViMy51dGlscy51dWlkVjQoKSk7XG4gKiA+IFwiMWI5ZDZiY2QtYmJmZC00YjJkLTliNWQtYWI4ZGZiYmQ0YmVkXCJcbiAqIGBgYFxuICovXG5leHBvcnQgY29uc3QgdXVpZFY0ID0gKCkgPT4ge1xuICAgIGNvbnN0IGJ5dGVzID0gcmFuZG9tQnl0ZXMoMTYpO1xuICAgIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9ldGhlcnMtaW8vZXRoZXJzLmpzL2Jsb2IvY2U4ZjFlNDAxNWMwZjI3YmYxNzgyMzg3NzBiMTMyNTEzNmUzMzUxYS9wYWNrYWdlcy9qc29uLXdhbGxldHMvc3JjLnRzL3V0aWxzLnRzI0w1NFxuICAgIC8vIFNlY3Rpb246IDQuMS4zOlxuICAgIC8vIC0gdGltZV9oaV9hbmRfdmVyc2lvblsxMjoxNl0gPSAwYjAxMDBcbiAgICAvKiBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgKi9cbiAgICBieXRlc1s2XSA9IChieXRlc1s2XSAmIDB4MGYpIHwgMHg0MDtcbiAgICAvLyBTZWN0aW9uIDQuNFxuICAgIC8vIC0gY2xvY2tfc2VxX2hpX2FuZF9yZXNlcnZlZFs2XSA9IDBiMFxuICAgIC8vIC0gY2xvY2tfc2VxX2hpX2FuZF9yZXNlcnZlZFs3XSA9IDBiMVxuICAgIC8qIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSAqL1xuICAgIGJ5dGVzWzhdID0gKGJ5dGVzWzhdICYgMHgzZikgfCAweDgwO1xuICAgIGNvbnN0IGhleFN0cmluZyA9IGJ5dGVzVG9IZXgoYnl0ZXMpO1xuICAgIHJldHVybiBbXG4gICAgICAgIGhleFN0cmluZy5zdWJzdHJpbmcoMiwgMTApLFxuICAgICAgICBoZXhTdHJpbmcuc3Vic3RyaW5nKDEwLCAxNCksXG4gICAgICAgIGhleFN0cmluZy5zdWJzdHJpbmcoMTQsIDE4KSxcbiAgICAgICAgaGV4U3RyaW5nLnN1YnN0cmluZygxOCwgMjIpLFxuICAgICAgICBoZXhTdHJpbmcuc3Vic3RyaW5nKDIyLCAzNCksXG4gICAgXS5qb2luKCctJyk7XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXVpZC5qcy5tYXAiXSwibmFtZXMiOlsiYnl0ZXNUb0hleCIsInJhbmRvbUJ5dGVzIiwidXVpZFY0IiwiYnl0ZXMiLCJoZXhTdHJpbmciLCJzdWJzdHJpbmciLCJqb2luIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-utils/lib/esm/uuid.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-utils/lib/esm/validation.js":
/*!*******************************************************!*\
  !*** ./node_modules/web3-utils/lib/esm/validation.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   checkAddressCheckSum: () => (/* binding */ checkAddressCheckSum),\n/* harmony export */   compareBlockNumbers: () => (/* binding */ compareBlockNumbers),\n/* harmony export */   isAddress: () => (/* binding */ isAddress),\n/* harmony export */   isBloom: () => (/* binding */ isBloom),\n/* harmony export */   isContractAddressInBloom: () => (/* binding */ isContractAddressInBloom),\n/* harmony export */   isContractInitOptions: () => (/* binding */ isContractInitOptions),\n/* harmony export */   isHex: () => (/* binding */ isHex),\n/* harmony export */   isHexStrict: () => (/* binding */ isHexStrict),\n/* harmony export */   isInBloom: () => (/* binding */ isInBloom),\n/* harmony export */   isNullish: () => (/* binding */ isNullish),\n/* harmony export */   isTopic: () => (/* binding */ isTopic),\n/* harmony export */   isTopicInBloom: () => (/* binding */ isTopicInBloom),\n/* harmony export */   isUserEthereumAddressInBloom: () => (/* binding */ isUserEthereumAddressInBloom)\n/* harmony export */ });\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-errors */ \"(ssr)/./node_modules/web3-errors/lib/esm/index.js\");\n/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-validator */ \"(ssr)/./node_modules/web3-validator/lib/esm/index.js\");\n/* harmony import */ var web3_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-types */ \"(ssr)/./node_modules/web3-types/lib/esm/index.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ \n\n\n/**\n * @deprecated Will be removed in next release. Please use `web3-validator` package instead.\n */ const isHexStrict = web3_validator__WEBPACK_IMPORTED_MODULE_1__.isHexStrict;\n/**\n * returns true if input is a hexstring, number or bigint\n *\n * @deprecated Will be removed in next release. Please use `web3-validator` package instead.\n */ const isHex = web3_validator__WEBPACK_IMPORTED_MODULE_1__.isHex;\n/**\n * Checks the checksum of a given address. Will also return false on non-checksum addresses.\n *\n * @deprecated Will be removed in next release. Please use `web3-validator` package instead.\n */ const checkAddressCheckSum = web3_validator__WEBPACK_IMPORTED_MODULE_1__.checkAddressCheckSum;\n/**\n * Checks if a given string is a valid Ethereum address. It will also check the checksum, if the address has upper and lowercase letters.\n *\n * @deprecated Will be removed in next release. Please use `web3-validator` package instead.\n */ const isAddress = web3_validator__WEBPACK_IMPORTED_MODULE_1__.isAddress;\n/**\n * Returns true if the bloom is a valid bloom\n * https://github.com/joshstevens19/ethereum-bloom-filters/blob/fbeb47b70b46243c3963fe1c2988d7461ef17236/src/index.ts#L7\n *\n * @deprecated Will be removed in next release. Please use `web3-validator` package instead.\n */ const isBloom = web3_validator__WEBPACK_IMPORTED_MODULE_1__.isBloom;\n/**\n * Returns true if the value is part of the given bloom\n * note: false positives are possible.\n *\n * @deprecated Will be removed in next release. Please use `web3-validator` package instead.\n */ const isInBloom = web3_validator__WEBPACK_IMPORTED_MODULE_1__.isInBloom;\n/**\n * Returns true if the ethereum users address is part of the given bloom note: false positives are possible.\n *\n * @deprecated Will be removed in next release. Please use `web3-validator` package instead.\n */ const isUserEthereumAddressInBloom = web3_validator__WEBPACK_IMPORTED_MODULE_1__.isUserEthereumAddressInBloom;\n/**\n * Returns true if the contract address is part of the given bloom.\n * note: false positives are possible.\n *\n * @deprecated Will be removed in next release. Please use `web3-validator` package instead.\n */ const isContractAddressInBloom = web3_validator__WEBPACK_IMPORTED_MODULE_1__.isContractAddressInBloom;\n/**\n * Checks if its a valid topic\n *\n * @deprecated Will be removed in next release. Please use `web3-validator` package instead.\n */ const isTopic = web3_validator__WEBPACK_IMPORTED_MODULE_1__.isTopic;\n/**\n * Returns true if the topic is part of the given bloom.\n * note: false positives are possible.\n *\n * @deprecated Will be removed in next release. Please use `web3-validator` package instead.\n */ const isTopicInBloom = web3_validator__WEBPACK_IMPORTED_MODULE_1__.isTopicInBloom;\n/**\n * Compares between block A and block B\n * @param blockA - Block number or string\n * @param blockB - Block number or string\n *\n * @returns - Returns -1 if a \\< b, returns 1 if a \\> b and returns 0 if a == b\n *\n * @example\n * ```ts\n * console.log(web3.utils.compareBlockNumbers('latest', 'pending'));\n * > -1\n *\n * console.log(web3.utils.compareBlockNumbers(12, 11));\n * > 1\n * ```\n */ const compareBlockNumbers = (blockA, blockB)=>{\n    const isABlockTag = typeof blockA === \"string\" && (0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isBlockTag)(blockA);\n    const isBBlockTag = typeof blockB === \"string\" && (0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isBlockTag)(blockB);\n    if (blockA === blockB || (blockA === \"earliest\" || blockA === 0) && (blockB === \"earliest\" || blockB === 0) // only exception compare blocktag with number\n    ) {\n        return 0;\n    }\n    if (blockA === \"earliest\" && blockB > 0) {\n        return -1;\n    }\n    if (blockB === \"earliest\" && blockA > 0) {\n        return 1;\n    }\n    if (isABlockTag && isBBlockTag) {\n        // Increasing order:  earliest, finalized , safe, latest, pending\n        const tagsOrder = {\n            [web3_types__WEBPACK_IMPORTED_MODULE_2__.BlockTags.EARLIEST]: 1,\n            [web3_types__WEBPACK_IMPORTED_MODULE_2__.BlockTags.FINALIZED]: 2,\n            [web3_types__WEBPACK_IMPORTED_MODULE_2__.BlockTags.SAFE]: 3,\n            [web3_types__WEBPACK_IMPORTED_MODULE_2__.BlockTags.LATEST]: 4,\n            [web3_types__WEBPACK_IMPORTED_MODULE_2__.BlockTags.PENDING]: 5\n        };\n        if (tagsOrder[blockA] < tagsOrder[blockB]) {\n            return -1;\n        }\n        return 1;\n    }\n    if (isABlockTag && !isBBlockTag || !isABlockTag && isBBlockTag) {\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.InvalidBlockError(\"Cannot compare blocktag with provided non-blocktag input.\");\n    }\n    const bigIntA = BigInt(blockA);\n    const bigIntB = BigInt(blockB);\n    if (bigIntA < bigIntB) {\n        return -1;\n    }\n    if (bigIntA === bigIntB) {\n        return 0;\n    }\n    return 1;\n};\nconst isContractInitOptions = (options)=>typeof options === \"object\" && !(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(options) && Object.keys(options).length !== 0 && [\n        \"input\",\n        \"data\",\n        \"from\",\n        \"gas\",\n        \"gasPrice\",\n        \"gasLimit\",\n        \"address\",\n        \"jsonInterface\",\n        \"syncWithContext\",\n        \"dataInputFill\"\n    ].some((key)=>key in options);\nconst isNullish = web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish; //# sourceMappingURL=validation.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-utils/lib/esm/validation.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-utils/lib/esm/web3_deferred_promise.js":
/*!******************************************************************!*\
  !*** ./node_modules/web3-utils/lib/esm/web3_deferred_promise.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Web3DeferredPromise: () => (/* binding */ Web3DeferredPromise)\n/* harmony export */ });\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-errors */ \"(ssr)/./node_modules/web3-errors/lib/esm/index.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ var __awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar _a;\n\n/**\n * The class is a simple implementation of a deferred promise with optional timeout functionality,\n * which can be useful when dealing with asynchronous tasks.\n *\n */ class Web3DeferredPromise {\n    /**\n     *\n     * @param timeout - (optional) The timeout in milliseconds.\n     * @param eagerStart - (optional) If true, the timer starts as soon as the promise is created.\n     * @param timeoutMessage - (optional) The message to include in the timeout erro that is thrown when the promise times out.\n     */ constructor({ timeout, eagerStart, timeoutMessage } = {\n        timeout: 0,\n        eagerStart: false,\n        timeoutMessage: \"DeferredPromise timed out\"\n    }){\n        // public tag to treat object as promise by different libs\n        // eslint-disable-next-line @typescript-eslint/prefer-as-const\n        this[_a] = \"Promise\";\n        this._state = \"pending\";\n        this._promise = new Promise((resolve, reject)=>{\n            this._resolve = resolve;\n            this._reject = reject;\n        });\n        this._timeoutMessage = timeoutMessage;\n        this._timeoutInterval = timeout;\n        if (eagerStart) {\n            this.startTimer();\n        }\n    }\n    /**\n     * Returns the current state of the promise.\n     * @returns 'pending' | 'fulfilled' | 'rejected'\n     */ get state() {\n        return this._state;\n    }\n    /**\n     *\n     * @param onfulfilled - (optional) The callback to execute when the promise is fulfilled.\n     * @param onrejected  - (optional) The callback to execute when the promise is rejected.\n     * @returns\n     */ then(onfulfilled, onrejected) {\n        return __awaiter(this, void 0, void 0, function*() {\n            return this._promise.then(onfulfilled, onrejected);\n        });\n    }\n    /**\n     *\n     * @param onrejected - (optional) The callback to execute when the promise is rejected.\n     * @returns\n     */ catch(// eslint-disable-next-line @typescript-eslint/no-explicit-any\n    onrejected) {\n        return __awaiter(this, void 0, void 0, function*() {\n            return this._promise.catch(onrejected);\n        });\n    }\n    /**\n     *\n     * @param onfinally - (optional) The callback to execute when the promise is settled (fulfilled or rejected).\n     * @returns\n     */ finally(onfinally) {\n        return __awaiter(this, void 0, void 0, function*() {\n            return this._promise.finally(onfinally);\n        });\n    }\n    /**\n     * Resolves the current promise.\n     * @param value - The value to resolve the promise with.\n     */ resolve(value) {\n        this._resolve(value);\n        this._state = \"fulfilled\";\n        this._clearTimeout();\n    }\n    /**\n     * Rejects the current promise.\n     * @param reason - The reason to reject the promise with.\n     */ reject(reason) {\n        this._reject(reason);\n        this._state = \"rejected\";\n        this._clearTimeout();\n    }\n    /**\n     * Starts the timeout timer for the promise.\n     */ startTimer() {\n        if (this._timeoutInterval && this._timeoutInterval > 0) {\n            this._timeoutId = setTimeout(this._checkTimeout.bind(this), this._timeoutInterval);\n        }\n    }\n    _checkTimeout() {\n        if (this._state === \"pending\" && this._timeoutId) {\n            this.reject(new web3_errors__WEBPACK_IMPORTED_MODULE_0__.OperationTimeoutError(this._timeoutMessage));\n        }\n    }\n    _clearTimeout() {\n        if (this._timeoutId) {\n            clearTimeout(this._timeoutId);\n        }\n    }\n}\n_a = Symbol.toStringTag; //# sourceMappingURL=web3_deferred_promise.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-utils/lib/esm/web3_deferred_promise.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-utils/lib/esm/web3_eip1193_provider.js":
/*!******************************************************************!*\
  !*** ./node_modules/web3-utils/lib/esm/web3_eip1193_provider.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Eip1193Provider: () => (/* binding */ Eip1193Provider)\n/* harmony export */ });\n/* harmony import */ var web3_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-types */ \"(ssr)/./node_modules/web3-types/lib/esm/index.js\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! events */ \"events\");\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-errors */ \"(ssr)/./node_modules/web3-errors/lib/esm/index.js\");\n/* harmony import */ var _json_rpc_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./json_rpc.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/json_rpc.js\");\nvar __awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ \n\n\n\n/**\n * This is an abstract class, which extends {@link Web3BaseProvider} class. This class is used to implement a provider that adheres to the EIP-1193 standard for Ethereum providers.\n */ class Eip1193Provider extends web3_types__WEBPACK_IMPORTED_MODULE_0__.Web3BaseProvider {\n    constructor(){\n        super(...arguments);\n        this._eventEmitter = new events__WEBPACK_IMPORTED_MODULE_1__.EventEmitter();\n        this._chainId = \"\";\n        this._accounts = [];\n    }\n    _getChainId() {\n        var _a;\n        return __awaiter(this, void 0, void 0, function*() {\n            const data = yield this.request((0,_json_rpc_js__WEBPACK_IMPORTED_MODULE_3__.toPayload)({\n                method: \"eth_chainId\",\n                params: []\n            }));\n            return (_a = data === null || data === void 0 ? void 0 : data.result) !== null && _a !== void 0 ? _a : \"\";\n        });\n    }\n    _getAccounts() {\n        var _a;\n        return __awaiter(this, void 0, void 0, function*() {\n            const data = yield this.request((0,_json_rpc_js__WEBPACK_IMPORTED_MODULE_3__.toPayload)({\n                method: \"eth_accounts\",\n                params: []\n            }));\n            return (_a = data === null || data === void 0 ? void 0 : data.result) !== null && _a !== void 0 ? _a : [];\n        });\n    }\n    _onConnect() {\n        Promise.all([\n            this._getChainId().then((chainId)=>{\n                if (chainId !== this._chainId) {\n                    this._chainId = chainId;\n                    this._eventEmitter.emit(\"chainChanged\", this._chainId);\n                }\n            }).catch((err)=>{\n                // todo: add error handler\n                console.error(err);\n            }),\n            this._getAccounts().then((accounts)=>{\n                if (!(this._accounts.length === accounts.length && accounts.every((v)=>accounts.includes(v)))) {\n                    this._accounts = accounts;\n                    this._onAccountsChanged();\n                }\n            }).catch((err)=>{\n                // todo: add error handler\n                // eslint-disable-next-line no-console\n                console.error(err);\n            })\n        ]).then(()=>this._eventEmitter.emit(\"connect\", {\n                chainId: this._chainId\n            })).catch((err)=>{\n            // todo: add error handler\n            // eslint-disable-next-line no-console\n            console.error(err);\n        });\n    }\n    // todo this must be ProvideRpcError with a message too\n    _onDisconnect(code, data) {\n        this._eventEmitter.emit(\"disconnect\", new web3_errors__WEBPACK_IMPORTED_MODULE_2__.EIP1193ProviderRpcError(code, data));\n    }\n    _onAccountsChanged() {\n        // get chainId and safe to local\n        this._eventEmitter.emit(\"accountsChanged\", this._accounts);\n    }\n} //# sourceMappingURL=web3_eip1193_provider.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-utils/lib/esm/web3_eip1193_provider.js\n");

/***/ })

};
;